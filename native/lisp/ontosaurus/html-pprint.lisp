;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

;;; html-pprint.lisp

#|
 +---------------------------- BEGIN LICENSE BLOCK ---------------------------+
 |                                                                            |
 | Version: MPL 1.1/GPL 2.0/LGPL 2.1                                          |
 |                                                                            |
 | The contents of this file are subject to the Mozilla Public License        |
 | Version 1.1 (the "License"); you may not use this file except in           |
 | compliance with the License. You may obtain a copy of the License at       |
 | http://www.mozilla.org/MPL/                                                |
 |                                                                            |
 | Software distributed under the License is distributed on an "AS IS" basis, |
 | WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License   |
 | for the specific language governing rights and limitations under the       |
 | License.                                                                   |
 |                                                                            |
 | The Original Code is the PowerLoom KR&R System.                            |
 |                                                                            |
 | The Initial Developer of the Original Code is                              |
 | UNIVERSITY OF SOUTHERN CALIFORNIA, INFORMATION SCIENCES INSTITUTE          |
 | 4676 Admiralty Way, Marina Del Rey, California 90292, U.S.A.               |
 |                                                                            |
 | Portions created by the Initial Developer are Copyright (C) 2000-2014      |
 | the Initial Developer. All Rights Reserved.                                |
 |                                                                            |
 | Contributor(s):                                                            |
 |                                                                            |
 | Alternatively, the contents of this file may be used under the terms of    |
 | either the GNU General Public License Version 2 or later (the "GPL"), or   |
 | the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),   |
 | in which case the provisions of the GPL or the LGPL are applicable instead |
 | of those above. If you wish to allow use of your version of this file only |
 | under the terms of either the GPL or the LGPL, and not to allow others to  |
 | use your version of this file under the terms of the MPL, indicate your    |
 | decision by deleting the provisions above and replace them with the notice |
 | and other provisions required by the GPL or the LGPL. If you do not delete |
 | the provisions above, a recipient may use your version of this file under  |
 | the terms of any one of the MPL, the GPL or the LGPL.                      |
 |                                                                            |
 +----------------------------- END LICENSE BLOCK ----------------------------+
|#

(CL:IN-PACKAGE "STELLA")

;;; Auxiliary variables:

(CL:DEFVAR SGT-HTML-PPRINT-STELLA-LITERAL-WRAPPER NULL)
(CL:DEFVAR SGT-HTML-PPRINT-LOGIC-PATTERN-VARIABLE NULL)
(CL:DEFVAR SGT-HTML-PPRINT-LOGIC-SKOLEM NULL)
(CL:DEFVAR SGT-HTML-PPRINT-LOGIC-LOGIC-OBJECT NULL)
(CL:DEFVAR SGT-HTML-PPRINT-STELLA-GENERALIZED-SYMBOL NULL)
(CL:DEFVAR SGT-HTML-PPRINT-STELLA-MODULE NULL)
(CL:DEFVAR SGT-HTML-PPRINT-LOGIC-LOGIC-THING NULL)
(CL:DEFVAR SGT-HTML-PPRINT-STELLA-THING NULL)
(CL:DEFVAR SGT-HTML-PPRINT-STELLA-MUTABLE-STRING-WRAPPER NULL)
(CL:DEFVAR SGT-HTML-PPRINT-LOGIC-DESCRIPTION NULL)
(CL:DEFVAR SYM-HTML-PPRINT-ONTOSAURUS-STARTUP-HTML-PPRINT NULL)
(CL:DEFVAR SYM-HTML-PPRINT-STELLA-METHOD-STARTUP-CLASSNAME NULL)

;;; Forward declarations:

(CL:DECLAIM (CL:SPECIAL *STARTUP-TIME-PHASE* *MODULE* *PRINTREADABLY?* VALUE-OF-SEPARATOR *ONTOSAURUS-URL-ACTION*))

;;; (DEFUN PPRINT-ATOMIC-OBJECT-FOR-HTML-DEFINITION ...)

(CL:DEFUN PPRINT-ATOMIC-OBJECT-FOR-HTML-DEFINITION (SELF STREAM)
  (CL:WHEN (CL:NOT (CL:EQ SELF NULL))
   (CL:COND
    ((SUBTYPE-OF-SYMBOL? (SAFE-PRIMARY-TYPE SELF))
     (CL:PROGN
      (CL:LET* ((OBJECT (GET-INSTANCE SELF)))
       (CL:IF (CL:NOT (CL:EQ OBJECT NULL)) (PPRINT-ATOMIC-OBJECT-FOR-HTML OBJECT STREAM)
        (PPRINT-ATOMIC-OBJECT-FOR-HTML SELF STREAM)))))
    (CL:T (PPRINT-ATOMIC-OBJECT-FOR-HTML SELF STREAM)))))

;;; (DEFUN PPRINT-ATOMIC-OBJECT-FOR-HTML ...)

(CL:DEFUN PPRINT-ATOMIC-OBJECT-FOR-HTML (SELF STREAM)
  (CL:WHEN (CL:NOT (CL:EQ SELF NULL))
   (CL:LET* ((TEST-VALUE-000 (SAFE-PRIMARY-TYPE SELF)))
    (CL:COND
     ((SUBTYPE-OF? TEST-VALUE-000 SGT-HTML-PPRINT-STELLA-LITERAL-WRAPPER)
      (CL:PROGN (PPRINT-LITERAL-WRAPPER-FOR-HTML SELF STREAM)))
     ((SUBTYPE-OF? TEST-VALUE-000 SGT-HTML-PPRINT-LOGIC-PATTERN-VARIABLE)
      (CL:PROGN (PPRINT-ATOMIC-OBJECT SELF STREAM)))
     ((SUBTYPE-OF? TEST-VALUE-000 SGT-HTML-PPRINT-LOGIC-SKOLEM)
      (CL:PROGN
       (CL:COND
        ((CL:NOT (CL:EQ (NATIVE-VALUE-OF SELF) NULL)) (PPRINT-ATOMIC-OBJECT-FOR-HTML (NATIVE-VALUE-OF SELF) STREAM))
        ((CL:NOT (CL:EQ (INNERMOST-OF SELF) NULL))
         (CL:IF (CL:EQ (INNERMOST-OF SELF) SELF)
          (CL:IF (CL:NOT (CL:EQ (%DEFINING-PROPOSITION SELF) NULL))
           (PPRINT-FUNCTION-TERM (%DEFINING-PROPOSITION SELF) STREAM)
           (CL:PROGN (%%PRINT-STREAM STREAM "<FONT COLOR='#666666'>")
            (%%PRINT-STREAM STREAM (STRING-DOWNCASE (GET-SKOLEM-PRINT-NAME SELF))) (%%PRINT-STREAM STREAM "</FONT>")))
          (CL:PROGN
           (CL:PROGN (%%PRINT-STREAM STREAM "<FONT COLOR='#996633'>")
            (%%PRINT-STREAM STREAM (STRING-DOWNCASE (GET-SKOLEM-PRINT-NAME SELF)))
            (%%PRINT-STREAM STREAM VALUE-OF-SEPARATOR) (%%PRINT-STREAM STREAM "</FONT>"))
           (PPRINT-OBJECT (INNERMOST-OF SELF) STREAM))))
        (CL:T (%%PRINT-STREAM STREAM (GENERATE-SKOLEM SELF))))))
     ((SUBTYPE-OF? TEST-VALUE-000 SGT-HTML-PPRINT-LOGIC-LOGIC-OBJECT)
      (CL:PROGN
       (CL:IF (CL:NOT (CL:EQ (%SURROGATE-VALUE-INVERSE SELF) NULL)) (PRINT-ONTOSAURUS-URL SELF STREAM)
        (%%PRINT-STREAM STREAM "Unamed_Object"))))
     ((SUBTYPE-OF-SURROGATE? TEST-VALUE-000)
      (CL:PROGN
       (CL:IF (CL:NOT (CL:EQ (%SURROGATE-VALUE SELF) NULL)) (PPRINT-OBJECT (%SURROGATE-VALUE SELF) STREAM)
        (%%PRINT-STREAM STREAM (OPERATOR-TO-STRING SELF)))))
     ((SUBTYPE-OF? TEST-VALUE-000 SGT-HTML-PPRINT-STELLA-GENERALIZED-SYMBOL)
      (CL:PROGN (WRITE-HTML-QUOTING-SPECIAL-CHARACTERS STREAM (%SYMBOL-NAME SELF))))
     ((SUBTYPE-OF? TEST-VALUE-000 SGT-HTML-PPRINT-STELLA-MODULE)
      (CL:PROGN (HTML-WRITE-HREF STREAM *ONTOSAURUS-URL-ACTION* "context" SELF)))
     ((SUBTYPE-OF? TEST-VALUE-000 SGT-HTML-PPRINT-LOGIC-LOGIC-THING)
      (CL:PROGN
       (CL:HANDLER-CASE (PPRINT-OBJECT (GENERATE-TERM SELF) STREAM)
        (TERM-GENERATION-EXCEPTION () (%%PRINT-STREAM STREAM SELF)))))
     ((SUBTYPE-OF? TEST-VALUE-000 SGT-HTML-PPRINT-STELLA-THING)
      (CL:PROGN
       (CL:IF (CL:NOT (CL:EQ (%SURROGATE-VALUE-INVERSE SELF) NULL))
        (%%PRINT-STREAM STREAM (%SYMBOL-NAME (%SURROGATE-VALUE-INVERSE SELF))) (%%PRINT-STREAM STREAM SELF))))
     (CL:T (%%PRINT-STREAM STREAM SELF))))))

;;; (DEFUN PPRINT-LITERAL-WRAPPER-FOR-HTML ...)

(CL:DEFUN PPRINT-LITERAL-WRAPPER-FOR-HTML (SELF STREAM)
  (CL:LET* ((TEST-VALUE-000 (SAFE-PRIMARY-TYPE SELF)))
   (CL:COND ((SUBTYPE-OF-BOOLEAN? TEST-VALUE-000) (CL:PROGN (%%PRINT-STREAM STREAM (%WRAPPER-VALUE SELF))))
    ((SUBTYPE-OF-INTEGER? TEST-VALUE-000) (CL:PROGN (%%PRINT-STREAM STREAM (%WRAPPER-VALUE SELF))))
    ((SUBTYPE-OF-FLOAT? TEST-VALUE-000) (CL:PROGN (%%PRINT-STREAM STREAM (%WRAPPER-VALUE SELF))))
    ((SUBTYPE-OF-CHARACTER? TEST-VALUE-000)
     (CL:PROGN (WRITE-HTML-CHARACTER-QUOTING-SPECIAL-CHARACTERS STREAM (%WRAPPER-VALUE SELF))))
    ((SUBTYPE-OF-STRING? TEST-VALUE-000)
     (CL:PROGN (CL:WHEN *PRINTREADABLY?* (%%PRINT-STREAM STREAM "\""))
      (WRITE-HTML-QUOTING-SPECIAL-CHARACTERS STREAM (%WRAPPER-VALUE SELF))
      (CL:WHEN *PRINTREADABLY?* (%%PRINT-STREAM STREAM "\""))))
    ((SUBTYPE-OF? TEST-VALUE-000 SGT-HTML-PPRINT-STELLA-MUTABLE-STRING-WRAPPER)
     (CL:PROGN (CL:WHEN *PRINTREADABLY?* (%%PRINT-STREAM STREAM "\""))
      (WRITE-HTML-QUOTING-SPECIAL-CHARACTERS STREAM
       (CL:LET ((S (%WRAPPER-VALUE SELF))) (CL:DECLARE (CL:TYPE CL:SIMPLE-STRING S)) (CL:THE CL:SIMPLE-STRING S)))
      (CL:WHEN *PRINTREADABLY?* (%%PRINT-STREAM STREAM "\""))))
    (CL:T
     (CL:LET* ((STREAM-000 (NEW-OUTPUT-STRING-STREAM)))
      (%%PRINT-STREAM (%NATIVE-STREAM STREAM-000) "`" TEST-VALUE-000 "' is not a valid case option")
      (CL:ERROR (NEW-STELLA-EXCEPTION (THE-STRING-READER STREAM-000))))))))

;;; (DEFSPECIAL *ONTOSAURUS-URL-ACTION* ...)

(CL:DEFVAR *ONTOSAURUS-URL-ACTION* "show"
  "The action parameter for URL printing")
(CL:DECLAIM (CL:TYPE CL:SIMPLE-STRING *ONTOSAURUS-URL-ACTION*))

;;; (DEFUN (LOGIC-OBJECT-DISPLAY-TYPE STRING) ...)

(CL:DECLAIM (CL:FTYPE (CL:FUNCTION (CL:T) CL:SIMPLE-STRING) LOGIC-OBJECT-DISPLAY-TYPE))
(CL:DEFUN LOGIC-OBJECT-DISPLAY-TYPE (OBJ)
  (CL:COND ((SUBTYPE-OF? (SAFE-PRIMARY-TYPE OBJ) SGT-HTML-PPRINT-LOGIC-DESCRIPTION) (CL:PROGN "relation"))
   (CL:T "object")))

;;; (DEFUN PRINT-ONTOSAURUS-URL ...)

(CL:DEFUN PRINT-ONTOSAURUS-URL (THE-OBJECT NATIVESTREAM)
  "Prints a URL following PowerLoom Ontosaurus conventions."
  (HTML-WRITE-HREF NATIVESTREAM *ONTOSAURUS-URL-ACTION* (LOGIC-OBJECT-DISPLAY-TYPE THE-OBJECT) THE-OBJECT))

(CL:DEFUN STARTUP-HTML-PPRINT ()
  (CL:LET* ((*MODULE* (GET-STELLA-MODULE "/ONTOSAURUS" (> *STARTUP-TIME-PHASE* 1))) (*CONTEXT* *MODULE*))
   (CL:DECLARE (CL:SPECIAL *MODULE* *CONTEXT*))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 2)
    (CL:SETQ SGT-HTML-PPRINT-STELLA-LITERAL-WRAPPER
     (INTERN-RIGID-SYMBOL-WRT-MODULE "LITERAL-WRAPPER" (GET-STELLA-MODULE "/STELLA" CL:T) 1))
    (CL:SETQ SGT-HTML-PPRINT-LOGIC-PATTERN-VARIABLE
     (INTERN-RIGID-SYMBOL-WRT-MODULE "PATTERN-VARIABLE" (GET-STELLA-MODULE "/LOGIC" CL:T) 1))
    (CL:SETQ SGT-HTML-PPRINT-LOGIC-SKOLEM
     (INTERN-RIGID-SYMBOL-WRT-MODULE "SKOLEM" (GET-STELLA-MODULE "/LOGIC" CL:T) 1))
    (CL:SETQ SGT-HTML-PPRINT-LOGIC-LOGIC-OBJECT
     (INTERN-RIGID-SYMBOL-WRT-MODULE "LOGIC-OBJECT" (GET-STELLA-MODULE "/LOGIC" CL:T) 1))
    (CL:SETQ SGT-HTML-PPRINT-STELLA-GENERALIZED-SYMBOL
     (INTERN-RIGID-SYMBOL-WRT-MODULE "GENERALIZED-SYMBOL" (GET-STELLA-MODULE "/STELLA" CL:T) 1))
    (CL:SETQ SGT-HTML-PPRINT-STELLA-MODULE
     (INTERN-RIGID-SYMBOL-WRT-MODULE "MODULE" (GET-STELLA-MODULE "/STELLA" CL:T) 1))
    (CL:SETQ SGT-HTML-PPRINT-LOGIC-LOGIC-THING
     (INTERN-RIGID-SYMBOL-WRT-MODULE "LOGIC-THING" (GET-STELLA-MODULE "/LOGIC" CL:T) 1))
    (CL:SETQ SGT-HTML-PPRINT-STELLA-THING
     (INTERN-RIGID-SYMBOL-WRT-MODULE "THING" (GET-STELLA-MODULE "/STELLA" CL:T) 1))
    (CL:SETQ SGT-HTML-PPRINT-STELLA-MUTABLE-STRING-WRAPPER
     (INTERN-RIGID-SYMBOL-WRT-MODULE "MUTABLE-STRING-WRAPPER" (GET-STELLA-MODULE "/STELLA" CL:T) 1))
    (CL:SETQ SGT-HTML-PPRINT-LOGIC-DESCRIPTION
     (INTERN-RIGID-SYMBOL-WRT-MODULE "DESCRIPTION" (GET-STELLA-MODULE "/LOGIC" CL:T) 1))
    (CL:SETQ SYM-HTML-PPRINT-ONTOSAURUS-STARTUP-HTML-PPRINT
     (INTERN-RIGID-SYMBOL-WRT-MODULE "STARTUP-HTML-PPRINT" NULL 0))
    (CL:SETQ SYM-HTML-PPRINT-STELLA-METHOD-STARTUP-CLASSNAME
     (INTERN-RIGID-SYMBOL-WRT-MODULE "METHOD-STARTUP-CLASSNAME" (GET-STELLA-MODULE "/STELLA" CL:T) 0)))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 6) (FINALIZE-CLASSES))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 7)
    (DEFINE-FUNCTION-OBJECT "PPRINT-ATOMIC-OBJECT-FOR-HTML-DEFINITION"
     "(DEFUN PPRINT-ATOMIC-OBJECT-FOR-HTML-DEFINITION ((SELF OBJECT) (STREAM NATIVE-OUTPUT-STREAM)) :PUBLIC? TRUE)"
     (CL:FUNCTION PPRINT-ATOMIC-OBJECT-FOR-HTML-DEFINITION) NULL)
    (DEFINE-FUNCTION-OBJECT "PPRINT-ATOMIC-OBJECT-FOR-HTML"
     "(DEFUN PPRINT-ATOMIC-OBJECT-FOR-HTML ((SELF OBJECT) (STREAM NATIVE-OUTPUT-STREAM)) :PUBLIC? TRUE)"
     (CL:FUNCTION PPRINT-ATOMIC-OBJECT-FOR-HTML) NULL)
    (DEFINE-FUNCTION-OBJECT "PPRINT-LITERAL-WRAPPER-FOR-HTML"
     "(DEFUN PPRINT-LITERAL-WRAPPER-FOR-HTML ((SELF LITERAL-WRAPPER) (STREAM NATIVE-OUTPUT-STREAM)))"
     (CL:FUNCTION PPRINT-LITERAL-WRAPPER-FOR-HTML) NULL)
    (DEFINE-FUNCTION-OBJECT "LOGIC-OBJECT-DISPLAY-TYPE"
     "(DEFUN (LOGIC-OBJECT-DISPLAY-TYPE STRING) ((OBJ LOGIC-OBJECT)))" (CL:FUNCTION LOGIC-OBJECT-DISPLAY-TYPE) NULL)
    (DEFINE-FUNCTION-OBJECT "PRINT-ONTOSAURUS-URL"
     "(DEFUN PRINT-ONTOSAURUS-URL ((THE-OBJECT LOGIC-OBJECT) (NATIVESTREAM NATIVE-OUTPUT-STREAM)) :PUBLIC? TRUE :DOCUMENTATION \"Prints a URL following PowerLoom Ontosaurus conventions.\")"
     (CL:FUNCTION PRINT-ONTOSAURUS-URL) NULL)
    (DEFINE-FUNCTION-OBJECT "STARTUP-HTML-PPRINT" "(DEFUN STARTUP-HTML-PPRINT () :PUBLIC? TRUE)"
     (CL:FUNCTION STARTUP-HTML-PPRINT) NULL)
    (CL:LET* ((FUNCTION (LOOKUP-FUNCTION SYM-HTML-PPRINT-ONTOSAURUS-STARTUP-HTML-PPRINT)))
     (SET-DYNAMIC-SLOT-VALUE (%DYNAMIC-SLOTS FUNCTION) SYM-HTML-PPRINT-STELLA-METHOD-STARTUP-CLASSNAME
      (WRAP-STRING "_StartupHtmlPprint") NULL-STRING-WRAPPER)))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 8) (FINALIZE-SLOTS) (CLEANUP-UNFINALIZED-CLASSES))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 9) (%IN-MODULE (COPY-CONS-TREE (WRAP-STRING "ONTOSAURUS")))
    (DEFINE-STELLA-GLOBAL-VARIABLE-FROM-STRINGIFIED-SOURCE
     "(DEFSPECIAL *ONTOSAURUS-URL-ACTION* STRING \"show\" :DOCUMENTATION \"The action parameter for URL printing\" :PUBLIC? TRUE)"))))
