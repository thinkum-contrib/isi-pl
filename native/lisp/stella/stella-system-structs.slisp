;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

#|--------------------------------------------------------------------------+
 |                                                                          |
 |  COPYRIGHT (C) UNIVERSITY OF SOUTHERN CALIFORNIA, 1996-2000              | 
 |  University of Southern California, Information Sciences Institute       |
 |  4676 Admiralty Way                                                      |
 |  Marina Del Rey, California 90292                                        |
 |                                                                          |
 |  This software was developed under the terms and conditions of Contract  |
 |  No. N00014-94-C-0245 between the Defense Advanced Research Projects     |
 |  Agency and the University of Southern California, Information Sciences  | 
 |  Institute.  Use and distribution of this software is further subject    |
 |  to the provisions of that contract and any other agreements developed   |
 |  between the user of the software and the University of Southern         |
 |  California, Information Sciences Institute.  It is supplied "AS IS",    |
 |  without any warranties of any kind.  It is furnished only on the basis  |
 |  that any party who receives it indemnifies and holds harmless the       |
 |  parties who furnish and originate it against any claims, demands, or    |
 |  liabilities connected with using it, furnishing it to others or         |
 |  providing it to a third party.  THIS NOTICE MUST NOT BE REMOVED FROM    |
 |  THE SOFTWARE, AND IN THE EVENT THAT THE SOFTWARE IS DIVIDED, IT SHOULD  |
 |  BE ATTACHED TO EVERY PART.                                              |
 |                                                                          |
 +--------------------------------------------------------------------------|#

(CL:IN-PACKAGE "STELLA")


(CL:DEFSTRUCT (OBJECT (:CONC-NAME %OBJECT.) (:INCLUDE CLSYS-ROOT-STRUCT) (:CONSTRUCTOR %MAKE-OBJECT ()) (:COPIER ()) (:PREDICATE ())) "A reflective object that can participate in dynamically-typed
contexts.  Either a STANDARD-OBJECT or a WRAPPER or a GENERIC-OBJECT.
Also, either an OBJECT-WITH-INHERITED-TYPE or an OBJECT-WITH-OWN-TYPE.")

(CL:DEFSTRUCT (REFERENCE-COUNT-OBJECT (:CONC-NAME %REFERENCE-COUNT-OBJECT.) (:INCLUDE OBJECT) (:CONSTRUCTOR %MAKE-REFERENCE-COUNT-OBJECT ()) (:COPIER ()) (:PREDICATE ())) "A reference count objects contains a slot 'reference-count' 
that is incremented whenever the object is assigned to a slot, and decremented
whenever it is deassigned from a slot."
  (REFERENCE-COUNT NULL))

(CL:DEFSTRUCT
 (WRAPPER (:CONC-NAME %WRAPPER.) (:INCLUDE OBJECT)
  (:CONSTRUCTOR %MAKE-WRAPPER ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (CODE-WRAPPER (:CONC-NAME %CODE-WRAPPER.) (:INCLUDE WRAPPER)
  (:CONSTRUCTOR %MAKE-CODE-WRAPPER ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (FUNCTION-CODE-WRAPPER (:CONC-NAME %FUNCTION-CODE-WRAPPER.) (:INCLUDE CODE-WRAPPER) (:CONSTRUCTOR %MAKE-FUNCTION-CODE-WRAPPER ()) (:COPIER ()) (:PREDICATE ())) (WRAPPER-VALUE NULL))

(CL:DEFSTRUCT (METHOD-CODE-WRAPPER (:CONC-NAME %METHOD-CODE-WRAPPER.) (:INCLUDE CODE-WRAPPER) (:CONSTRUCTOR %MAKE-METHOD-CODE-WRAPPER ()) (:COPIER ()) (:PREDICATE ())) (WRAPPER-VALUE NULL))

(CL:DEFSTRUCT
 (LITERAL-WRAPPER (:CONC-NAME %LITERAL-WRAPPER.) (:INCLUDE WRAPPER)
  (:CONSTRUCTOR %MAKE-LITERAL-WRAPPER ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (NUMBER-WRAPPER (:CONC-NAME %NUMBER-WRAPPER.) (:INCLUDE LITERAL-WRAPPER)
  (:CONSTRUCTOR %MAKE-NUMBER-WRAPPER ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (INTEGER-WRAPPER (:CONC-NAME %INTEGER-WRAPPER.) (:INCLUDE NUMBER-WRAPPER) (:CONSTRUCTOR %MAKE-INTEGER-WRAPPER ()) (:COPIER ()) (:PREDICATE ())) (WRAPPER-VALUE NULL))

(CL:DEFSTRUCT (FLOAT-WRAPPER (:CONC-NAME %FLOAT-WRAPPER.) (:INCLUDE NUMBER-WRAPPER) (:CONSTRUCTOR %MAKE-FLOAT-WRAPPER ()) (:COPIER ()) (:PREDICATE ())) (WRAPPER-VALUE NULL))

(CL:DEFSTRUCT (MUTABLE-STRING-WRAPPER (:CONC-NAME %MUTABLE-STRING-WRAPPER.) (:INCLUDE LITERAL-WRAPPER) (:CONSTRUCTOR %MAKE-MUTABLE-STRING-WRAPPER ()) (:COPIER ()) (:PREDICATE ())) (WRAPPER-VALUE NULL))

(CL:DEFSTRUCT (CHARACTER-WRAPPER (:CONC-NAME %CHARACTER-WRAPPER.) (:INCLUDE LITERAL-WRAPPER) (:CONSTRUCTOR %MAKE-CHARACTER-WRAPPER ()) (:COPIER ()) (:PREDICATE ())) (WRAPPER-VALUE NULL))

(CL:DEFSTRUCT (BOOLEAN-WRAPPER (:CONC-NAME %BOOLEAN-WRAPPER.) (:INCLUDE LITERAL-WRAPPER) (:CONSTRUCTOR %MAKE-BOOLEAN-WRAPPER ()) (:COPIER ()) (:PREDICATE ())) "Objectified version of the BOOLEAN data type.  The NULL
value can be used for a 3-valued semantics (see THREE-VALUED-BOOLEAN)."
  (WRAPPER-VALUE NULL))

(CL:DEFSTRUCT (STRING-WRAPPER (:CONC-NAME %STRING-WRAPPER.) (:INCLUDE LITERAL-WRAPPER) (:CONSTRUCTOR %MAKE-STRING-WRAPPER ()) (:COPIER ()) (:PREDICATE ())) (WRAPPER-VALUE NULL))

(CL:DEFSTRUCT (VERBATIM-STRING-WRAPPER (:CONC-NAME %VERBATIM-STRING-WRAPPER.) (:INCLUDE STRING-WRAPPER) (:CONSTRUCTOR %MAKE-VERBATIM-STRING-WRAPPER ()) (:COPIER ()) (:PREDICATE ())) "Wrapper class used to hold verbatim native code strings.")

(CL:DEFSTRUCT (STANDARD-OBJECT (:CONC-NAME %STANDARD-OBJECT.) (:INCLUDE OBJECT) (:CONSTRUCTOR %MAKE-STANDARD-OBJECT ()) (:COPIER ()) (:PREDICATE ())) "Object that used to find its type stored in a :class slot.
By reimplementing 'primary-type' as a method, the justification for this
class went away, but we'll keep it for now to keep things working.")

(CL:DEFSTRUCT (CONS (:CONC-NAME %CONS.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-CONS ()) (:COPIER ()) (:PREDICATE ())) (VALUE NULL)
  (REST NULL))

(CL:DEFSTRUCT (KV-CONS (:CONC-NAME %KV-CONS.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-KV-CONS ()) (:COPIER ()) (:PREDICATE ())) (KEY NULL)
  (VALUE NULL)
  (REST NULL))

(CL:DEFSTRUCT (DEMON (:CONC-NAME %DEMON.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-DEMON ()) (:COPIER ()) (:PREDICATE ())) (DEMON-NAME NULL)
  (DEMON-ACTION NULL)
  (DEMON-CLASS-REFS NULL)
  (DEMON-SLOT-REFS NULL)
  (DEMON-CODE NULL)
  (DEMON-METHOD NULL)
  (DEMON-DOCUMENTATION NULL)
  (DEMON-GUARD? NULL)
  (DEMON-ALL? NULL)
  (DEMON-INHERIT? NULL))

(CL:DEFSTRUCT (CONTEXT-SENSITIVE-OBJECT (:CONC-NAME %CONTEXT-SENSITIVE-OBJECT.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-CONTEXT-SENSITIVE-OBJECT ()) (:COPIER ()) (:PREDICATE ())) "Context sensitive objects inherit a slot 'home-context'
that enables context-dependent access machinery to determine the
visibility of objects from modules."
  (HOME-CONTEXT NULL))

(CL:DEFSTRUCT (GENERALIZED-SYMBOL (:CONC-NAME %GENERALIZED-SYMBOL.) (:INCLUDE CONTEXT-SENSITIVE-OBJECT) (:CONSTRUCTOR %MAKE-GENERALIZED-SYMBOL ()) (:COPIER ()) (:PREDICATE ())) (SYMBOL-NAME NULL)
  (SYMBOL-ID NULL))

(CL:DEFSTRUCT (SURROGATE (:CONC-NAME %SURROGATE.) (:INCLUDE GENERALIZED-SYMBOL) (:CONSTRUCTOR %MAKE-SURROGATE ()) (:COPIER ()) (:PREDICATE ())) "Rigid surrogate."
  (SURROGATE-VALUE NULL))

(CL:DEFSTRUCT
 (KEYWORD (:CONC-NAME %KEYWORD.) (:INCLUDE GENERALIZED-SYMBOL)
  (:CONSTRUCTOR %MAKE-KEYWORD ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (SYMBOL (:CONC-NAME %SYMBOL.) (:INCLUDE GENERALIZED-SYMBOL) (:CONSTRUCTOR %MAKE-SYMBOL ()) (:COPIER ()) (:PREDICATE ())) (SYMBOL-SLOT-OFFSET NULL)
  (SYMBOL-VALUE-AND-PLIST NULL))

(CL:DEFSTRUCT
 (COMPOUND-TYPE-SPECIFIER (:CONC-NAME %COMPOUND-TYPE-SPECIFIER.)
  (:INCLUDE STANDARD-OBJECT)
  (:CONSTRUCTOR %MAKE-COMPOUND-TYPE-SPECIFIER ()) (:COPIER ())
  (:PREDICATE ())))

(CL:DEFSTRUCT (PARAMETRIC-TYPE-SPECIFIER (:CONC-NAME %PARAMETRIC-TYPE-SPECIFIER.) (:INCLUDE COMPOUND-TYPE-SPECIFIER) (:CONSTRUCTOR %MAKE-PARAMETRIC-TYPE-SPECIFIER ()) (:COPIER ()) (:PREDICATE ())) (SPECIFIER-BASE-TYPE NULL)
  (SPECIFIER-PARAMETER-TYPES NULL)
  (SPECIFIER-DIMENSIONS NULL))

(CL:DEFSTRUCT (ANCHORED-TYPE-SPECIFIER (:CONC-NAME %ANCHORED-TYPE-SPECIFIER.) (:INCLUDE COMPOUND-TYPE-SPECIFIER) (:CONSTRUCTOR %MAKE-ANCHORED-TYPE-SPECIFIER ()) (:COPIER ()) (:PREDICATE ())) (SPECIFIER-PARAMETER-NAME NULL))

(CL:DEFSTRUCT (QUOTED-EXPRESSION (:CONC-NAME %QUOTED-EXPRESSION.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-QUOTED-EXPRESSION ()) (:COPIER ()) (:PREDICATE ())) (QUOTATION-TABLE-OFFSET NULL))

(CL:DEFSTRUCT (INTERVAL (:CONC-NAME %INTERVAL.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-INTERVAL ()) (:COPIER ()) (:PREDICATE ())) (LOWER-BOUND NULL)
  (UPPER-BOUND NULL))

(CL:DEFSTRUCT (TAXONOMY-NODE (:CONC-NAME %TAXONOMY-NODE.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-TAXONOMY-NODE ()) (:COPIER ()) (:PREDICATE ())) (NATIVE-OBJECT NULL)
  (LABEL NULL)
  (INTERVALS NULL)
  (INITIAL-INTERVAL NULL)
  (FIRST-INTERVAL-LOWER-BOUND NULL)
  (FIRST-INTERVAL-UPPER-BOUND NULL)
  (PARENTS NULL)
  (CHILDREN NULL)
  (TOTAL-ANCESTORS NULL)
  (TREE-CHILDREN NULL)
  (MARKER NULL))

(CL:DEFSTRUCT (TAXONOMY-GRAPH (:CONC-NAME %TAXONOMY-GRAPH.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-TAXONOMY-GRAPH ()) (:COPIER ()) (:PREDICATE ())) (RENUMBER-IF-OUT-OF-NUMBERS? NULL)
  (RENUMBER-RATIO NULL)
  (INCREMENTAL-MODE? NULL)
  (LARGEST-POSTORDER-NUMBER NULL)
  (NUMBER-OF-NODES NULL)
  (NUMBER-OF-FOREIGN-INTERVAL-NODES NULL)
  (ROOTS NULL)
  (BROKEN-LINKS NULL)
  (ADDED-LINKS NULL)
  (REMOVED-LINKS NULL))

(CL:DEFSTRUCT (SYSTEM-DEFINITION (:CONC-NAME %SYSTEM-DEFINITION.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-SYSTEM-DEFINITION ()) (:COPIER ()) (:PREDICATE ())) "The System-Definition class is used to define systems of files
that constitute Stella applications."
  (NAME NULL)
  (DIRECTORY NULL)
  (FILES NULL)
  (LISP-ONLY-FILES NULL)
  (CPP-ONLY-FILES NULL)
  (JAVA-ONLY-FILES NULL)
  (PREPROCESSED-FILES NULL)
  (REQUIRED-SYSTEMS NULL)
  (LOADED? NULL)
  (UP-TO-DATE? NULL)
  (CARDINAL-MODULE NULL)
  (SOURCE-ROOT-DIRECTORY NULL)
  (NATIVE-ROOT-DIRECTORY NULL)
  (BINARY-ROOT-DIRECTORY NULL)
  (BANNER NULL)
  (PRODUCTION-SETTINGS NULL)
  (DEVELOPMENT-SETTINGS NULL)
  (FINALIZATION-FUNCTION NULL))

(CL:DEFSTRUCT (STREAM (:CONC-NAME %STREAM.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-STREAM ()) (:COPIER ()) (:PREDICATE ())) (STATE NULL))

(CL:DEFSTRUCT (OUTPUT-STREAM (:CONC-NAME %OUTPUT-STREAM.) (:INCLUDE STREAM) (:CONSTRUCTOR %MAKE-OUTPUT-STREAM ()) (:COPIER ()) (:PREDICATE ())) (NATIVE-STREAM NULL))

(CL:DEFSTRUCT (OUTPUT-FILE-STREAM (:CONC-NAME %OUTPUT-FILE-STREAM.) (:INCLUDE OUTPUT-STREAM) (:CONSTRUCTOR %MAKE-OUTPUT-FILE-STREAM ()) (:COPIER ()) (:PREDICATE ())) (FILENAME NULL)
  (IF-EXISTS-ACTION NULL))

(CL:DEFSTRUCT (OUTPUT-STRING-STREAM (:CONC-NAME %OUTPUT-STRING-STREAM.) (:INCLUDE OUTPUT-STREAM) (:CONSTRUCTOR %MAKE-OUTPUT-STRING-STREAM ()) (:COPIER ()) (:PREDICATE ())) (THE-STRING NULL))

(CL:DEFSTRUCT (INPUT-STREAM (:CONC-NAME %INPUT-STREAM.) (:INCLUDE STREAM) (:CONSTRUCTOR %MAKE-INPUT-STREAM ()) (:COPIER ()) (:PREDICATE ())) (NATIVE-STREAM NULL)
  (ECHO-STREAM NULL)
  (TOKENIZER-STATE NULL))

(CL:DEFSTRUCT (INPUT-FILE-STREAM (:CONC-NAME %INPUT-FILE-STREAM.) (:INCLUDE INPUT-STREAM) (:CONSTRUCTOR %MAKE-INPUT-FILE-STREAM ()) (:COPIER ()) (:PREDICATE ())) (FILENAME NULL)
  (IF-NOT-EXISTS-ACTION NULL))

(CL:DEFSTRUCT (INPUT-STRING-STREAM (:CONC-NAME %INPUT-STRING-STREAM.) (:INCLUDE INPUT-STREAM) (:CONSTRUCTOR %MAKE-INPUT-STRING-STREAM ()) (:COPIER ()) (:PREDICATE ())) (THE-STRING NULL))

(CL:DEFSTRUCT (TRANSLATION-UNIT (:CONC-NAME %TRANSLATION-UNIT.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-TRANSLATION-UNIT ()) (:COPIER ()) (:PREDICATE ())) (TU-HOME-MODULE NULL)
  (THE-OBJECT NULL)
  (CATEGORY NULL)
  (ANNOTATION NULL)
  (AUXILIARY? NULL)
  (CODE-REGISTER NULL)
  (TRANSLATION NULL)
  (REFERENCED-GLOBALS NULL))

(CL:DEFSTRUCT (MEMOIZATION-TABLE (:CONC-NAME %MEMOIZATION-TABLE.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-MEMOIZATION-TABLE ()) (:COPIER ()) (:PREDICATE ())) "Table that maps argument values onto computed results for
one individual memoization site."
  (HASH-TABLE NULL)
  (TABLE-NAME NULL)
  (CURRENT-TIMESTAMP NULL)
  (TIMESTAMPS NULL))

(CL:DEFSTRUCT (MRU-MEMOIZATION-TABLE (:CONC-NAME %MRU-MEMOIZATION-TABLE.) (:INCLUDE MEMOIZATION-TABLE) (:CONSTRUCTOR %MAKE-MRU-MEMOIZATION-TABLE ()) (:COPIER ()) (:PREDICATE ())) (MRU-BUCKETS-VECTOR NULL)
  (LRU-BUCKETS-VECTOR NULL)
  (MRU-BUCKETS NULL)
  (LRU-BUCKETS NULL)
  (MRU-TIMESTAMP NULL)
  (LRU-TIMESTAMP NULL)
  (NOF-BUCKETS NULL)
  (FREE-ENTRIES NULL)
  (MAX-ENTRIES NULL))

(CL:DEFSTRUCT
 (ABSTRACT-COLLECTION (:CONC-NAME %ABSTRACT-COLLECTION.)
  (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-ABSTRACT-COLLECTION ())
  (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (COLLECTION (:CONC-NAME %COLLECTION.) (:INCLUDE ABSTRACT-COLLECTION)
  (:CONSTRUCTOR %MAKE-COLLECTION ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (ABSTRACT-DICTIONARY (:CONC-NAME %ABSTRACT-DICTIONARY.)
  (:INCLUDE ABSTRACT-COLLECTION)
  (:CONSTRUCTOR %MAKE-ABSTRACT-DICTIONARY ()) (:COPIER ())
  (:PREDICATE ())))

(CL:DEFSTRUCT (ABSTRACT-HASH-TABLE (:CONC-NAME %ABSTRACT-HASH-TABLE.) (:INCLUDE ABSTRACT-DICTIONARY) (:CONSTRUCTOR %MAKE-ABSTRACT-HASH-TABLE ()) (:COPIER ()) (:PREDICATE ())) (THE-HASH-TABLE NULL))

(CL:DEFSTRUCT
 (HASH-TABLE (:CONC-NAME %HASH-TABLE.) (:INCLUDE ABSTRACT-HASH-TABLE)
  (:CONSTRUCTOR %MAKE-HASH-TABLE ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (INTEGER-HASH-TABLE (:CONC-NAME %INTEGER-HASH-TABLE.)
  (:INCLUDE ABSTRACT-HASH-TABLE)
  (:CONSTRUCTOR %MAKE-INTEGER-HASH-TABLE ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (FLOAT-HASH-TABLE (:CONC-NAME %FLOAT-HASH-TABLE.)
  (:INCLUDE ABSTRACT-HASH-TABLE) (:CONSTRUCTOR %MAKE-FLOAT-HASH-TABLE ())
  (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (STRING-HASH-TABLE (:CONC-NAME %STRING-HASH-TABLE.)
  (:INCLUDE ABSTRACT-HASH-TABLE) (:CONSTRUCTOR %MAKE-STRING-HASH-TABLE ())
  (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (STRING-TO-INTEGER-HASH-TABLE (:CONC-NAME %STRING-TO-INTEGER-HASH-TABLE.)
  (:INCLUDE ABSTRACT-HASH-TABLE)
  (:CONSTRUCTOR %MAKE-STRING-TO-INTEGER-HASH-TABLE ()) (:COPIER ())
  (:PREDICATE ())))

(CL:DEFSTRUCT
 (DICTIONARY (:CONC-NAME %DICTIONARY.) (:INCLUDE ABSTRACT-DICTIONARY)
  (:CONSTRUCTOR %MAKE-DICTIONARY ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (PROPERTY-LIST (:CONC-NAME %PROPERTY-LIST.) (:INCLUDE DICTIONARY) (:CONSTRUCTOR %MAKE-PROPERTY-LIST ()) (:COPIER ()) (:PREDICATE ())) (THE-PLIST NULL))

(CL:DEFSTRUCT (KEY-VALUE-LIST (:CONC-NAME %KEY-VALUE-LIST.) (:INCLUDE DICTIONARY) (:CONSTRUCTOR %MAKE-KEY-VALUE-LIST ()) (:COPIER ()) (:PREDICATE ())) (THE-KV-LIST NULL))

(CL:DEFSTRUCT
 (KEYWORD-KEY-VALUE-LIST (:CONC-NAME %KEYWORD-KEY-VALUE-LIST.)
  (:INCLUDE KEY-VALUE-LIST) (:CONSTRUCTOR %MAKE-KEYWORD-KEY-VALUE-LIST ())
  (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (CS-VALUE (:CONC-NAME %CS-VALUE.) (:INCLUDE KEY-VALUE-LIST) (:CONSTRUCTOR %MAKE-CS-VALUE ()) (:COPIER ()) (:PREDICATE ())) "Contextualized value.  Contains a sorted kv-cons list indexed
by context. The kv-cons list is never null.  Newer (higher numbered) contexts
appear first.")

(CL:DEFSTRUCT (HOOK-LIST (:CONC-NAME %HOOK-LIST.) (:INCLUDE KEY-VALUE-LIST) (:CONSTRUCTOR %MAKE-HOOK-LIST ()) (:COPIER ()) (:PREDICATE ())) "Each HOOK-LIST object contains a list of zero or
more function codes that get funcall'd some procedure."
  (SIGNATURE NULL)
  (DOCUMENTATION NULL))

(CL:DEFSTRUCT (TOKENIZER-TABLE (:CONC-NAME %TOKENIZER-TABLE.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-TOKENIZER-TABLE ()) (:COPIER ()) (:PREDICATE ())) (TRANSITIONS NULL)
  (UNIQUE-STATE-NAMES NULL)
  (STATE-NAMES NULL)
  (LEGAL-EOF-STATES NULL))

(CL:DEFSTRUCT (TOKENIZER-STREAM-STATE (:CONC-NAME %TOKENIZER-STREAM-STATE.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-TOKENIZER-STREAM-STATE ()) (:COPIER ()) (:PREDICATE ())) (BUFFER NULL)
  (BUFFER-SIZE NULL)
  (CURSOR NULL)
  (END NULL)
  (STATE NULL)
  (TOKEN-LIST NULL))

(CL:DEFSTRUCT (TOKENIZER-TOKEN (:CONC-NAME %TOKENIZER-TOKEN.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-TOKENIZER-TOKEN ()) (:COPIER ()) (:PREDICATE ())) (TYPE NULL)
  (CONTENT NULL)
  (NEXT NULL))

(CL:DEFSTRUCT (STELLA-TOKEN (:CONC-NAME %STELLA-TOKEN.) (:INCLUDE TOKENIZER-TOKEN) (:CONSTRUCTOR %MAKE-STELLA-TOKEN ()) (:COPIER ()) (:PREDICATE ())) (LOGICAL-TOKEN-TYPE NULL)
  (MODULE NULL)
  (ESCAPE-MODE NULL))

(CL:DEFSTRUCT (ABSTRACT-ITERATOR (:CONC-NAME %ABSTRACT-ITERATOR.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-ABSTRACT-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Instances of ABSTRACT-ITERATOR support iteration over collections."
  (FIRST-ITERATION? NULL))

(CL:DEFSTRUCT (TOKEN-ITERATOR (:CONC-NAME %TOKEN-ITERATOR.) (:INCLUDE ABSTRACT-ITERATOR) (:CONSTRUCTOR %MAKE-TOKEN-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator that yields tokens from an input string"
  (VALUE NULL)
  (THE-STRING NULL)
  (DELIMITERS NULL)
  (CURSOR NULL)
  (END NULL))

(CL:DEFSTRUCT (ABSTRACT-DICTIONARY-ITERATOR (:CONC-NAME %ABSTRACT-DICTIONARY-ITERATOR.) (:INCLUDE ABSTRACT-ITERATOR) (:CONSTRUCTOR %MAKE-ABSTRACT-DICTIONARY-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Instances of ABSTRACT-DICTIONARY-ITERATOR support iteration
over dictionaries.")

(CL:DEFSTRUCT (DICTIONARY-ITERATOR (:CONC-NAME %DICTIONARY-ITERATOR.) (:INCLUDE ABSTRACT-DICTIONARY-ITERATOR) (:CONSTRUCTOR %MAKE-DICTIONARY-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Instances of DICTIONARY-ITERATOR support iteration
over dictionaries with keys and values of type OBJECT."
  (VALUE NULL)
  (KEY NULL))

(CL:DEFSTRUCT (PROPERTY-LIST-ITERATOR (:CONC-NAME %PROPERTY-LIST-ITERATOR.) (:INCLUDE DICTIONARY-ITERATOR) (:CONSTRUCTOR %MAKE-PROPERTY-LIST-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator class for the collection PROPERTY-LIST."
  (PLIST-ITERATOR-CURSOR NULL)
  (PLIST-ITERATOR-COLLECTION NULL))

(CL:DEFSTRUCT (KV-LIST-ITERATOR (:CONC-NAME %KV-LIST-ITERATOR.) (:INCLUDE DICTIONARY-ITERATOR) (:CONSTRUCTOR %MAKE-KV-LIST-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) (THE-KV-LIST NULL)
  (KV-LIST-ITERATOR-CURSOR NULL))

(CL:DEFSTRUCT (INTERVAL-ITERATOR (:CONC-NAME %INTERVAL-ITERATOR.) (:INCLUDE ABSTRACT-ITERATOR) (:CONSTRUCTOR %MAKE-INTERVAL-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "An iterator that specifies a (possibly infinite) range of
values.  Supports 'member?' test as well as iteration methods.")

(CL:DEFSTRUCT (INTEGER-INTERVAL-ITERATOR (:CONC-NAME %INTEGER-INTERVAL-ITERATOR.) (:INCLUDE INTERVAL-ITERATOR) (:CONSTRUCTOR %MAKE-INTEGER-INTERVAL-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) (VALUE NULL)
  (INTERVAL-CURSOR NULL)
  (LOWER-BOUND NULL)
  (UPPER-BOUND NULL))

(CL:DEFSTRUCT (REVERSE-INTEGER-INTERVAL-ITERATOR (:CONC-NAME %REVERSE-INTEGER-INTERVAL-ITERATOR.) (:INCLUDE INTERVAL-ITERATOR) (:CONSTRUCTOR %MAKE-REVERSE-INTEGER-INTERVAL-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) (VALUE NULL)
  (INTERVAL-CURSOR NULL)
  (LOWER-BOUND NULL)
  (UPPER-BOUND NULL))

(CL:DEFSTRUCT (STRING-ITERATOR (:CONC-NAME %STRING-ITERATOR.) (:INCLUDE ABSTRACT-ITERATOR) (:CONSTRUCTOR %MAKE-STRING-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator that yields characters from a string."
  (VALUE NULL)
  (THE-STRING NULL)
  (CURSOR NULL)
  (END NULL))

(CL:DEFSTRUCT (ITERATOR (:CONC-NAME %ITERATOR.) (:INCLUDE ABSTRACT-ITERATOR) (:CONSTRUCTOR %MAKE-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Instances of ITERATOR support iteration over 
collections of OBJECTs."
  (VALUE NULL))

(CL:DEFSTRUCT (CONS-ITERATOR (:CONC-NAME %CONS-ITERATOR.) (:INCLUDE ITERATOR) (:CONSTRUCTOR %MAKE-CONS-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator class for the class CONS."
  (CONS-ITERATOR-CURSOR NULL))

(CL:DEFSTRUCT (LIST-ITERATOR (:CONC-NAME %LIST-ITERATOR.) (:INCLUDE ITERATOR) (:CONSTRUCTOR %MAKE-LIST-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator class for the collection LIST."
  (LIST-ITERATOR-CURSOR NULL)
  (LIST-ITERATOR-COLLECTION NULL))

(CL:DEFSTRUCT (DESTRUCTIVE-LIST-ITERATOR (:CONC-NAME %DESTRUCTIVE-LIST-ITERATOR.) (:INCLUDE ITERATOR) (:CONSTRUCTOR %MAKE-DESTRUCTIVE-LIST-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "An iterator that contains a cons list.  Iterates over
the stored list, and destroys it when the iterator is free'd."
  (THE-CONS-LIST NULL)
  (LIST-ITERATOR-CURSOR NULL))

(CL:DEFSTRUCT (SET-ITERATOR (:CONC-NAME %SET-ITERATOR.) (:INCLUDE ITERATOR) (:CONSTRUCTOR %MAKE-SET-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator class for the collection SET."
  (SET-ITERATOR-CURSOR NULL)
  (SET-ITERATOR-COLLECTION NULL))

(CL:DEFSTRUCT (ALL-PURPOSE-ITERATOR (:CONC-NAME %ALL-PURPOSE-ITERATOR.) (:INCLUDE ITERATOR) (:CONSTRUCTOR %MAKE-ALL-PURPOSE-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "The all-purpose iterator works by storing a 'next?'
function within itself during iterator allocation.  The method
'ALL-PURPOSE-ITERAOR.next?' funcalls the stored 'next?' function.
An assortment of storage slots are provided for constructing different
kinds of iterators."
  (KEY NULL)
  (ITERATOR-NEXT-CODE NULL)
  (ITERATOR-FILTER-CODE NULL)
  (ITERATOR-EMPTY-CODE NULL)
  (ITERATOR-NESTED-ITERATOR NULL)
  (ITERATOR-CONS-LIST NULL)
  (ITERATOR-OBJECT NULL)
  (ITERATOR-SECOND-OBJECT NULL)
  (ITERATOR-INTEGER NULL)
  (ITERATOR-SECOND-INTEGER NULL))

(CL:DEFSTRUCT (TYPES-TO-CLASSES-ITERATOR (:CONC-NAME %TYPES-TO-CLASSES-ITERATOR.) (:INCLUDE ITERATOR) (:CONSTRUCTOR %MAKE-TYPES-TO-CLASSES-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator that returns a class for each type
in a cons list of types."
  (ITERATOR-CURSOR NULL))

(CL:DEFSTRUCT (ALL-CLASS-SLOTS-ITERATOR (:CONC-NAME %ALL-CLASS-SLOTS-ITERATOR.) (:INCLUDE ITERATOR) (:CONSTRUCTOR %MAKE-ALL-CLASS-SLOTS-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) (ITERATOR-CONS-LIST NULL)
  (ITERATOR-OBJECT NULL))

(CL:DEFSTRUCT (STREAM-TOKENIZER (:CONC-NAME %STREAM-TOKENIZER.) (:INCLUDE ITERATOR) (:CONSTRUCTOR %MAKE-STREAM-TOKENIZER ()) (:COPIER ()) (:PREDICATE ())) "Iterator that generates tokens by tokenizing a `stream'
according to a particular tokenization `table'."
  (STREAM NULL)
  (TABLE NULL))

(CL:DEFSTRUCT (STREAM-ITERATOR (:CONC-NAME %STREAM-ITERATOR.) (:INCLUDE ABSTRACT-ITERATOR) (:CONSTRUCTOR %MAKE-STREAM-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator that yields tokens from an input stream."
  (THE-STREAM NULL))

(CL:DEFSTRUCT (S-EXPRESSION-ITERATOR (:CONC-NAME %S-EXPRESSION-ITERATOR.) (:INCLUDE STREAM-ITERATOR) (:CONSTRUCTOR %MAKE-S-EXPRESSION-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator that yields s-expressions from an input stream."
  (VALUE NULL))

(CL:DEFSTRUCT (LINE-ITERATOR (:CONC-NAME %LINE-ITERATOR.) (:INCLUDE STREAM-ITERATOR) (:CONSTRUCTOR %MAKE-LINE-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator that yields lines from an input stream."
  (VALUE NULL))

(CL:DEFSTRUCT (CHARACTER-ITERATOR (:CONC-NAME %CHARACTER-ITERATOR.) (:INCLUDE STREAM-ITERATOR) (:CONSTRUCTOR %MAKE-CHARACTER-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator that yields characters from an input stream."
  (VALUE NULL))

(CL:DEFSTRUCT (XML-EXPRESSION-ITERATOR (:CONC-NAME %XML-EXPRESSION-ITERATOR.) (:INCLUDE STREAM-ITERATOR) (:CONSTRUCTOR %MAKE-XML-EXPRESSION-ITERATOR ()) (:COPIER ()) (:PREDICATE ())) "Iterator that yields XML expressions from an input stream.
If the value of `region-tag' is non-NULL, only XML expressions enclosed within
matching region tags will be returned (there can be multiple such regions).
What is a match is determined by `region-match-function'.  Usually, region tags
will/should be at the top level, but this is not necessarily so and also not
enforced by the iterator."
  (VALUE NULL)
  (REGION-TAG NULL)
  (REGION-MATCH-FUNCTION NULL))

(CL:DEFSTRUCT
 (TRANSIENT-SYMBOL (:CONC-NAME %TRANSIENT-SYMBOL.) (:INCLUDE SYMBOL)
  (:CONSTRUCTOR %MAKE-TRANSIENT-SYMBOL ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (ACTIVE-OBJECT (:CONC-NAME %ACTIVE-OBJECT.) (:INCLUDE CONTEXT-SENSITIVE-OBJECT) (:CONSTRUCTOR %MAKE-ACTIVE-OBJECT ()) (:COPIER ()) (:PREDICATE ())) "Active objects call class and slot triggers in response
to instance creation/destruction and slot updates.  They include internal
storage slots needed for class extensions, dynamic storage, and home context."
  (DYNAMIC-SLOTS NULL))

(CL:DEFSTRUCT (MAPPABLE-OBJECT (:CONC-NAME %MAPPABLE-OBJECT.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-MAPPABLE-OBJECT ()) (:COPIER ()) (:PREDICATE ())) "The class MAPPABLE-OBJECT enables the definition of projections
from a Stella class, slot, global variable, etc. onto a corresponding native
entity."
  (DYNAMIC-SLOTS NULL))

(CL:DEFSTRUCT (RELATION (:CONC-NAME %RELATION.) (:INCLUDE MAPPABLE-OBJECT) (:CONSTRUCTOR %MAKE-RELATION ()) (:COPIER ()) (:PREDICATE ())) (ABSTRACT? NULL))

(CL:DEFSTRUCT (CLASS (:CONC-NAME %CLASS.) (:INCLUDE RELATION) (:CONSTRUCTOR %MAKE-CLASS ()) (:COPIER ()) (:PREDICATE ())) (CL-STRUCT? NULL)
  (MIXIN? NULL)
  (CLASS-TYPE NULL)
  (CLASS-DIRECT-SUPERS NULL)
  (CLASS-DIRECT-SUBS NULL)
  (CLASS-ALL-SUPER-CLASSES NULL)
  (CLASS-ALL-SLOTS NULL)
  (CLASS-LOCAL-SLOTS NULL)
  (CLASS-SLOT-AND-METHOD-CACHE NULL)
  (CLASS-COLLECTION? NULL)
  (CLASS-PUBLIC? NULL)
  (CLASS-FINALIZED? NULL)
  (CLASS-SLOTS-FINALIZED? NULL)
  (CLASS-STRINGIFIED-SOURCE NULL)
  (CLASS-CONSTRUCTOR-CODE NULL)
  (CLASS-SLOT-ACCESSOR-CODE NULL)
  (CLASS-MARKED? NULL)
  (CLASS-TAXONOMY-NODE NULL))

(CL:DEFSTRUCT (POLYMORPHIC-RELATION (:CONC-NAME %POLYMORPHIC-RELATION.) (:INCLUDE RELATION) (:CONSTRUCTOR %MAKE-POLYMORPHIC-RELATION ()) (:COPIER ()) (:PREDICATE ())) (SLOT-DIRECT-EQUIVALENT NULL))

(CL:DEFSTRUCT (SLOT (:CONC-NAME %SLOT.) (:INCLUDE POLYMORPHIC-RELATION) (:CONSTRUCTOR %MAKE-SLOT ()) (:COPIER ()) (:PREDICATE ())) (SLOT-NAME NULL)
  (SLOT-OWNER NULL)
  (SLOT-BASE-TYPE NULL)
  (SLOT-SLOTREF NULL)
  (SLOT-PUBLIC? NULL)
  (SLOT-RENAMED? NULL)
  (SLOT-EXTERNAL? NULL)
  (SLOT-MARKED? NULL))

(CL:DEFSTRUCT (STORAGE-SLOT (:CONC-NAME %STORAGE-SLOT.) (:INCLUDE SLOT) (:CONSTRUCTOR %MAKE-STORAGE-SLOT ()) (:COPIER ()) (:PREDICATE ())) (SLOT-REQUIRED? NULL)
  (SLOT-COMPONENT? NULL)
  (SLOT-READ-ONLY? NULL)
  (SLOT-HARDWIRED? NULL)
  (SLOT-CONTEXT-SENSITIVE? NULL))

(CL:DEFSTRUCT (METHOD-SLOT (:CONC-NAME %METHOD-SLOT.) (:INCLUDE SLOT) (:CONSTRUCTOR %MAKE-METHOD-SLOT ()) (:COPIER ()) (:PREDICATE ())) (METHOD-SETTER? NULL)
  (METHOD-PARAMETER-NAMES NULL)
  (METHOD-PARAMETER-TYPE-SPECIFIERS NULL)
  (METHOD-RETURN-TYPE-SPECIFIERS NULL)
  (METHOD-STRINGIFIED-SOURCE NULL)
  (METHOD-CODE NULL)
  (FUNCTION-CODE NULL)
  (METHOD-FUNCTION? NULL))

(CL:DEFSTRUCT (TABLE (:CONC-NAME %TABLE.) (:INCLUDE SLOT) (:CONSTRUCTOR %MAKE-TABLE ()) (:COPIER ()) (:PREDICATE ())) (TUPLE-DOMAINS NULL))

(CL:DEFSTRUCT (GLOBAL-VARIABLE (:CONC-NAME %GLOBAL-VARIABLE.) (:INCLUDE MAPPABLE-OBJECT) (:CONSTRUCTOR %MAKE-GLOBAL-VARIABLE ()) (:COPIER ()) (:PREDICATE ())) (DOCUMENTATION NULL)
  (VARIABLE-NAME NULL)
  (VARIABLE-TYPE NULL)
  (VARIABLE-SPECIAL? NULL)
  (VARIABLE-CONSTANT? NULL)
  (VARIABLE-PUBLIC? NULL)
  (VARIABLE-AUXILIARY? NULL)
  (VARIABLE-GET-VALUE-CODE NULL)
  (VARIABLE-SET-VALUE-CODE NULL)
  (VARIABLE-VALUE-STACK NULL)
  (VARIABLE-STRINGIFIED-SOURCE NULL))

(CL:DEFSTRUCT (THING (:CONC-NAME %THING.) (:INCLUDE STANDARD-OBJECT) (:CONSTRUCTOR %MAKE-THING ()) (:COPIER ()) (:PREDICATE ())) "Defines a class that must be inherited by any
class that participates in the PowerLoom side of things."
  (DYNAMIC-SLOTS NULL)
  (SURROGATE-VALUE-INVERSE NULL))

(CL:DEFSTRUCT (CONTEXT (:CONC-NAME %CONTEXT.) (:INCLUDE THING) (:CONSTRUCTOR %MAKE-CONTEXT ()) (:COPIER ()) (:PREDICATE ())) (CHILD-CONTEXTS NULL)
  (BASE-MODULE NULL)
  (ALL-SUPER-CONTEXTS NULL)
  (CONTEXT-NUMBER NULL))

(CL:DEFSTRUCT (MODULE (:CONC-NAME %MODULE.) (:INCLUDE CONTEXT) (:CONSTRUCTOR %MAKE-MODULE ()) (:COPIER ()) (:PREDICATE ())) (PARENT-MODULES NULL)
  (DOCUMENTATION NULL)
  (NICKNAMES NULL)
  (USES NULL)
  (USED-BY NULL)
  (REQUIRES NULL)
  (CASE-SENSITIVE? NULL)
  (MODULE-FULL-NAME NULL)
  (MODULE-NAME NULL)
  (MODULE-STRINGIFIED-SOURCE NULL)
  (STRINGIFIED-OPTIONS NULL)
  (CARDINAL-MODULE NULL)
  (SYMBOL-OFFSET-TABLE NULL)
  (SURROGATE-OFFSET-TABLE NULL)
  (STRICT-INFERENCE-CACHE NULL)
  (DEFAULT-INFERENCE-CACHE NULL)
  (PROTOTYPE-INFERENCE-CACHE NULL))

(CL:DEFSTRUCT (WORLD (:CONC-NAME %WORLD.) (:INCLUDE CONTEXT) (:CONSTRUCTOR %MAKE-WORLD ()) (:COPIER ()) (:PREDICATE ())) (PARENT-CONTEXT NULL))

(CL:DEFSTRUCT (SET (:CONC-NAME %SET.) (:INCLUDE COLLECTION) (:CONSTRUCTOR %MAKE-SET ()) (:COPIER ()) (:PREDICATE ())) (THE-CONS-LIST NULL))

(CL:DEFSTRUCT
 (SEQUENCE (:CONC-NAME %SEQUENCE.) (:INCLUDE COLLECTION)
  (:CONSTRUCTOR %MAKE-SEQUENCE ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (RECYCLE-LIST (:CONC-NAME %RECYCLE-LIST.) (:INCLUDE SEQUENCE) (:CONSTRUCTOR %MAKE-RECYCLE-LIST ()) (:COPIER ()) (:PREDICATE ())) (RECYCLE-LIST-OF NULL)
  (RECYCLED-ITEMS NULL)
  (LIST-OF-RECYCLED-ITEMS NULL)
  (ALL-ITEMS NULL)
  (UNUSED-ITEMS NULL)
  (CURRENT-LENGTH NULL)
  (ITEM-SIZE NULL))

(CL:DEFSTRUCT (VECTOR (:CONC-NAME %VECTOR.) (:INCLUDE SEQUENCE) (:CONSTRUCTOR %MAKE-VECTOR ()) (:COPIER ()) (:PREDICATE ())) (ARRAY-SIZE NULL)
  (THE-ARRAY NULL))

(CL:DEFSTRUCT
 (EXTENSIBLE-VECTOR (:CONC-NAME %EXTENSIBLE-VECTOR.) (:INCLUDE VECTOR)
  (:CONSTRUCTOR %MAKE-EXTENSIBLE-VECTOR ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (EXTENSIBLE-SYMBOL-ARRAY (:CONC-NAME %EXTENSIBLE-SYMBOL-ARRAY.) (:INCLUDE EXTENSIBLE-VECTOR) (:CONSTRUCTOR %MAKE-EXTENSIBLE-SYMBOL-ARRAY ()) (:COPIER ()) (:PREDICATE ())) "Self-extending array with methods for storing and
accessing symbols within it."
  (TOP-SYMBOL-OFFSET NULL)
  (POTENTIAL-FREE-SYMBOL-OFFSET NULL))

(CL:DEFSTRUCT (VECTOR-SEQUENCE (:CONC-NAME %VECTOR-SEQUENCE.) (:INCLUDE VECTOR) (:CONSTRUCTOR %MAKE-VECTOR-SEQUENCE ()) (:COPIER ()) (:PREDICATE ())) (SEQUENCE-LENGTH NULL))

(CL:DEFSTRUCT
 (SHORT-VECTOR-SEQUENCE (:CONC-NAME %SHORT-VECTOR-SEQUENCE.)
  (:INCLUDE VECTOR-SEQUENCE) (:CONSTRUCTOR %MAKE-SHORT-VECTOR-SEQUENCE ())
  (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (BOOLEAN-VECTOR (:CONC-NAME %BOOLEAN-VECTOR.) (:INCLUDE VECTOR)
  (:CONSTRUCTOR %MAKE-BOOLEAN-VECTOR ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (INTEGER-VECTOR (:CONC-NAME %INTEGER-VECTOR.) (:INCLUDE VECTOR)
  (:CONSTRUCTOR %MAKE-INTEGER-VECTOR ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (LIST (:CONC-NAME %LIST.) (:INCLUDE SEQUENCE) (:CONSTRUCTOR %MAKE-LIST ()) (:COPIER ()) (:PREDICATE ())) (THE-CONS-LIST NULL))

(CL:DEFSTRUCT
 (CLASS-EXTENSION (:CONC-NAME %CLASS-EXTENSION.) (:INCLUDE LIST)
  (:CONSTRUCTOR %MAKE-CLASS-EXTENSION ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT (ACTIVE-LIST (:CONC-NAME %ACTIVE-LIST.) (:INCLUDE LIST) (:CONSTRUCTOR %MAKE-ACTIVE-LIST ()) (:COPIER ()) (:PREDICATE ())) (ACTIVE-SLOT NULL)
  (OWNER-INSTANCE NULL))

(CL:DEFSTRUCT (ACTIVE-SET (:CONC-NAME %ACTIVE-SET.) (:INCLUDE LIST) (:CONSTRUCTOR %MAKE-ACTIVE-SET ()) (:COPIER ()) (:PREDICATE ())) (ACTIVE-SLOT NULL)
  (OWNER-INSTANCE NULL))

(CL:DEFSTRUCT
 (VOID (:CONC-NAME %VOID.) (:INCLUDE CLSYS-ROOT-STRUCT)
  (:CONSTRUCTOR %MAKE-VOID ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFSTRUCT
 (UNKNOWN (:CONC-NAME %UNKNOWN.) (:INCLUDE CLSYS-ROOT-STRUCT)
  (:CONSTRUCTOR %MAKE-UNKNOWN ()) (:COPIER ()) (:PREDICATE ())))

(CL:DEFINE-CONDITION STELLA-EXCEPTION (CL:SIMPLE-ERROR)
  ())

(CL:DEFINE-CONDITION READ-EXCEPTION (STELLA-EXCEPTION)
  ())

(CL:DEFINE-CONDITION UNHANDLED-EXCEPTION (STELLA-EXCEPTION)
  ())

(CL:DEFSTRUCT (LISP-CODE (:CONC-NAME %LISP-CODE.) (:INCLUDE CLSYS-ROOT-STRUCT) (:CONSTRUCTOR %MAKE-LISP-CODE ()) (:COPIER ()) (:PREDICATE ())) "Used to indicate variables that input or output Common Lisp~
      structures.")
