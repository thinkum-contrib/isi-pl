;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

#|--------------------------------------------------------------------------+
 |                                                                          |
 |  COPYRIGHT (C) UNIVERSITY OF SOUTHERN CALIFORNIA, 1996-2000              | 
 |  University of Southern California, Information Sciences Institute       |
 |  4676 Admiralty Way                                                      |
 |  Marina Del Rey, California 90292                                        |
 |                                                                          |
 |  This software was developed under the terms and conditions of Contract  |
 |  No. N00014-94-C-0245 between the Defense Advanced Research Projects     |
 |  Agency and the University of Southern California, Information Sciences  | 
 |  Institute.  Use and distribution of this software is further subject    |
 |  to the provisions of that contract and any other agreements developed   |
 |  between the user of the software and the University of Southern         |
 |  California, Information Sciences Institute.  It is supplied "AS IS",    |
 |  without any warranties of any kind.  It is furnished only on the basis  |
 |  that any party who receives it indemnifies and holds harmless the       |
 |  parties who furnish and originate it against any claims, demands, or    |
 |  liabilities connected with using it, furnishing it to others or         |
 |  providing it to a third party.  THIS NOTICE MUST NOT BE REMOVED FROM    |
 |  THE SOFTWARE, AND IN THE EVENT THAT THE SOFTWARE IS DIVIDED, IT SHOULD  |
 |  BE ATTACHED TO EVERY PART.                                              |
 |                                                                          |
 +--------------------------------------------------------------------------|#

(CL:IN-PACKAGE "STELLA")

;;; Auxiliary variables:

(CL:DEFVAR SGT-CPP-CLASS-OUT-STELLA-OBJECT NULL)
(CL:DEFVAR KWD-CPP-CLASS-OUT-EMBEDDED NULL)
(CL:DEFVAR KWD-CPP-CLASS-OUT-INSTANCE NULL)
(CL:DEFVAR KWD-CPP-CLASS-OUT-CLASS NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-NULL NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-SLOT-TYPE-SPECIFIER NULL)
(CL:DEFVAR SGT-CPP-CLASS-OUT-STELLA-ANCHORED-TYPE-SPECIFIER NULL)
(CL:DEFVAR SGT-CPP-CLASS-OUT-STELLA-UNKNOWN NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-DEFINED? NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-NULL? NULL)
(CL:DEFVAR SGT-CPP-CLASS-OUT-STELLA-METHOD-SLOT NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-CLASS-CPP-NATIVE-TYPE NULL)
(CL:DEFVAR KWD-CPP-CLASS-OUT-CPP NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-GC NULL)
(CL:DEFVAR KWD-CPP-CLASS-OUT-CPP-STANDALONE NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-CPP_CLASS NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-DOCUMENTATION NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-CPP_COMMENT NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-CPP_DECLARATIONS NULL)
(CL:DEFVAR KWD-CPP-CLASS-OUT-PUBLIC NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-CPP_SIGNATURES NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-STARTUP-CPP-CLASS-OUT NULL)
(CL:DEFVAR SYM-CPP-CLASS-OUT-STELLA-METHOD-STARTUP-CLASSNAME NULL)

;;; Forward declarations:

(CL:DECLAIM
 (CL:SPECIAL *STELLA-MODULE* *MODULE* *TRANSLATOROUTPUTLANGUAGE*
  NULL-STRING-WRAPPER *METHODBEINGWALKED*))

;;; (DEFUN (CPP-YIELD-INITIAL-NULL-VALUE CONS) ...)

(CL:DEFUN CPP-YIELD-INITIAL-NULL-VALUE ()
  (CL:RETURN-FROM CPP-YIELD-INITIAL-NULL-VALUE (CPP-TRANSLATE-A-TREE NULL)))

;;; (DEFUN (CPP-YIELD-MEMBER-VAR-TREE CONS) ...)

(CL:DEFUN CPP-YIELD-MEMBER-VAR-TREE (SLOT CLASS)
  (CL:LET*
   ((SLOTNAME (TRUE-SLOT-NAME (%SLOT-NAME SLOT) (%CLASS-TYPE CLASS)))
    (SLOTTYPE
     (CL:IF (%SLOT-CONTEXT-SENSITIVE? SLOT)
      SGT-CPP-CLASS-OUT-STELLA-OBJECT
      (COMPUTE-RETURN-TYPE-SPEC SLOT (%CLASS-TYPE CLASS))))
    (ALLOCATION (ALLOCATION SLOT)) (ALLOCATIONFORM NIL))
   (CL:COND
    ((CL:EQ ALLOCATION KWD-CPP-CLASS-OUT-EMBEDDED)
     (CL:SETQ ALLOCATIONFORM NIL))
    ((CL:EQ ALLOCATION KWD-CPP-CLASS-OUT-INSTANCE)
     (CL:SETQ ALLOCATIONFORM NIL))
    ((CL:EQ ALLOCATION KWD-CPP-CLASS-OUT-CLASS)
     (CL:SETQ ALLOCATIONFORM (CONS-LIST (WRAP-STRING "static"))))
    (CL:T (CL:SETQ ALLOCATIONFORM NIL)))
   (CL:RETURN-FROM CPP-YIELD-MEMBER-VAR-TREE
    (LIST*
     (CONCATENATE ALLOCATIONFORM
      (CONS (CPP-TRANSLATE-AND-POINTERIZE-TYPE-SPEC SLOTTYPE) NIL))
     (CPP-TRANSLATE-NAME SLOTNAME)
     (CONS SYM-CPP-CLASS-OUT-STELLA-NULL NIL)))))

;;; (DEFUN (CPP-YIELD-PARAMETERIZED-MEMBER-VAR-TREE CONS) ...)

(CL:DEFUN CPP-YIELD-PARAMETERIZED-MEMBER-VAR-TREE (SLOT CLASS)
  (CL:LET*
   ((SLOTNAME (TRUE-SLOT-NAME (%SLOT-NAME SLOT) (%CLASS-TYPE CLASS)))
    (ALLOCATION (ALLOCATION SLOT)) (ALLOCATIONFORM NIL))
   (CL:COND
    ((CL:EQ ALLOCATION KWD-CPP-CLASS-OUT-EMBEDDED)
     (CL:SETQ ALLOCATIONFORM NIL))
    ((CL:EQ ALLOCATION KWD-CPP-CLASS-OUT-INSTANCE)
     (CL:SETQ ALLOCATIONFORM NIL))
    ((CL:EQ ALLOCATION KWD-CPP-CLASS-OUT-CLASS)
     (CL:SETQ ALLOCATIONFORM (CONS-LIST (WRAP-STRING "static"))))
    (CL:T (CL:SETQ ALLOCATIONFORM NIL)))
   (CL:RETURN-FROM CPP-YIELD-PARAMETERIZED-MEMBER-VAR-TREE
    (LIST*
     (CONCATENATE ALLOCATIONFORM
      (CONS
       (CPP-TRANSLATE-CLASS-PARAMETER-NAME
        (GET-SLOT-CLASS-PARAMETER-NAME SLOT))
       NIL))
     (CPP-TRANSLATE-NAME SLOTNAME)
     (CONS SYM-CPP-CLASS-OUT-STELLA-NULL NIL)))))

;;; (DEFUN (CPP-YIELD-STATIC-MEMBER-ALLOCATION-TREE CONS) ...)

(CL:DEFUN CPP-YIELD-STATIC-MEMBER-ALLOCATION-TREE (SLOT CLASS)
  (CL:LET*
   ((SLOTNAME (%SLOT-NAME SLOT)) (ALLOCATIONFORM NIL)
    (MOSTGENERALSLOT NULL))
   (CL:SETQ MOSTGENERALSLOT SLOT)
   (CL:LOOP
    (CL:IF (CL:NOT (CL:EQ (%SLOT-DIRECT-EQUIVALENT MOSTGENERALSLOT) NULL))
     (CL:SETQ MOSTGENERALSLOT (%SLOT-DIRECT-EQUIVALENT MOSTGENERALSLOT))
     (CL:RETURN)))
   (CL:RETURN-FROM CPP-YIELD-STATIC-MEMBER-ALLOCATION-TREE
    (LIST*
     (CONCATENATE ALLOCATIONFORM
      (CONS
       (CPP-TRANSLATE-AND-POINTERIZE-TYPE-SPEC
        (COMPUTE-RETURN-TYPE-SPEC MOSTGENERALSLOT (%CLASS-TYPE CLASS)))
       NIL))
     (CPP-TRANSLATE-NAME SLOTNAME)
     (CONS SYM-CPP-CLASS-OUT-STELLA-NULL NIL)))))

;;; (DEFUN (CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE CONS) ...)

(CL:DEFUN CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE (METHOD)
  (CL:SETQ *METHODBEINGWALKED* METHOD)
  (CL:RETURN-FROM CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE
   (CONS
    (CL:IF (%METHOD-FUNCTION? METHOD) NULL
     (CPP-TRANSLATE-CLASS-NAME (SYMBOLIZE (%SLOT-OWNER METHOD))))
    (LIST*
     (CONS (WRAP-STRING "virtual")
      (CONS
       (CPP-TRANSLATE-AND-POINTERIZE-TYPE-SPEC
        (COMPUTE-MOST-GENERAL-RETURN-TYPE METHOD
         (COMPUTE-RETURN-TYPE-SPEC METHOD (%SLOT-OWNER METHOD))))
       NIL))
     (CPP-TRANSLATE-FUNCTION-NAME METHOD)
     (CONS (CPP-TRANSLATE-FUNCTION-PARAMETERS METHOD) NIL)))))

;;; (DEFUN (CPP-YIELD-CONSTRUCTOR-SIGNATURE-TREE CONS) ...)

(CL:DEFUN CPP-YIELD-CONSTRUCTOR-SIGNATURE-TREE (METHOD)
  (CL:SETQ *METHODBEINGWALKED* METHOD)
  (CL:RETURN-FROM CPP-YIELD-CONSTRUCTOR-SIGNATURE-TREE
   (CONS (CPP-TRANSLATE-CLASS-NAME (SYMBOLIZE (%SLOT-OWNER METHOD)))
    (LIST* NIL (CPP-TRANSLATE-CONSTRUCTOR-NAME METHOD)
     (CONS (CPP-TRANSLATE-FUNCTION-PARAMETERS METHOD) NIL)))))

;;; (DEFUN (SLOT-HAS-CLASS-PARAMETER-TYPE? BOOLEAN) ...)

(CL:DEFUN SLOT-HAS-CLASS-PARAMETER-TYPE? (SLOT CLASS)
  (CL:RETURN-FROM SLOT-HAS-CLASS-PARAMETER-TYPE?
   (CL:AND
    (CL:NOT
     (CL:EQ
      (DYNAMIC-SLOT-VALUE (%DYNAMIC-SLOTS SLOT)
       SYM-CPP-CLASS-OUT-STELLA-SLOT-TYPE-SPECIFIER NULL)
      NULL))
    (ISA?
     (DYNAMIC-SLOT-VALUE (%DYNAMIC-SLOTS SLOT)
      SYM-CPP-CLASS-OUT-STELLA-SLOT-TYPE-SPECIFIER NULL)
     SGT-CPP-CLASS-OUT-STELLA-ANCHORED-TYPE-SPECIFIER)
    (CL:EQ (COMPUTE-RETURN-TYPE-SPEC SLOT (%CLASS-TYPE CLASS))
     SGT-CPP-CLASS-OUT-STELLA-UNKNOWN))))

;;; (DEFUN (GET-SLOT-CLASS-PARAMETER-NAME SYMBOL) ...)

(CL:DEFUN GET-SLOT-CLASS-PARAMETER-NAME (SLOT)
  (CL:RETURN-FROM GET-SLOT-CLASS-PARAMETER-NAME
   (%SPECIFIER-PARAMETER-NAME
    (DYNAMIC-SLOT-VALUE (%DYNAMIC-SLOTS SLOT)
     SYM-CPP-CLASS-OUT-STELLA-SLOT-TYPE-SPECIFIER NULL))))

;;; (DEFUN (CPP-NATIVE-METHOD? BOOLEAN) ...)

(CL:DEFUN CPP-NATIVE-METHOD? (METHODSLOT)
  (CL:LET* ((TEST-VALUE-000 (%SLOT-NAME METHODSLOT)))
   (CL:COND
    ((CL:OR (CL:EQ TEST-VALUE-000 SYM-CPP-CLASS-OUT-STELLA-DEFINED?)
      (CL:EQ TEST-VALUE-000 SYM-CPP-CLASS-OUT-STELLA-NULL?))
     (CL:RETURN-FROM CPP-NATIVE-METHOD? TRUE))
    (CL:T (CL:RETURN-FROM CPP-NATIVE-METHOD? FALSE)))))

;;; (DEFUN (CPP-GET-PARAMETERIZED-MEMBER-VARIABLE-DEFINITIONS CONS) ...)

(CL:DEFUN CPP-GET-PARAMETERIZED-MEMBER-VARIABLE-DEFINITIONS (CLASS)
  (CL:LET* ((MEMBERVARDEFS NIL))
   (CL:LET*
    ((SLOT NULL) (ITER-000 (%THE-CONS-LIST (%CLASS-LOCAL-SLOTS CLASS)))
     (COLLECT-000 NULL))
    (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-000 NIL)) DO
     (CL:PROGN (CL:SETQ SLOT (%%VALUE ITER-000))
      (CL:SETQ ITER-000 (%%REST ITER-000)))
     (CL:WHEN
      (CL:AND (STORAGE-SLOT? SLOT) (NATIVE-SLOT? SLOT)
       (SLOT-HAS-CLASS-PARAMETER-TYPE? SLOT CLASS))
      (CL:IF (CL:EQ COLLECT-000 NULL)
       (CL:PROGN
        (CL:SETQ COLLECT-000
         (CONS (CPP-YIELD-PARAMETERIZED-MEMBER-VAR-TREE SLOT CLASS) NIL))
        (CL:IF (CL:EQ MEMBERVARDEFS NIL)
         (CL:SETQ MEMBERVARDEFS COLLECT-000)
         (ADD-CONS-TO-END-OF-CONS-LIST MEMBERVARDEFS COLLECT-000)))
       (CL:PROGN
        (CL:SETF (%%REST COLLECT-000)
         (CONS (CPP-YIELD-PARAMETERIZED-MEMBER-VAR-TREE SLOT CLASS) NIL))
        (CL:SETQ COLLECT-000 (%%REST COLLECT-000)))))))
   (CL:RETURN-FROM CPP-GET-PARAMETERIZED-MEMBER-VARIABLE-DEFINITIONS
    MEMBERVARDEFS)))

;;; (DEFUN (CPP-GET-MEMBER-VARIABLE-DEFINITIONS CONS CONS) ...)

(CL:DEFUN CPP-GET-MEMBER-VARIABLE-DEFINITIONS (CLASS)
  (CL:LET* ((PUBLICMEMBERVARDEFS NIL) (PROTECTEDMEMBERVARDEFS NIL))
   (CL:LET* ((SLOT NULL) (ITER-000 (CLASS-SLOTS CLASS)))
    (CL:LOOP WHILE (NEXT? ITER-000) DO (CL:SETQ SLOT (%VALUE ITER-000))
     (CL:WHEN
      (CL:AND (STORAGE-SLOT? SLOT) (NATIVE-SLOT? SLOT)
       (CL:EQ (NATIVE-SLOT-HOME SLOT CLASS) CLASS))
      (CL:IF (%SLOT-PUBLIC? SLOT)
       (CL:SETQ PUBLICMEMBERVARDEFS
        (CONS (CPP-YIELD-MEMBER-VAR-TREE SLOT CLASS) PUBLICMEMBERVARDEFS))
       (CL:SETQ PROTECTEDMEMBERVARDEFS
        (CONS (CPP-YIELD-MEMBER-VAR-TREE SLOT CLASS)
         PROTECTEDMEMBERVARDEFS))))))
   (CL:RETURN-FROM CPP-GET-MEMBER-VARIABLE-DEFINITIONS
    (CL:VALUES (REVERSE PUBLICMEMBERVARDEFS)
     (REVERSE PROTECTEDMEMBERVARDEFS)))))

;;; (DEFUN (CPP-GET-STATIC-VARIABLE-DEFINITIONS CONS) ...)

(CL:DEFUN CPP-GET-STATIC-VARIABLE-DEFINITIONS (CLASS)
  (CL:LET* ((STATICMEMBERVARDEFS NIL))
   (CL:LET* ((SLOT NULL) (ITER-000 (CLASS-SLOTS CLASS)))
    (CL:LOOP WHILE (NEXT? ITER-000) DO (CL:SETQ SLOT (%VALUE ITER-000))
     (CL:WHEN
      (CL:AND (STORAGE-SLOT? SLOT) (NATIVE-SLOT? SLOT)
       (CL:EQ (ALLOCATION SLOT) KWD-CPP-CLASS-OUT-CLASS)
       (CL:NOT (%SLOT-HARDWIRED? SLOT)) (CL:NOT (%SLOT-MARKED? SLOT))
       (CL:EQ (NATIVE-SLOT-HOME SLOT CLASS) CLASS))
      (CL:SETQ STATICMEMBERVARDEFS
       (CONS (CPP-YIELD-STATIC-MEMBER-ALLOCATION-TREE SLOT CLASS)
        STATICMEMBERVARDEFS)))))
   (CL:RETURN-FROM CPP-GET-STATIC-VARIABLE-DEFINITIONS
    STATICMEMBERVARDEFS)))

;;; (DEFUN (CPP-GET-CONSTRUCTOR-DEFINITIONS CONS) ...)

(CL:DEFUN CPP-GET-CONSTRUCTOR-DEFINITIONS (CLASS)
  (CL:LET* ((CONSTRUCTORDEFS NIL))
   (CL:LET*
    ((SLOT NULL) (ITER-000 (CLASS-SLOTS CLASS)) (COLLECT-000 NULL))
    (CL:LOOP WHILE (NEXT? ITER-000) DO (CL:SETQ SLOT (%VALUE ITER-000))
     (CL:WHEN
      (CL:AND (CL:NOT (%SLOT-MARKED? SLOT))
       (CL:EQ (PRIMARY-TYPE SLOT) SGT-CPP-CLASS-OUT-STELLA-METHOD-SLOT)
       (LOCAL-SLOT? SLOT CLASS) (CPP-CONSTRUCTOR? SLOT))
      (CL:IF (CL:EQ COLLECT-000 NULL)
       (CL:PROGN
        (CL:SETQ COLLECT-000
         (CONS (CPP-YIELD-CONSTRUCTOR-SIGNATURE-TREE SLOT) NIL))
        (CL:IF (CL:EQ CONSTRUCTORDEFS NIL)
         (CL:SETQ CONSTRUCTORDEFS COLLECT-000)
         (ADD-CONS-TO-END-OF-CONS-LIST CONSTRUCTORDEFS COLLECT-000)))
       (CL:PROGN
        (CL:SETF (%%REST COLLECT-000)
         (CONS (CPP-YIELD-CONSTRUCTOR-SIGNATURE-TREE SLOT) NIL))
        (CL:SETQ COLLECT-000 (%%REST COLLECT-000)))))))
   (CL:RETURN-FROM CPP-GET-CONSTRUCTOR-DEFINITIONS CONSTRUCTORDEFS)))

;;; (DEFUN (CPP-GET-METHOD-DEFINITIONS CONS CONS) ...)

(CL:DEFUN CPP-GET-METHOD-DEFINITIONS (CLASS)
  (CL:LET* ((PUBLICMEMBERFUNCDEFS NIL) (PROTECTEDMEMBERFUNCDEFS NIL))
   (CL:LET*
    ((SLOT NULL) (ITER-000 (%THE-CONS-LIST (%CLASS-LOCAL-SLOTS CLASS))))
    (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-000 NIL)) DO
     (CL:PROGN (CL:SETQ SLOT (%%VALUE ITER-000))
      (CL:SETQ ITER-000 (%%REST ITER-000)))
     (CL:COND
      ((SUBTYPE-OF-METHOD-SLOT? (SAFE-PRIMARY-TYPE SLOT))
       (CL:PROGN
        (CL:WHEN
         (CL:AND (CL:NOT (%SLOT-MARKED? SLOT)) (NATIVE-METHOD? SLOT)
          (CL:NOT (CPP-CONSTRUCTOR? SLOT))
          (CL:NOT (CPP-NATIVE-METHOD? SLOT)))
         (CL:IF (%SLOT-PUBLIC? SLOT)
          (CL:SETQ PUBLICMEMBERFUNCDEFS
           (CONS (CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE SLOT)
            PUBLICMEMBERFUNCDEFS))
          (CL:SETQ PROTECTEDMEMBERFUNCDEFS
           (CONS (CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE SLOT)
            PROTECTEDMEMBERFUNCDEFS))))))
      (CL:T))))
   (CL:LET*
    ((METHOD NULL)
     (ITER-001 (%THE-CONS-LIST (CLASS-AUXILIARY-METHODS CLASS))))
    (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-001 NIL)) DO
     (CL:PROGN (CL:SETQ METHOD (%%VALUE ITER-001))
      (CL:SETQ ITER-001 (%%REST ITER-001)))
     (CL:IF (%SLOT-PUBLIC? METHOD)
      (CL:SETQ PUBLICMEMBERFUNCDEFS
       (CONS (CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE METHOD)
        PUBLICMEMBERFUNCDEFS))
      (CL:SETQ PROTECTEDMEMBERFUNCDEFS
       (CONS (CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE METHOD)
        PROTECTEDMEMBERFUNCDEFS)))))
   (CL:RETURN-FROM CPP-GET-METHOD-DEFINITIONS
    (CL:VALUES (REVERSE PUBLICMEMBERFUNCDEFS)
     (REVERSE PROTECTEDMEMBERFUNCDEFS)))))

;;; (DEFUN (MARK-RENAMING-SLOTS VOID) ...)

(CL:DEFUN MARK-RENAMING-SLOTS (CLASS)
  (CL:LET* ((SLOT NULL) (ITER-000 (CLASS-SLOTS CLASS)))
   (CL:LOOP WHILE (NEXT? ITER-000) DO (CL:SETQ SLOT (%VALUE ITER-000))
    (CL:SETF (%SLOT-MARKED? SLOT) FALSE)))
  (CL:LET* ((SLOT NULL) (ITER-001 (CLASS-SLOTS CLASS)))
   (CL:LOOP WHILE (NEXT? ITER-001) DO (CL:SETQ SLOT (%VALUE ITER-001))
    (CL:WHEN (CL:NOT (%SLOT-MARKED? SLOT))
     (CL:WHEN
      (CL:AND (CL:NOT (CL:EQ (%SLOT-DIRECT-EQUIVALENT SLOT) NULL))
       (CL:NOT (%SLOT-RENAMED? (%SLOT-DIRECT-EQUIVALENT SLOT))))
      (MARK-DIRECT-EQUIVALENT-SLOT SLOT)
      (CL:SETF (%SLOT-MARKED? SLOT) FALSE)))))
  :VOID)

;;; (DEFUN (CPP-CLASS-HAS-ONLY-NATIVE-PARENTS? BOOLEAN) ...)

(CL:DEFUN CPP-CLASS-HAS-ONLY-NATIVE-PARENTS? (CLASS)
  (CL:LET* ((SUPER NULL) (ITER-000 (%CLASS-ALL-SUPER-CLASSES CLASS)))
   (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-000 NIL)) DO
    (CL:PROGN (CL:SETQ SUPER (%%VALUE ITER-000))
     (CL:SETQ ITER-000 (%%REST ITER-000)))
    (CL:WHEN (CL:NOT (%MIXIN? SUPER))
     (CL:WHEN
      (CL:AND (CREATE-NATIVE-CLASS? SUPER)
       (CL:EQ
        (%WRAPPER-VALUE
         (DYNAMIC-SLOT-VALUE (%DYNAMIC-SLOTS SUPER)
          SYM-CPP-CLASS-OUT-STELLA-CLASS-CPP-NATIVE-TYPE
          NULL-STRING-WRAPPER))
        STELLA::NULL-STRING))
      (CL:RETURN-FROM CPP-CLASS-HAS-ONLY-NATIVE-PARENTS? FALSE)))))
  (CL:RETURN-FROM CPP-CLASS-HAS-ONLY-NATIVE-PARENTS? TRUE))

;;; (DEFUN (CPP-TRANSLATE-DEFINE-NATIVE-CLASS-UNIT CONS) ...)

(CL:DEFUN CPP-TRANSLATE-DEFINE-NATIVE-CLASS-UNIT (UNIT)
  (CL:LET*
   ((CLASS (%THE-OBJECT UNIT)) (BASECLASSES NIL)
    (PARAMETERIZEDMEMBERVARDEFS NIL) (PUBLICMEMBERVARDEFS NIL)
    (PROTECTEDMEMBERVARDEFS NIL) (PUBLICMEMBERFUNCDEFS NIL)
    (PROTECTEDMEMBERFUNCDEFS NIL) (CONSTRUCTORDEFS NIL) (PARAMETERS NIL)
    (STATICMEMBERVARDEFS NIL))
   (CL:LET*
    ((SUPER NULL) (ITER-000 (CLASS-NATIVE-SUPERS CLASS))
     (COLLECT-000 NULL))
    (CL:LOOP WHILE (NEXT? ITER-000) DO (CL:SETQ SUPER (%VALUE ITER-000))
     (CL:WHEN
      (CL:OR (CL:NOT (%MIXIN? (%SURROGATE-VALUE SUPER)))
       (CL:NOT (TRANSLATE-TO-SINGLE-INHERITANCE-LANGUAGE?)))
      (CL:IF (CL:EQ COLLECT-000 NULL)
       (CL:PROGN
        (CL:SETQ COLLECT-000
         (CONS (CPP-TRANSLATE-CLASS-NAME (SYMBOLIZE SUPER)) NIL))
        (CL:IF (CL:EQ BASECLASSES NIL) (CL:SETQ BASECLASSES COLLECT-000)
         (ADD-CONS-TO-END-OF-CONS-LIST BASECLASSES COLLECT-000)))
       (CL:PROGN
        (CL:SETF (%%REST COLLECT-000)
         (CONS (CPP-TRANSLATE-CLASS-NAME (SYMBOLIZE SUPER)) NIL))
        (CL:SETQ COLLECT-000 (%%REST COLLECT-000)))))))
   (CL:WHEN
    (CL:AND
     (CL:OR (CL:EQ BASECLASSES NIL)
      (CPP-CLASS-HAS-ONLY-NATIVE-PARENTS? CLASS))
     (CL:NOT (%MIXIN? CLASS))
     (CL:EQ *TRANSLATOROUTPUTLANGUAGE* KWD-CPP-CLASS-OUT-CPP)
     (CPP-USE-GARBAGE-COLLECTOR?))
    (CL:SETQ BASECLASSES
     (CONS (CPP-TRANSLATE-NAME SYM-CPP-CLASS-OUT-STELLA-GC) BASECLASSES)))
   (CL:LET*
    ((PARAMETER NULL) (ITER-001 (%THE-CONS-LIST (CLASS-PARAMETERS CLASS)))
     (COLLECT-001 NULL))
    (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-001 NIL)) DO
     (CL:PROGN (CL:SETQ PARAMETER (%%VALUE ITER-001))
      (CL:SETQ ITER-001 (%%REST ITER-001)))
     (CL:IF (CL:EQ COLLECT-001 NULL)
      (CL:PROGN
       (CL:SETQ COLLECT-001
        (CONS (CPP-TRANSLATE-CLASS-PARAMETER-NAME PARAMETER) NIL))
       (CL:IF (CL:EQ PARAMETERS NIL) (CL:SETQ PARAMETERS COLLECT-001)
        (ADD-CONS-TO-END-OF-CONS-LIST PARAMETERS COLLECT-001)))
      (CL:PROGN
       (CL:SETF (%%REST COLLECT-001)
        (CONS (CPP-TRANSLATE-CLASS-PARAMETER-NAME PARAMETER) NIL))
       (CL:SETQ COLLECT-001 (%%REST COLLECT-001))))))
   (MARK-RENAMING-SLOTS CLASS)
   (CL:WHEN
    (CL:EQ *TRANSLATOROUTPUTLANGUAGE* KWD-CPP-CLASS-OUT-CPP-STANDALONE)
    (CL:SETQ CONSTRUCTORDEFS (CPP-GET-CONSTRUCTOR-DEFINITIONS CLASS)))
   (CL:WHEN (CPP-OUTPUT-TEMPLATE-CLASSES?)
    (CL:SETQ PARAMETERIZEDMEMBERVARDEFS
     (CPP-GET-PARAMETERIZED-MEMBER-VARIABLE-DEFINITIONS CLASS)))
   (CL:MULTIPLE-VALUE-SETQ (PUBLICMEMBERVARDEFS PROTECTEDMEMBERVARDEFS)
    (CPP-GET-MEMBER-VARIABLE-DEFINITIONS CLASS))
   (CL:MULTIPLE-VALUE-SETQ (PUBLICMEMBERFUNCDEFS PROTECTEDMEMBERFUNCDEFS)
    (CPP-GET-METHOD-DEFINITIONS CLASS))
   (CL:SETQ STATICMEMBERVARDEFS
    (CPP-GET-STATIC-VARIABLE-DEFINITIONS CLASS))
   (CL:RETURN-FROM CPP-TRANSLATE-DEFINE-NATIVE-CLASS-UNIT
    (LIST* SYM-CPP-CLASS-OUT-STELLA-CPP_CLASS
     (CPP-TRANSLATE-CLASS-NAME (SYMBOLIZE (%CLASS-TYPE CLASS)))
     (CONS PARAMETERS
      (CONS BASECLASSES
       (CONS STATICMEMBERVARDEFS
        (CONCATENATE
         (CL:IF
          (CL:NOT
           (CL:EQ
            (%WRAPPER-VALUE
             (DYNAMIC-SLOT-VALUE (%DYNAMIC-SLOTS CLASS)
              SYM-CPP-CLASS-OUT-STELLA-DOCUMENTATION NULL-STRING-WRAPPER))
            STELLA::NULL-STRING))
          (CONS
           (LIST* SYM-CPP-CLASS-OUT-STELLA-CPP_COMMENT
            (WRAP-STRING
             (%WRAPPER-VALUE
              (DYNAMIC-SLOT-VALUE (%DYNAMIC-SLOTS CLASS)
               SYM-CPP-CLASS-OUT-STELLA-DOCUMENTATION
               NULL-STRING-WRAPPER)))
            NIL)
           NIL)
          NIL)
         (CONCATENATE
          (CL:IF (CL:NOT (CL:EQ PARAMETERIZEDMEMBERVARDEFS NIL))
           (CONS
            (LIST* SYM-CPP-CLASS-OUT-STELLA-CPP_DECLARATIONS
             KWD-CPP-CLASS-OUT-PUBLIC PARAMETERIZEDMEMBERVARDEFS NIL)
            NIL)
           NIL)
          (CONCATENATE
           (CL:IF (CL:NOT (CL:EQ PUBLICMEMBERVARDEFS NIL))
            (CONS
             (LIST* SYM-CPP-CLASS-OUT-STELLA-CPP_DECLARATIONS
              KWD-CPP-CLASS-OUT-PUBLIC PUBLICMEMBERVARDEFS NIL)
             NIL)
            NIL)
           (CONCATENATE
            (CL:IF (CL:NOT (CL:EQ PROTECTEDMEMBERVARDEFS NIL))
             (CONS
              (LIST* SYM-CPP-CLASS-OUT-STELLA-CPP_DECLARATIONS
               KWD-CPP-CLASS-OUT-PUBLIC PROTECTEDMEMBERVARDEFS NIL)
              NIL)
             NIL)
            (CONCATENATE
             (CL:IF (CL:NOT (CL:EQ CONSTRUCTORDEFS NIL))
              (CONS
               (LIST* SYM-CPP-CLASS-OUT-STELLA-CPP_SIGNATURES
                KWD-CPP-CLASS-OUT-PUBLIC CONSTRUCTORDEFS NIL)
               NIL)
              NIL)
             (CONCATENATE
              (CL:IF (CL:NOT (CL:EQ PUBLICMEMBERFUNCDEFS NIL))
               (CONS
                (LIST* SYM-CPP-CLASS-OUT-STELLA-CPP_SIGNATURES
                 KWD-CPP-CLASS-OUT-PUBLIC PUBLICMEMBERFUNCDEFS NIL)
                NIL)
               NIL)
              (CONCATENATE
               (CL:IF (CL:NOT (CL:EQ PROTECTEDMEMBERFUNCDEFS NIL))
                (CONS
                 (LIST* SYM-CPP-CLASS-OUT-STELLA-CPP_SIGNATURES
                  KWD-CPP-CLASS-OUT-PUBLIC PROTECTEDMEMBERFUNCDEFS NIL)
                 NIL)
                NIL)
               NIL))))))))))))))

(CL:DEFUN STARTUP-CPP-CLASS-OUT ()
  (CL:LET* ((*MODULE* *STELLA-MODULE*) (*CONTEXT* *MODULE*))
   (CL:DECLARE (CL:SPECIAL *MODULE* *CONTEXT*))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 2)
    (CL:SETQ SGT-CPP-CLASS-OUT-STELLA-OBJECT
     (INTERN-RIGID-SYMBOL-WRT-MODULE "OBJECT" NULL 1))
    (CL:SETQ KWD-CPP-CLASS-OUT-EMBEDDED
     (INTERN-RIGID-SYMBOL-WRT-MODULE "EMBEDDED" NULL 2))
    (CL:SETQ KWD-CPP-CLASS-OUT-INSTANCE
     (INTERN-RIGID-SYMBOL-WRT-MODULE "INSTANCE" NULL 2))
    (CL:SETQ KWD-CPP-CLASS-OUT-CLASS
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CLASS" NULL 2))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-NULL
     (INTERN-RIGID-SYMBOL-WRT-MODULE "NULL" NULL 0))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-SLOT-TYPE-SPECIFIER
     (INTERN-RIGID-SYMBOL-WRT-MODULE "SLOT-TYPE-SPECIFIER" NULL 0))
    (CL:SETQ SGT-CPP-CLASS-OUT-STELLA-ANCHORED-TYPE-SPECIFIER
     (INTERN-RIGID-SYMBOL-WRT-MODULE "ANCHORED-TYPE-SPECIFIER" NULL 1))
    (CL:SETQ SGT-CPP-CLASS-OUT-STELLA-UNKNOWN
     (INTERN-RIGID-SYMBOL-WRT-MODULE "UNKNOWN" NULL 1))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-DEFINED?
     (INTERN-RIGID-SYMBOL-WRT-MODULE "DEFINED?" NULL 0))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-NULL?
     (INTERN-RIGID-SYMBOL-WRT-MODULE "NULL?" NULL 0))
    (CL:SETQ SGT-CPP-CLASS-OUT-STELLA-METHOD-SLOT
     (INTERN-RIGID-SYMBOL-WRT-MODULE "METHOD-SLOT" NULL 1))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-CLASS-CPP-NATIVE-TYPE
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CLASS-CPP-NATIVE-TYPE" NULL 0))
    (CL:SETQ KWD-CPP-CLASS-OUT-CPP
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CPP" NULL 2))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-GC
     (INTERN-RIGID-SYMBOL-WRT-MODULE "GC" NULL 0))
    (CL:SETQ KWD-CPP-CLASS-OUT-CPP-STANDALONE
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CPP-STANDALONE" NULL 2))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-CPP_CLASS
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CPP_CLASS" NULL 0))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-DOCUMENTATION
     (INTERN-RIGID-SYMBOL-WRT-MODULE "DOCUMENTATION" NULL 0))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-CPP_COMMENT
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CPP_COMMENT" NULL 0))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-CPP_DECLARATIONS
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CPP_DECLARATIONS" NULL 0))
    (CL:SETQ KWD-CPP-CLASS-OUT-PUBLIC
     (INTERN-RIGID-SYMBOL-WRT-MODULE "PUBLIC" NULL 2))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-CPP_SIGNATURES
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CPP_SIGNATURES" NULL 0))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-STARTUP-CPP-CLASS-OUT
     (INTERN-RIGID-SYMBOL-WRT-MODULE "STARTUP-CPP-CLASS-OUT" NULL 0))
    (CL:SETQ SYM-CPP-CLASS-OUT-STELLA-METHOD-STARTUP-CLASSNAME
     (INTERN-RIGID-SYMBOL-WRT-MODULE "METHOD-STARTUP-CLASSNAME" NULL 0)))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 6) (FINALIZE-CLASSES))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 7)
    (DEFINE-FUNCTION-OBJECT "CPP-YIELD-INITIAL-NULL-VALUE"
     "(DEFUN (CPP-YIELD-INITIAL-NULL-VALUE CONS) ())"
     (CL:FUNCTION CPP-YIELD-INITIAL-NULL-VALUE) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-YIELD-MEMBER-VAR-TREE"
     "(DEFUN (CPP-YIELD-MEMBER-VAR-TREE CONS) ((SLOT STORAGE-SLOT) (CLASS CLASS)))"
     (CL:FUNCTION CPP-YIELD-MEMBER-VAR-TREE) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-YIELD-PARAMETERIZED-MEMBER-VAR-TREE"
     "(DEFUN (CPP-YIELD-PARAMETERIZED-MEMBER-VAR-TREE CONS) ((SLOT STORAGE-SLOT) (CLASS CLASS)))"
     (CL:FUNCTION CPP-YIELD-PARAMETERIZED-MEMBER-VAR-TREE) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-YIELD-STATIC-MEMBER-ALLOCATION-TREE"
     "(DEFUN (CPP-YIELD-STATIC-MEMBER-ALLOCATION-TREE CONS) ((SLOT STORAGE-SLOT) (CLASS CLASS)))"
     (CL:FUNCTION CPP-YIELD-STATIC-MEMBER-ALLOCATION-TREE) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE"
     "(DEFUN (CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE CONS) ((METHOD METHOD-SLOT)))"
     (CL:FUNCTION CPP-YIELD-MEMBER-FUNC-SIGNATURE-TREE) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-YIELD-CONSTRUCTOR-SIGNATURE-TREE"
     "(DEFUN (CPP-YIELD-CONSTRUCTOR-SIGNATURE-TREE CONS) ((METHOD METHOD-SLOT)))"
     (CL:FUNCTION CPP-YIELD-CONSTRUCTOR-SIGNATURE-TREE) NULL)
    (DEFINE-FUNCTION-OBJECT "SLOT-HAS-CLASS-PARAMETER-TYPE?"
     "(DEFUN (SLOT-HAS-CLASS-PARAMETER-TYPE? BOOLEAN) ((SLOT STORAGE-SLOT) (CLASS CLASS)))"
     (CL:FUNCTION SLOT-HAS-CLASS-PARAMETER-TYPE?) NULL)
    (DEFINE-FUNCTION-OBJECT "GET-SLOT-CLASS-PARAMETER-NAME"
     "(DEFUN (GET-SLOT-CLASS-PARAMETER-NAME SYMBOL) ((SLOT STORAGE-SLOT)))"
     (CL:FUNCTION GET-SLOT-CLASS-PARAMETER-NAME) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-NATIVE-METHOD?"
     "(DEFUN (CPP-NATIVE-METHOD? BOOLEAN) ((METHODSLOT METHOD-SLOT)))"
     (CL:FUNCTION CPP-NATIVE-METHOD?) NULL)
    (DEFINE-FUNCTION-OBJECT
     "CPP-GET-PARAMETERIZED-MEMBER-VARIABLE-DEFINITIONS"
     "(DEFUN (CPP-GET-PARAMETERIZED-MEMBER-VARIABLE-DEFINITIONS CONS) ((CLASS CLASS)))"
     (CL:FUNCTION CPP-GET-PARAMETERIZED-MEMBER-VARIABLE-DEFINITIONS) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-GET-MEMBER-VARIABLE-DEFINITIONS"
     "(DEFUN (CPP-GET-MEMBER-VARIABLE-DEFINITIONS CONS CONS) ((CLASS CLASS)))"
     (CL:FUNCTION CPP-GET-MEMBER-VARIABLE-DEFINITIONS) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-GET-STATIC-VARIABLE-DEFINITIONS"
     "(DEFUN (CPP-GET-STATIC-VARIABLE-DEFINITIONS CONS) ((CLASS CLASS)))"
     (CL:FUNCTION CPP-GET-STATIC-VARIABLE-DEFINITIONS) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-GET-CONSTRUCTOR-DEFINITIONS"
     "(DEFUN (CPP-GET-CONSTRUCTOR-DEFINITIONS CONS) ((CLASS CLASS)))"
     (CL:FUNCTION CPP-GET-CONSTRUCTOR-DEFINITIONS) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-GET-METHOD-DEFINITIONS"
     "(DEFUN (CPP-GET-METHOD-DEFINITIONS CONS CONS) ((CLASS CLASS)))"
     (CL:FUNCTION CPP-GET-METHOD-DEFINITIONS) NULL)
    (DEFINE-FUNCTION-OBJECT "MARK-RENAMING-SLOTS"
     "(DEFUN (MARK-RENAMING-SLOTS VOID) ((CLASS CLASS)))"
     (CL:FUNCTION MARK-RENAMING-SLOTS) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-CLASS-HAS-ONLY-NATIVE-PARENTS?"
     "(DEFUN (CPP-CLASS-HAS-ONLY-NATIVE-PARENTS? BOOLEAN) ((CLASS CLASS)))"
     (CL:FUNCTION CPP-CLASS-HAS-ONLY-NATIVE-PARENTS?) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-TRANSLATE-DEFINE-NATIVE-CLASS-UNIT"
     "(DEFUN (CPP-TRANSLATE-DEFINE-NATIVE-CLASS-UNIT CONS) ((UNIT TRANSLATION-UNIT)))"
     (CL:FUNCTION CPP-TRANSLATE-DEFINE-NATIVE-CLASS-UNIT) NULL)
    (DEFINE-FUNCTION-OBJECT "STARTUP-CPP-CLASS-OUT"
     "(DEFUN STARTUP-CPP-CLASS-OUT () :PUBLIC? TRUE)"
     (CL:FUNCTION STARTUP-CPP-CLASS-OUT) NULL)
    (CL:LET*
     ((FUNCTION
       (LOOKUP-FUNCTION SYM-CPP-CLASS-OUT-STELLA-STARTUP-CPP-CLASS-OUT)))
     (SET-DYNAMIC-SLOT-VALUE (%DYNAMIC-SLOTS FUNCTION)
      SYM-CPP-CLASS-OUT-STELLA-METHOD-STARTUP-CLASSNAME
      (WRAP-STRING "Startup-Cpp-Class-Out") NULL-STRING-WRAPPER)))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 8) (FINALIZE-SLOTS)
    (CLEANUP-UNFINALIZED-CLASSES)))
  :VOID)
