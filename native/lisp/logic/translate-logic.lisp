;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

#|--------------------------------------------------------------------------+
 |                                                                          |
 |  COPYRIGHT (C) UNIVERSITY OF SOUTHERN CALIFORNIA, 1997, 2000             | 
 |  University of Southern California, Information Sciences Institute       |
 |  4676 Admiralty Way                                                      |
 |  Marina Del Rey, California 90292                                        |
 |                                                                          |
 |  This software was developed under the terms and conditions of Contract  |
 |  No. N00014-94-C-0245 between the Defense Advanced Research Projects     |
 |  Agency and the University of Southern California, Information Sciences  | 
 |  Institute.  Use and distribution of this software is further subject    |
 |  to the provisions of that contract and any other agreements developed   |
 |  between the user of the software and the University of Southern         |
 |  California, Information Sciences Institute.  It is supplied "AS IS",    |
 |  without any warranties of any kind.  It is furnished only on the basis  |
 |  that any party who receives it indemnifies and holds harmless the       |
 |  parties who furnish and originate it against any claims, demands, or    |
 |  liabilities connected with using it, furnishing it to others or         |
 |  providing it to a third party.  THIS NOTICE MUST NOT BE REMOVED FROM    |
 |  THE SOFTWARE, AND IN THE EVENT THAT THE SOFTWARE IS DIVIDED, IT SHOULD  |
 |  BE ATTACHED TO EVERY PART.                                              |
 |                                                                          |
 +--------------------------------------------------------------------------|#

(CL:IN-PACKAGE "STELLA")

;;; Auxiliary variables:

(CL:DEFVAR KWD-TRANSLATE-LOGIC-COMMON-LISP NULL)
(CL:DEFVAR KWD-TRANSLATE-LOGIC-PRODUCTION-SETTINGS? NULL)
(CL:DEFVAR KWD-TRANSLATE-LOGIC-TWO-PASS? NULL)
(CL:DEFVAR KWD-TRANSLATE-LOGIC-FORCE-TRANSLATION? NULL)
(CL:DEFVAR KWD-TRANSLATE-LOGIC-USE-COMMON-LISP-VECTOR-STRUCTS NULL)
(CL:DEFVAR KWD-TRANSLATE-LOGIC-CPP NULL)
(CL:DEFVAR KWD-TRANSLATE-LOGIC-CPP-HEADER NULL)
(CL:DEFVAR KWD-TRANSLATE-LOGIC-JAVA NULL)
(CL:DEFVAR KWD-TRANSLATE-LOGIC-STELLA NULL)
(CL:DEFVAR KWD-TRANSLATE-LOGIC-DEFINE NULL)

;;; Forward declarations:

(CL:DECLAIM
 (CL:SPECIAL *STARTUP-TIME-PHASE* *MODULE* *TRANSLATIONVERBOSITYLEVEL*
  *TRANSLATIONUNITS* *TRANSLATOROUTPUTLANGUAGE* STANDARD-OUTPUT
  *CURRENTSYSTEMDEFINITION* EOL *CURRENT-ENVIRONMENT-FEATURES* TRUE-WRAPPER
  FALSE-WRAPPER))

;;; (DEFUN CL-MAKE-LOGIC ...)

(CL:DEFUN CL-MAKE-LOGIC (PRODUCTIONSETTINGS?)
  (%MAKE-SYSTEM "logic" KWD-TRANSLATE-LOGIC-COMMON-LISP
   (CONS-LIST KWD-TRANSLATE-LOGIC-PRODUCTION-SETTINGS?
    (CL:IF PRODUCTIONSETTINGS? TRUE-WRAPPER FALSE-WRAPPER))))

;;; (DEFUN CL-TRANSLATE-LOGIC ...)

(CL:DEFUN CL-TRANSLATE-LOGIC (PRODUCTIONSETTINGS?)
  (TRANSLATE-SYSTEM "logic" KWD-TRANSLATE-LOGIC-COMMON-LISP
   KWD-TRANSLATE-LOGIC-TWO-PASS? TRUE-WRAPPER
   KWD-TRANSLATE-LOGIC-FORCE-TRANSLATION? TRUE-WRAPPER
   KWD-TRANSLATE-LOGIC-PRODUCTION-SETTINGS?
   (CL:IF PRODUCTIONSETTINGS? TRUE-WRAPPER FALSE-WRAPPER)))

;;; (DEFUN CL-TRANSLATE-POWERLOOM ...)

(CL:DEFUN CL-TRANSLATE-POWERLOOM ()
  (CL-TRANSLATE-STELLA TRUE)
  (CL-TRANSLATE-LOGIC TRUE)
  (PRINT-UNDEFINED-METHODS NULL FALSE))

;;; (DEFUN CL-TRANSLATE-FAST-POWERLOOM ...)

(CL:DEFUN CL-TRANSLATE-FAST-POWERLOOM ()
  (CL:LET*
   ((ALREADYUSEVECTORSTRUCTS?
     (MEMB? *CURRENT-ENVIRONMENT-FEATURES*
      KWD-TRANSLATE-LOGIC-USE-COMMON-LISP-VECTOR-STRUCTS)))
   (ENABLE-ENVIRONMENT-FEATURE
    KWD-TRANSLATE-LOGIC-USE-COMMON-LISP-VECTOR-STRUCTS)
   (CL-TRANSLATE-STELLA TRUE) (CL-TRANSLATE-LOGIC TRUE)
   (PRINT-UNDEFINED-METHODS NULL FALSE)
   (CL:WHEN (CL:NOT ALREADYUSEVECTORSTRUCTS?)
    (DISABLE-ENVIRONMENT-FEATURE
     KWD-TRANSLATE-LOGIC-USE-COMMON-LISP-VECTOR-STRUCTS))))

;;; (DEFUN REMOVE-TRANSLATOR-METHOD-SIGNATURES ...)

(CL:DEFUN REMOVE-TRANSLATOR-METHOD-SIGNATURES ()
  (CL:LET*
   ((METHOD NULL)
    (ITER-000 (ALL-METHODS (GET-STELLA-MODULE "STELLA" TRUE) TRUE)))
   (CL:LOOP WHILE (NEXT? ITER-000) DO (CL:SETQ METHOD (%VALUE ITER-000))
    (CL:WHEN (CL:NOT (CL:EQ (%METHOD-STRINGIFIED-SOURCE METHOD) NULL))
     (CL:SETF (%METHOD-STRINGIFIED-SOURCE METHOD)
      (CONCATENATE " " (%METHOD-STRINGIFIED-SOURCE METHOD))))))
  (STARTUP-CPP-TRANSLATOR FALSE)
  (STARTUP-JAVA-TRANSLATOR FALSE)
  (STARTUP-IDL-TRANSLATOR FALSE)
  (CL:LET* ((METHODSTOREMOVE (NEW-LIST)))
   (CL:LET*
    ((METHOD NULL)
     (ITER-001 (ALL-METHODS (GET-STELLA-MODULE "STELLA" TRUE) TRUE))
     (COLLECT-000 NULL))
    (CL:LOOP WHILE (NEXT? ITER-001) DO (CL:SETQ METHOD (%VALUE ITER-001))
     (CL:WHEN
      (CL:AND (CL:NOT (CL:EQ (%METHOD-STRINGIFIED-SOURCE METHOD) NULL))
       (CL:NOT
        (CL:EQL
         (CL:LET ((SELF (%METHOD-STRINGIFIED-SOURCE METHOD)) (POSITION 0))
          (CL:DECLARE (CL:TYPE CL:SIMPLE-STRING SELF)
           (CL:TYPE CL:FIXNUM POSITION))
          (CL:AREF (CL:THE CL:SIMPLE-STRING SELF)
           (CL:THE CL:FIXNUM POSITION)))
         #\ )))
      (CL:IF (CL:EQ COLLECT-000 NULL)
       (CL:PROGN (CL:SETQ COLLECT-000 (CONS METHOD NIL))
        (CL:IF (CL:EQ (%THE-CONS-LIST METHODSTOREMOVE) NIL)
         (CL:SETF (%THE-CONS-LIST METHODSTOREMOVE) COLLECT-000)
         (ADD-CONS-TO-END-OF-CONS-LIST (%THE-CONS-LIST METHODSTOREMOVE)
          COLLECT-000)))
       (CL:PROGN (CL:SETF (%%REST COLLECT-000) (CONS METHOD NIL))
        (CL:SETQ COLLECT-000 (%%REST COLLECT-000)))))))
   (CL:LET* ((METHOD NULL) (ITER-002 (%THE-CONS-LIST METHODSTOREMOVE)))
    (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-002 NIL)) DO
     (CL:PROGN (CL:SETQ METHOD (%%VALUE ITER-002))
      (CL:SETQ ITER-002 (%%REST ITER-002)))
     (REMOVE (%CLASS-LOCAL-SLOTS (%SURROGATE-VALUE (%SLOT-OWNER METHOD)))
      METHOD)
     (UNFINALIZE-CLASS-SLOTS (%SURROGATE-VALUE (%SLOT-OWNER METHOD)))))
   (FINALIZE-CLASSES-AND-SLOTS)))

;;; (DEFUN CPP-TRANSLATE-LOGIC ...)

(CL:DEFUN CPP-TRANSLATE-LOGIC ()
  (TRANSLATE-SYSTEM "logic" KWD-TRANSLATE-LOGIC-CPP
   KWD-TRANSLATE-LOGIC-TWO-PASS? TRUE-WRAPPER
   KWD-TRANSLATE-LOGIC-FORCE-TRANSLATION? TRUE-WRAPPER
   KWD-TRANSLATE-LOGIC-PRODUCTION-SETTINGS? TRUE-WRAPPER))

;;; (DEFUN CPP-TRANSLATE-POWERLOOM ...)

(CL:DEFUN CPP-TRANSLATE-POWERLOOM ()
  (CPP-TRANSLATE-LOGIC)
  (CPP-TRANSLATE-SYSTEM "stella")
  (PRINT-UNDEFINED-METHODS NULL FALSE)
  (CL:LET*
   ((*CURRENTSYSTEMDEFINITION* (GET-SYSTEM-DEFINITION "logic"))
    (*CURRENTSYSTEMDEFINITIONSUBDIRECTORY*
     (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
      (%DIRECTORY *CURRENTSYSTEMDEFINITION*) NULL)))
   (CL:DECLARE
    (CL:SPECIAL *CURRENTSYSTEMDEFINITION*
     *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
   (CL:DECLARE
    (CL:TYPE CL:SIMPLE-STRING *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
   (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
    (CL:PROGN
     (DELETE-FILE
      (MAKE-FILE-NAME "stella-includes" KWD-TRANSLATE-LOGIC-CPP-HEADER TRUE)))
    (CL:WARN "Can't find a system named logic~%"))))

;;; (DEFUN CPP-TRANSLATE-POWERLOOM-RELEASE ...)

(CL:DEFUN CPP-TRANSLATE-POWERLOOM-RELEASE ()
  (REMOVE-TRANSLATOR-METHOD-SIGNATURES)
  (CPP-TRANSLATE-POWERLOOM))

;;; (DEFUN JAVA-TRANSLATE-LOGIC ...)

(CL:DEFUN JAVA-TRANSLATE-LOGIC ()
  (TRANSLATE-SYSTEM "logic" KWD-TRANSLATE-LOGIC-JAVA
   KWD-TRANSLATE-LOGIC-TWO-PASS? TRUE-WRAPPER
   KWD-TRANSLATE-LOGIC-FORCE-TRANSLATION? TRUE-WRAPPER
   KWD-TRANSLATE-LOGIC-PRODUCTION-SETTINGS? TRUE-WRAPPER))

;;; (DEFUN (OPERATE-ON-SYSTEM-FILES BOOLEAN) ...)

(CL:DEFUN OPERATE-ON-SYSTEM-FILES (SYSTEM OPERATION FORCETRANSLATION?)
  (CL:LET*
   ((FILENAME NULL) (TRANSLATEDFILE? FALSE)
    (OUTPUTLANGUAGE *TRANSLATOROUTPUTLANGUAGE*))
   (CL:LET* ((FILE NULL) (ITER-000 (SYSTEM-DEFINITION-SOURCE-FILES SYSTEM)))
    (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-000 NIL)) DO
     (CL:PROGN (CL:SETQ FILE (%%VALUE ITER-000))
      (CL:SETQ ITER-000 (%%REST ITER-000)))
     (CL:TAGBODY
      (CL:WHEN
       (CL:OR FORCETRANSLATION?
        (STELLA-NEED-TO-TRANSLATE? FILE OUTPUTLANGUAGE))
       (CL:SETQ FILENAME
        (MAKE-FILE-NAME (%WRAPPER-VALUE FILE) KWD-TRANSLATE-LOGIC-STELLA
         TRUE))
       (CL:WHEN (CL:NOT (PROBE-FILE? FILENAME))
        (%%PRINT-STREAM (%NATIVE-STREAM STANDARD-OUTPUT) "Warning: File `"
         FILENAME "' does not exist." EOL)
        (CL:GO :CONTINUE))
       (OPERATE-ON-FILE FILENAME OPERATION)
       (CLEAN-UP-TRANSLATION-UNITS-SPECIAL) (CL:SETQ TRANSLATEDFILE? TRUE))
      :CONTINUE)))
   TRANSLATEDFILE?))

;;; (DEFUN JAVA-TRANSLATE-POWERLOOM-INTERNAL ...)

(CL:DEFUN JAVA-TRANSLATE-POWERLOOM-INTERNAL (FORCETRANSLATION?)
  (CL:LET* ((*TRANSLATIONUNITS* (NEW-LIST)))
   (CL:DECLARE (CL:SPECIAL *TRANSLATIONUNITS*))
   (CL:LET* ((TRANSLATEDFILE? FALSE) (SAVEDJAVATRANSLATIONUNITS NIL))
    (CLEAR-SYMBOL-REGISTRY)
    (CL:LET*
     ((*CURRENTSYSTEMDEFINITION* (GET-SYSTEM-DEFINITION "logic"))
      (*CURRENTSYSTEMDEFINITIONSUBDIRECTORY*
       (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
        (%DIRECTORY *CURRENTSYSTEMDEFINITION*) NULL)))
     (CL:DECLARE
      (CL:SPECIAL *CURRENTSYSTEMDEFINITION*
       *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
     (CL:DECLARE
      (CL:TYPE CL:SIMPLE-STRING *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
     (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
      (CL:PROGN
       (CL:SETQ TRANSLATEDFILE?
        (OPERATE-ON-SYSTEM-FILES *CURRENTSYSTEMDEFINITION*
         KWD-TRANSLATE-LOGIC-DEFINE FORCETRANSLATION?)))
      (CL:WARN "Can't find a system named logic~%")))
    (CL:LET*
     ((*CURRENTSYSTEMDEFINITION* (GET-SYSTEM-DEFINITION "stella"))
      (*CURRENTSYSTEMDEFINITIONSUBDIRECTORY*
       (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
        (%DIRECTORY *CURRENTSYSTEMDEFINITION*) NULL)))
     (CL:DECLARE
      (CL:SPECIAL *CURRENTSYSTEMDEFINITION*
       *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
     (CL:DECLARE
      (CL:TYPE CL:SIMPLE-STRING *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
     (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
      (CL:PROGN
       (CL:SETQ TRANSLATEDFILE?
        (CL:OR
         (OPERATE-ON-SYSTEM-FILES *CURRENTSYSTEMDEFINITION*
          KWD-TRANSLATE-LOGIC-DEFINE FORCETRANSLATION?)
         TRANSLATEDFILE?)))
      (CL:WARN "Can't find a system named stella~%")))
    (CL:WHEN TRANSLATEDFILE?
     (CL:WHEN (CL:>= *TRANSLATIONVERBOSITYLEVEL* 1)
      (%%PRINT-STREAM (%NATIVE-STREAM STANDARD-OUTPUT)
       "*** Pass 2, finalizing objects..." EOL))
     (FINALIZE-CLASSES-AND-SLOTS))
    (SET-OPTIMIZATION-LEVELS 1 0 3 3)
    (CL:LET*
     ((*CURRENTSYSTEMDEFINITION* (GET-SYSTEM-DEFINITION "stella"))
      (*CURRENTSYSTEMDEFINITIONSUBDIRECTORY*
       (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
        (%DIRECTORY *CURRENTSYSTEMDEFINITION*) NULL)))
     (CL:DECLARE
      (CL:SPECIAL *CURRENTSYSTEMDEFINITION*
       *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
     (CL:DECLARE
      (CL:TYPE CL:SIMPLE-STRING *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
     (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
      (CL:PROGN
       (CL:LET*
        ((FILE NULL)
         (ITER-000
          (SYSTEM-DEFINITION-SOURCE-FILES *CURRENTSYSTEMDEFINITION*)))
        (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-000 NIL)) DO
         (CL:PROGN (CL:SETQ FILE (%%VALUE ITER-000))
          (CL:SETQ ITER-000 (%%REST ITER-000)))
         (CL:WHEN
          (CL:OR FORCETRANSLATION?
           (STELLA-NEED-TO-TRANSLATE? FILE KWD-TRANSLATE-LOGIC-JAVA))
          (TRANSLATE-FILE (%WRAPPER-VALUE FILE) KWD-TRANSLATE-LOGIC-JAVA
           TRUE)))))
      (CL:WARN "Can't find a system named stella~%")))
    (CL:LET*
     ((*CURRENTSYSTEMDEFINITION* (GET-SYSTEM-DEFINITION "logic"))
      (*CURRENTSYSTEMDEFINITIONSUBDIRECTORY*
       (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
        (%DIRECTORY *CURRENTSYSTEMDEFINITION*) NULL)))
     (CL:DECLARE
      (CL:SPECIAL *CURRENTSYSTEMDEFINITION*
       *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
     (CL:DECLARE
      (CL:TYPE CL:SIMPLE-STRING *CURRENTSYSTEMDEFINITIONSUBDIRECTORY*))
     (CL:IF (CL:NOT (CL:EQ *CURRENTSYSTEMDEFINITION* NULL))
      (CL:PROGN
       (CL:LET*
        ((FILE NULL)
         (ITER-001
          (SYSTEM-DEFINITION-SOURCE-FILES *CURRENTSYSTEMDEFINITION*)))
        (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-001 NIL)) DO
         (CL:PROGN (CL:SETQ FILE (%%VALUE ITER-001))
          (CL:SETQ ITER-001 (%%REST ITER-001)))
         (CL:WHEN
          (CL:OR FORCETRANSLATION?
           (STELLA-NEED-TO-TRANSLATE? FILE KWD-TRANSLATE-LOGIC-JAVA))
          (TRANSLATE-FILE (%WRAPPER-VALUE FILE) KWD-TRANSLATE-LOGIC-JAVA
           TRUE)))))
      (CL:WARN "Can't find a system named logic~%")))
    (CL:SETQ *TRANSLATIONUNITS* (NEW-LIST))
    (CL:LET* ((ITEM NULL) (ITER-002 SAVEDJAVATRANSLATIONUNITS))
     (CL:LOOP WHILE (CL:NOT (CL:EQ ITER-002 NIL)) DO
      (CL:PROGN (CL:SETQ ITEM (%%VALUE ITER-002))
       (CL:SETQ ITER-002 (%%REST ITER-002)))
      (CL:SETQ *TRANSLATIONUNITS* (CONCATENATE ITEM *TRANSLATIONUNITS*))))
    (CL:WHEN (CL:>= *TRANSLATIONVERBOSITYLEVEL* 1)
     (%%PRINT-STREAM (%NATIVE-STREAM STANDARD-OUTPUT)
      "    ==============================" EOL))
    (TRANSLATE-AND-OUTPUT-UNITS-TO-FILE NULL "Java") (CLEAR-SYMBOL-REGISTRY)
    (CLEAN-UP-TRANSLATION-UNITS-SPECIAL))))

;;; (DEFUN JAVA-TRANSLATE-POWERLOOM ...)

(CL:DEFUN JAVA-TRANSLATE-POWERLOOM ()
  (JAVA-TRANSLATE-POWERLOOM-INTERNAL TRUE))

;;; (DEFUN JAVA-TRANSLATE-POWERLOOM-RELEASE ...)

(CL:DEFUN JAVA-TRANSLATE-POWERLOOM-RELEASE ()
  (REMOVE-TRANSLATOR-METHOD-SIGNATURES)
  (JAVA-TRANSLATE-POWERLOOM))

(CL:DEFUN STARTUP-TRANSLATE-LOGIC ()
  (CL:LET*
   ((*MODULE* (GET-STELLA-MODULE "/LOGIC" (> *STARTUP-TIME-PHASE* 1)))
    (*CONTEXT* *MODULE*))
   (CL:DECLARE (CL:SPECIAL *MODULE* *CONTEXT*))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 2)
    (CL:SETQ KWD-TRANSLATE-LOGIC-COMMON-LISP
     (INTERN-RIGID-SYMBOL-WRT-MODULE "COMMON-LISP" NULL 2))
    (CL:SETQ KWD-TRANSLATE-LOGIC-PRODUCTION-SETTINGS?
     (INTERN-RIGID-SYMBOL-WRT-MODULE "PRODUCTION-SETTINGS?" NULL 2))
    (CL:SETQ KWD-TRANSLATE-LOGIC-TWO-PASS?
     (INTERN-RIGID-SYMBOL-WRT-MODULE "TWO-PASS?" NULL 2))
    (CL:SETQ KWD-TRANSLATE-LOGIC-FORCE-TRANSLATION?
     (INTERN-RIGID-SYMBOL-WRT-MODULE "FORCE-TRANSLATION?" NULL 2))
    (CL:SETQ KWD-TRANSLATE-LOGIC-USE-COMMON-LISP-VECTOR-STRUCTS
     (INTERN-RIGID-SYMBOL-WRT-MODULE "USE-COMMON-LISP-VECTOR-STRUCTS" NULL 2))
    (CL:SETQ KWD-TRANSLATE-LOGIC-CPP
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CPP" NULL 2))
    (CL:SETQ KWD-TRANSLATE-LOGIC-CPP-HEADER
     (INTERN-RIGID-SYMBOL-WRT-MODULE "CPP-HEADER" NULL 2))
    (CL:SETQ KWD-TRANSLATE-LOGIC-JAVA
     (INTERN-RIGID-SYMBOL-WRT-MODULE "JAVA" NULL 2))
    (CL:SETQ KWD-TRANSLATE-LOGIC-STELLA
     (INTERN-RIGID-SYMBOL-WRT-MODULE "STELLA" NULL 2))
    (CL:SETQ KWD-TRANSLATE-LOGIC-DEFINE
     (INTERN-RIGID-SYMBOL-WRT-MODULE "DEFINE" NULL 2)))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 6) (FINALIZE-CLASSES))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 7)
    (DEFINE-FUNCTION-OBJECT "CL-MAKE-LOGIC"
     "(DEFUN CL-MAKE-LOGIC ((PRODUCTIONSETTINGS? BOOLEAN)))"
     (CL:FUNCTION CL-MAKE-LOGIC) NULL)
    (DEFINE-FUNCTION-OBJECT "CL-TRANSLATE-LOGIC"
     "(DEFUN CL-TRANSLATE-LOGIC ((PRODUCTIONSETTINGS? BOOLEAN)))"
     (CL:FUNCTION CL-TRANSLATE-LOGIC) NULL)
    (DEFINE-FUNCTION-OBJECT "CL-TRANSLATE-POWERLOOM"
     "(DEFUN CL-TRANSLATE-POWERLOOM ())" (CL:FUNCTION CL-TRANSLATE-POWERLOOM)
     NULL)
    (DEFINE-FUNCTION-OBJECT "CL-TRANSLATE-FAST-POWERLOOM"
     "(DEFUN CL-TRANSLATE-FAST-POWERLOOM ())"
     (CL:FUNCTION CL-TRANSLATE-FAST-POWERLOOM) NULL)
    (DEFINE-FUNCTION-OBJECT "REMOVE-TRANSLATOR-METHOD-SIGNATURES"
     "(DEFUN REMOVE-TRANSLATOR-METHOD-SIGNATURES ())"
     (CL:FUNCTION REMOVE-TRANSLATOR-METHOD-SIGNATURES) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-TRANSLATE-LOGIC"
     "(DEFUN CPP-TRANSLATE-LOGIC ())" (CL:FUNCTION CPP-TRANSLATE-LOGIC) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-TRANSLATE-POWERLOOM"
     "(DEFUN CPP-TRANSLATE-POWERLOOM ())"
     (CL:FUNCTION CPP-TRANSLATE-POWERLOOM) NULL)
    (DEFINE-FUNCTION-OBJECT "CPP-TRANSLATE-POWERLOOM-RELEASE"
     "(DEFUN CPP-TRANSLATE-POWERLOOM-RELEASE ())"
     (CL:FUNCTION CPP-TRANSLATE-POWERLOOM-RELEASE) NULL)
    (DEFINE-FUNCTION-OBJECT "JAVA-TRANSLATE-LOGIC"
     "(DEFUN JAVA-TRANSLATE-LOGIC ())" (CL:FUNCTION JAVA-TRANSLATE-LOGIC)
     NULL)
    (DEFINE-FUNCTION-OBJECT "OPERATE-ON-SYSTEM-FILES"
     "(DEFUN (OPERATE-ON-SYSTEM-FILES BOOLEAN) ((SYSTEM SYSTEM-DEFINITION) (OPERATION KEYWORD) (FORCETRANSLATION? BOOLEAN)))"
     (CL:FUNCTION OPERATE-ON-SYSTEM-FILES) NULL)
    (DEFINE-FUNCTION-OBJECT "JAVA-TRANSLATE-POWERLOOM-INTERNAL"
     "(DEFUN JAVA-TRANSLATE-POWERLOOM-INTERNAL ((FORCETRANSLATION? BOOLEAN)))"
     (CL:FUNCTION JAVA-TRANSLATE-POWERLOOM-INTERNAL) NULL)
    (DEFINE-FUNCTION-OBJECT "JAVA-TRANSLATE-POWERLOOM"
     "(DEFUN JAVA-TRANSLATE-POWERLOOM ())"
     (CL:FUNCTION JAVA-TRANSLATE-POWERLOOM) NULL)
    (DEFINE-FUNCTION-OBJECT "JAVA-TRANSLATE-POWERLOOM-RELEASE"
     "(DEFUN JAVA-TRANSLATE-POWERLOOM-RELEASE ())"
     (CL:FUNCTION JAVA-TRANSLATE-POWERLOOM-RELEASE) NULL)
    (DEFINE-FUNCTION-OBJECT "STARTUP-TRANSLATE-LOGIC"
     "(DEFUN STARTUP-TRANSLATE-LOGIC () :PUBLIC? TRUE)"
     (CL:FUNCTION STARTUP-TRANSLATE-LOGIC) NULL))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 8) (FINALIZE-SLOTS)
    (CLEANUP-UNFINALIZED-CLASSES))))
