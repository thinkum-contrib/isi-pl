;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

;;; timepoint-kb.slisp

#|
 +---------------------------- BEGIN LICENSE BLOCK ---------------------------+
 |                                                                            |
 | Version: MPL 1.1/GPL 2.0/LGPL 2.1                                          |
 |                                                                            |
 | The contents of this file are subject to the Mozilla Public License        |
 | Version 1.1 (the "License"); you may not use this file except in           |
 | compliance with the License. You may obtain a copy of the License at       |
 | http://www.mozilla.org/MPL/                                                |
 |                                                                            |
 | Software distributed under the License is distributed on an "AS IS" basis, |
 | WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License   |
 | for the specific language governing rights and limitations under the       |
 | License.                                                                   |
 |                                                                            |
 | The Original Code is the PowerLoom KR&R System.                            |
 |                                                                            |
 | The Initial Developer of the Original Code is                              |
 | UNIVERSITY OF SOUTHERN CALIFORNIA, INFORMATION SCIENCES INSTITUTE          |
 | 4676 Admiralty Way, Marina Del Rey, California 90292, U.S.A.               |
 |                                                                            |
 | Portions created by the Initial Developer are Copyright (C) 1997-2017      |
 | the Initial Developer. All Rights Reserved.                                |
 |                                                                            |
 | Contributor(s):                                                            |
 |                                                                            |
 | Alternatively, the contents of this file may be used under the terms of    |
 | either the GNU General Public License Version 2 or later (the "GPL"), or   |
 | the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),   |
 | in which case the provisions of the GPL or the LGPL are applicable instead |
 | of those above. If you wish to allow use of your version of this file only |
 | under the terms of either the GPL or the LGPL, and not to allow others to  |
 | use your version of this file under the terms of the MPL, indicate your    |
 | decision by deleting the provisions above and replace them with the notice |
 | and other provisions required by the GPL or the LGPL. If you do not delete |
 | the provisions above, a recipient may use your version of this file under  |
 | the terms of any one of the MPL, the GPL or the LGPL.                      |
 |                                                                            |
 +----------------------------- END LICENSE BLOCK ----------------------------+
|#

(CL:IN-PACKAGE "STELLA")

;;; Auxiliary variables:

(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-DAY-OF-WEEK NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB-CLOSED NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-STELLA-TRUE NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB-AXIOMS NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-OF NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB--> NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-?TP NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB-DOCUMENTATION NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB-COMPUTED NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB-RELATION-CONSTRAINT NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-OF-CONSTRAINT NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB-RELATION-SPECIALIST NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-PL-KERNEL-KB-CONSTRAINT-SPECIALIST NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-DURATION-OF NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-DURATION-OF-CONSTRAINT NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIME- NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIME-MINUS-CONSTRAINT NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIME+ NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIME-PLUS-CONSTRAINT NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-OF* NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB-RELATION-EVALUATOR NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-OF*-EVALUATOR NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-OF*-SPECIALIST NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-YEAR NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB-RELATION-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-YEAR-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-MONTH NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-MONTH-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-DAY NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-DAY-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-DAY-OF-WEEK NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-DAY-OF-WEEK-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-HOUR NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-HOUR-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-MINUTE NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-MINUTE-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-SECOND NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-SECOND-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-DATE NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-DATE-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-TIME NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-TIME-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-FORMAT-TIMEPOINT NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-FORMAT-TIMEPOINT-COMPUTATION NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-KB-CURRENT-TIME NULL)
(CL:DEFVAR KWD-TIMEPOINT-KB-<<= NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-STARTUP-TIMEPOINT-KB NULL)
(CL:DEFVAR SYM-TIMEPOINT-KB-STELLA-METHOD-STARTUP-CLASSNAME NULL)

;;; Forward declarations:

(CL:DECLAIM (CL:SPECIAL *STARTUP-TIME-PHASE* *MODULE*))

(CL:DEFUN STARTUP-TIMEPOINT-KB ()
  (CL:LET* ((*MODULE* (GET-STELLA-MODULE "/TIMEPOINT-SUPPORT" (> *STARTUP-TIME-PHASE* 1))) (*CONTEXT* *MODULE*)) (CL:DECLARE (CL:SPECIAL *MODULE* *CONTEXT*))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 2)
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-DAY-OF-WEEK (INTERN-RIGID-SYMBOL-WRT-MODULE "DAY-OF-WEEK" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ KWD-TIMEPOINT-KB-CLOSED (INTERN-RIGID-SYMBOL-WRT-MODULE "CLOSED" NULL 2))
    (CL:SETQ SYM-TIMEPOINT-KB-STELLA-TRUE (INTERN-RIGID-SYMBOL-WRT-MODULE "TRUE" (GET-STELLA-MODULE "/STELLA" CL:T) 0))
    (CL:SETQ KWD-TIMEPOINT-KB-AXIOMS (INTERN-RIGID-SYMBOL-WRT-MODULE "AXIOMS" NULL 2))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-OF (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-OF" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ KWD-TIMEPOINT-KB--> (INTERN-RIGID-SYMBOL-WRT-MODULE "->" NULL 2))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-?TP (INTERN-RIGID-SYMBOL-WRT-MODULE "?TP" NULL 0))
    (CL:SETQ KWD-TIMEPOINT-KB-DOCUMENTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "DOCUMENTATION" NULL 2))
    (CL:SETQ KWD-TIMEPOINT-KB-COMPUTED (INTERN-RIGID-SYMBOL-WRT-MODULE "COMPUTED" NULL 2))
    (CL:SETQ KWD-TIMEPOINT-KB-RELATION-CONSTRAINT (INTERN-RIGID-SYMBOL-WRT-MODULE "RELATION-CONSTRAINT" NULL 2))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-OF-CONSTRAINT (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-OF-CONSTRAINT" NULL 0))
    (CL:SETQ KWD-TIMEPOINT-KB-RELATION-SPECIALIST (INTERN-RIGID-SYMBOL-WRT-MODULE "RELATION-SPECIALIST" NULL 2))
    (CL:SETQ SYM-TIMEPOINT-KB-PL-KERNEL-KB-CONSTRAINT-SPECIALIST (INTERN-RIGID-SYMBOL-WRT-MODULE "CONSTRAINT-SPECIALIST" (GET-STELLA-MODULE "/PL-KERNEL-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-DURATION-OF (INTERN-RIGID-SYMBOL-WRT-MODULE "DURATION-OF" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-DURATION-OF-CONSTRAINT (INTERN-RIGID-SYMBOL-WRT-MODULE "DURATION-OF-CONSTRAINT" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIME- (INTERN-RIGID-SYMBOL-WRT-MODULE "TIME-" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIME-MINUS-CONSTRAINT (INTERN-RIGID-SYMBOL-WRT-MODULE "TIME-MINUS-CONSTRAINT" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIME+ (INTERN-RIGID-SYMBOL-WRT-MODULE "TIME+" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIME-PLUS-CONSTRAINT (INTERN-RIGID-SYMBOL-WRT-MODULE "TIME-PLUS-CONSTRAINT" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-OF* (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-OF*" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ KWD-TIMEPOINT-KB-RELATION-EVALUATOR (INTERN-RIGID-SYMBOL-WRT-MODULE "RELATION-EVALUATOR" NULL 2))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-OF*-EVALUATOR (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-OF*-EVALUATOR" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-OF*-SPECIALIST (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-OF*-SPECIALIST" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-YEAR (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-YEAR" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ KWD-TIMEPOINT-KB-RELATION-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "RELATION-COMPUTATION" NULL 2))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-YEAR-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-YEAR-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST (INTERN-RIGID-SYMBOL-WRT-MODULE "COMPUTATION-SPECIALIST" (GET-STELLA-MODULE "/PL-KERNEL-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-MONTH (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-MONTH" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-MONTH-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-MONTH-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-DAY (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-DAY" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-DAY-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-DAY-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-DAY-OF-WEEK (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-DAY-OF-WEEK" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-DAY-OF-WEEK-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-DAY-OF-WEEK-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-HOUR (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-HOUR" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-HOUR-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-HOUR-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-MINUTE (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-MINUTE" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-MINUTE-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-MINUTE-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-SECOND (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-SECOND" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-SECOND-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-SECOND-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-DATE (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-DATE" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-DATE-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-DATE-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-TIME (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-TIME" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-TIME-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "TIMEPOINT-TIME-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-FORMAT-TIMEPOINT (INTERN-RIGID-SYMBOL-WRT-MODULE "FORMAT-TIMEPOINT" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-FORMAT-TIMEPOINT-COMPUTATION (INTERN-RIGID-SYMBOL-WRT-MODULE "FORMAT-TIMEPOINT-COMPUTATION" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-KB-CURRENT-TIME (INTERN-RIGID-SYMBOL-WRT-MODULE "CURRENT-TIME" (GET-STELLA-MODULE "/TIMEPOINT-KB" CL:T) 0))
    (CL:SETQ KWD-TIMEPOINT-KB-<<= (INTERN-RIGID-SYMBOL-WRT-MODULE "<<=" NULL 2))
    (CL:SETQ SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-STARTUP-TIMEPOINT-KB (INTERN-RIGID-SYMBOL-WRT-MODULE "STARTUP-TIMEPOINT-KB" NULL 0))
    (CL:SETQ SYM-TIMEPOINT-KB-STELLA-METHOD-STARTUP-CLASSNAME (INTERN-RIGID-SYMBOL-WRT-MODULE "METHOD-STARTUP-CLASSNAME" (GET-STELLA-MODULE "/STELLA" CL:T) 0)))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 6) (FINALIZE-CLASSES))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 7)
    (DEFINE-FUNCTION-OBJECT "STARTUP-TIMEPOINT-KB" "(DEFUN STARTUP-TIMEPOINT-KB () :PUBLIC? TRUE)" (CL:FUNCTION STARTUP-TIMEPOINT-KB) NULL)
    (CL:LET* ((FUNCTION (LOOKUP-FUNCTION SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-STARTUP-TIMEPOINT-KB)))
     (SET-DYNAMIC-SLOT-VALUE (%METHOD-SLOT.DYNAMIC-SLOTS FUNCTION) SYM-TIMEPOINT-KB-STELLA-METHOD-STARTUP-CLASSNAME (WRAP-STRING "_StartupTimepointKb")
      NULL-STRING-WRAPPER)))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 8) (FINALIZE-SLOTS) (CLEANUP-UNFINALIZED-CLASSES))
   (CL:WHEN (CURRENT-STARTUP-TIME-PHASE? 9) (%IN-MODULE (COPY-CONS-TREE (WRAP-STRING "TIMEPOINT-SUPPORT")))
    (CL:LET* ((*MODULE* (GET-STELLA-MODULE "PL-KERNEL-KB" CL:T)) (*CONTEXT* *MODULE*)) (CL:DECLARE (CL:SPECIAL *MODULE* *CONTEXT*))
     (%DEFCONCEPT (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT)))
     (%DEFCONCEPT
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-DAY-OF-WEEK) (COPY-CONS-TREE NIL) KWD-TIMEPOINT-KB-CLOSED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE)
       KWD-TIMEPOINT-KB-AXIOMS
       (COPY-CONS-TREE
        (GET-QUOTED-TREE
         "((AND (/TIMEPOINT-KB/DAY-OF-WEEK /TIMEPOINT-KB/SUNDAY) (/TIMEPOINT-KB/DAY-OF-WEEK /TIMEPOINT-KB/SATURDAY) (/TIMEPOINT-KB/DAY-OF-WEEK /TIMEPOINT-KB/FRIDAY) (/TIMEPOINT-KB/DAY-OF-WEEK /TIMEPOINT-KB/THURSDAY) (/TIMEPOINT-KB/DAY-OF-WEEK /TIMEPOINT-KB/WEDNESDAY) (/TIMEPOINT-KB/DAY-OF-WEEK /TIMEPOINT-KB/TUESDAY) (/TIMEPOINT-KB/DAY-OF-WEEK /TIMEPOINT-KB/MONDAY)) \"/TIMEPOINT-SUPPORT\")"
         "/TIMEPOINT-SUPPORT"))))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-OF)
       (COPY-CONS-TREE (GET-QUOTED-TREE "(((?X STRING)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-->
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-?TP) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "Connects a STRING representation ?x of a time point to the actual
internal representation which is a date/time quantity wrapper representing a time
point.  Dates and times can be specified in a large number of different formats
specified by the STELLA variable `*date-time-patterns*' (defined in
stella/date-time.ste) which see.  Examples can also be found in the demo file
timepoints.ste."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-CONSTRAINT
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-OF-CONSTRAINT) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-CONSTRAINT-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-DURATION-OF)
       (COPY-CONS-TREE (GET-QUOTED-TREE "(((?X STRING)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-->
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-?TP) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "Connects a STRING representation ?x of a time duration to the
actual internal representation which is a date/time quantity wrapper representing
a duration or relative date.  The syntax for time duration strings is
`{plus|minus} N days[; M ms]' where N and M are integer values for days and
milliseconds."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-CONSTRAINT
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-DURATION-OF-CONSTRAINT) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-CONSTRAINT-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIME-) (COPY-CONS-TREE (GET-QUOTED-TREE "((?T1 ?T2 ?T3) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT"))
       KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "Subtract ?t2 from ?t1 resulting in ?t3.  If both ?t1 and
?t2 are time points, ?t3 will be a duration.  If both are durations, ?t3
will be a duration.  If ?t1 is a time point and ?t2 a duration, ?t3 will be
a time point.  All other combinations will lead to failure.  Note that this
is a computed constraint which can generate any argument from the other two,
which means it can also do addition."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-CONSTRAINT
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIME-MINUS-CONSTRAINT) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-CONSTRAINT-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIME+) (COPY-CONS-TREE (GET-QUOTED-TREE "((?T1 ?T2 ?T3) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT"))
       KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "Add ?t2 to ?t1 resulting in ?t3.  If both ?t1 and ?t2
are durations, ?t3 will be a duration.  If one of them is a duration and
the other is a time point, ?t3 will be a time point.  All other combinations
will lead to failure.  Note that this is a computed constraint which can
generate any argument from the other two, which means it can also do subtraction."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-CONSTRAINT
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIME-PLUS-CONSTRAINT) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-CONSTRAINT-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-OF*)
       (COPY-CONS-TREE
        (GET-QUOTED-TREE "(((?YEAR INTEGER) (?MONTH INTEGER) (?DAY INTEGER) (?HOUR INTEGER) (?MINUTE INTEGER) (?SECOND NUMBER) ?ZONE ?TIMEPOINT) \"/TIMEPOINT-SUPPORT\")"
         "/TIMEPOINT-SUPPORT"))
       KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "Maps time components into a timepoint or vice versa.
Variables ?year, ?month, ?day, ?hour and ?minute are integers.
Variable ?second is a number, either integer or float with resolution 0.001.
Variable ?zone is the time zone.  It is represented as a floating point offset
from UTC in hours.  As an input value common strings (used in the United States)
are also recognized, for example `PST, `EDT', `UTC', `GMT', `local' etc.
Variable ?timepoint is the internal timepoint representation.  Either all
of ?year to ?zone must be given to define a ?timepoint, or a ?timepoint
must be given to generate all its individual components.  If a ?timepoint
and a ?zone are given, the individual components are generated relative to
that time zone."))
       KWD-TIMEPOINT-KB-RELATION-EVALUATOR (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-OF*-EVALUATOR) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-OF*-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-YEAR)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?YEAR INTEGER)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "The year component of ?tp evaluated in time zone ?zone.
Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-YEAR-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-MONTH)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?MONTH INTEGER)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "The month component of ?tp evaluated in time zone ?zone.
Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-MONTH-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-DAY)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?DAY INTEGER)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "The day component of ?tp evaluated in time zone ?zone.
Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-DAY-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-DAY-OF-WEEK)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?DOW /TIMEPOINT-KB/DAY-OF-WEEK)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "The day-of-week component of ?tp evaluated in time zone ?zone.
Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-DAY-OF-WEEK-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-HOUR)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?HOUR INTEGER)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "The hour component of ?tp evaluated in time zone ?zone.
Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-HOUR-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-MINUTE)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?MINUTE INTEGER)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "The minute component of ?tp evaluated in time zone ?zone.
Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-MINUTE-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-SECOND)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?SECOND NUMBER)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "The second component of ?tp evaluated in time zone ?zone.
Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-SECOND-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-DATE)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?DATE STRING)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "The date component of ?tp evaluated in time zone ?zone.
Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-DATE-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-TIMEPOINT-TIME)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?TIME STRING)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT")) KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "The time component of ?tp evaluated in time zone ?zone.
Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-TIMEPOINT-TIME-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFFUNCTION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-FORMAT-TIMEPOINT)
       (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP ?ZONE (?CONTROL STRING) (?FORMATTED STRING)) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT"))
       KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "Format ?tp relative to ?zone according to the format ?control string whose
syntax supports most directives of the Unix `date' command (see also the STELLA function
`format-date').  Variable ?zone is represented as a floating point offset from UTC in hours.
As a ?zone input value common strings are also recognized (see timepoint-of*)."))
       KWD-TIMEPOINT-KB-COMPUTED (COPY-CONS-TREE SYM-TIMEPOINT-KB-STELLA-TRUE) KWD-TIMEPOINT-KB-RELATION-COMPUTATION
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-SUPPORT-FORMAT-TIMEPOINT-COMPUTATION) KWD-TIMEPOINT-KB-RELATION-SPECIALIST
       (COPY-CONS-TREE SYM-TIMEPOINT-KB-PL-KERNEL-KB-COMPUTATION-SPECIALIST)))
     (%DEFRELATION
      (CONS-LIST (COPY-CONS-TREE SYM-TIMEPOINT-KB-TIMEPOINT-KB-CURRENT-TIME) (COPY-CONS-TREE (GET-QUOTED-TREE "((?TP) \"/TIMEPOINT-SUPPORT\")" "/TIMEPOINT-SUPPORT"))
       KWD-TIMEPOINT-KB-DOCUMENTATION
       (COPY-CONS-TREE
        (WRAP-STRING "Convenience relation to access the current time ?tp.  Every time this is evaluated
in a query with an unbound ?tp variable, this will bind ?tp to the newly measured current time.  This
relation shields some of the idiosyncrasies of a changing time value in a logic system where the same
function should never evaluate to different values based on the same input arguments.  Do never use this
function in an assertion!  Instead, retrieve the current time via a query and pipe the resulting value
into an assertion via `assert-from-query'.  For example:
    (assert-from-query (retrieve (current-time ?now)) :pattern (kappa (?now) (mytimeof t1 ?now)))"))
       KWD-TIMEPOINT-KB-<<=
       (COPY-CONS-TREE
        (GET-QUOTED-TREE "((EXISTS ?SPEC (AND (MEMBER-OF ?SPEC (LISTOF \"now\")) (/TIMEPOINT-KB/TIMEPOINT-OF ?SPEC ?TP))) \"/TIMEPOINT-SUPPORT\")"
         "/TIMEPOINT-SUPPORT"))))
     (PROCESS-DEFINITIONS)))))
