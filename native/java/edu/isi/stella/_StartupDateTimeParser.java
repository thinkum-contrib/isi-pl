//  -*- Mode: Java -*-
//
// _StartupDateTimeParser.java

/*
+---------------------------- BEGIN LICENSE BLOCK ---------------------------+
|                                                                            |
| Version: MPL 1.1/GPL 2.0/LGPL 2.1                                          |
|                                                                            |
| The contents of this file are subject to the Mozilla Public License        |
| Version 1.1 (the "License"); you may not use this file except in           |
| compliance with the License. You may obtain a copy of the License at       |
| http://www.mozilla.org/MPL/                                                |
|                                                                            |
| Software distributed under the License is distributed on an "AS IS" basis, |
| WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License   |
| for the specific language governing rights and limitations under the       |
| License.                                                                   |
|                                                                            |
| The Original Code is the STELLA Programming Language.                      |
|                                                                            |
| The Initial Developer of the Original Code is                              |
| UNIVERSITY OF SOUTHERN CALIFORNIA, INFORMATION SCIENCES INSTITUTE          |
| 4676 Admiralty Way, Marina Del Rey, California 90292, U.S.A.               |
|                                                                            |
| Portions created by the Initial Developer are Copyright (C) 1996-2003      |
| the Initial Developer. All Rights Reserved.                                |
|                                                                            |
| Contributor(s):                                                            |
|                                                                            |
| Alternatively, the contents of this file may be used under the terms of    |
| either the GNU General Public License Version 2 or later (the "GPL"), or   |
| the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),   |
| in which case the provisions of the GPL or the LGPL are applicable instead |
| of those above. If you wish to allow use of your version of this file only |
| under the terms of either the GPL or the LGPL, and not to allow others to  |
| use your version of this file under the terms of the MPL, indicate your    |
| decision by deleting the provisions above and replace them with the notice |
| and other provisions required by the GPL or the LGPL. If you do not delete |
| the provisions above, a recipient may use your version of this file under  |
| the terms of any one of the MPL, the GPL or the LGPL.                      |
|                                                                            |
+---------------------------- END LICENSE BLOCK -----------------------------+
*/

package edu.isi.stella;

import edu.isi.stella.javalib.*;

public class _StartupDateTimeParser {
  static void helpStartupDateTimeParser1() {
    {
      Stella.SYM_STELLA_ITEM = ((Symbol)(Stella.internRigidSymbolWrtModule("ITEM", null, 0)));
      Stella.SYM_STELLA_INSERT_AT = ((Symbol)(Stella.internRigidSymbolWrtModule("INSERT-AT", null, 0)));
      Stella.SYM_STELLA_SECOND = ((Symbol)(Stella.internRigidSymbolWrtModule("SECOND", null, 0)));
      Stella.SYM_STELLA_YESTERDAY = ((Symbol)(Stella.internRigidSymbolWrtModule("YESTERDAY", null, 0)));
      Stella.SYM_STELLA_TODAY = ((Symbol)(Stella.internRigidSymbolWrtModule("TODAY", null, 0)));
      Stella.SYM_STELLA_TOMORROW = ((Symbol)(Stella.internRigidSymbolWrtModule("TOMORROW", null, 0)));
      Stella.SYM_STELLA_NOW = ((Symbol)(Stella.internRigidSymbolWrtModule("NOW", null, 0)));
      Stella.SYM_STELLA_YEAR = ((Symbol)(Stella.internRigidSymbolWrtModule("YEAR", null, 0)));
      Stella.SYM_STELLA_DATE_DIVIDER = ((Symbol)(Stella.internRigidSymbolWrtModule("DATE-DIVIDER", null, 0)));
      Stella.SYM_STELLA_MONTH = ((Symbol)(Stella.internRigidSymbolWrtModule("MONTH", null, 0)));
      Stella.SYM_STELLA_DAY = ((Symbol)(Stella.internRigidSymbolWrtModule("DAY", null, 0)));
      Stella.SYM_STELLA_NOON_MIDN = ((Symbol)(Stella.internRigidSymbolWrtModule("NOON-MIDN", null, 0)));
      Stella.SYM_STELLA_WEEKDAY = ((Symbol)(Stella.internRigidSymbolWrtModule("WEEKDAY", null, 0)));
      Stella.SYM_STELLA_ZONE = ((Symbol)(Stella.internRigidSymbolWrtModule("ZONE", null, 0)));
      Stella.SYM_STELLA_TIME_DIVIDER = ((Symbol)(Stella.internRigidSymbolWrtModule("TIME-DIVIDER", null, 0)));
      Stella.SYM_STELLA_ZONE_MINUTE = ((Symbol)(Stella.internRigidSymbolWrtModule("ZONE-MINUTE", null, 0)));
      Stella.SYM_STELLA_HOUR = ((Symbol)(Stella.internRigidSymbolWrtModule("HOUR", null, 0)));
      Stella.SYM_STELLA_MINUTE = ((Symbol)(Stella.internRigidSymbolWrtModule("MINUTE", null, 0)));
      Stella.SYM_STELLA_SECONDP = ((Symbol)(Stella.internRigidSymbolWrtModule("SECONDP", null, 0)));
      Stella.SYM_STELLA_AM_PM = ((Symbol)(Stella.internRigidSymbolWrtModule("AM-PM", null, 0)));
      Stella.SYM_STELLA_DATE_TIME_DIVIDER = ((Symbol)(Stella.internRigidSymbolWrtModule("DATE-TIME-DIVIDER", null, 0)));
      Stella.SYM_STELLA_AM = ((Symbol)(Stella.internRigidSymbolWrtModule("AM", null, 0)));
      Stella.SYM_STELLA_PM = ((Symbol)(Stella.internRigidSymbolWrtModule("PM", null, 0)));
      Stella.SYM_STELLA_NOON = ((Symbol)(Stella.internRigidSymbolWrtModule("NOON", null, 0)));
      Stella.SYM_STELLA_MIDN = ((Symbol)(Stella.internRigidSymbolWrtModule("MIDN", null, 0)));
      Stella.SYM_STELLA_STARTUP_DATE_TIME_PARSER = ((Symbol)(Stella.internRigidSymbolWrtModule("STARTUP-DATE-TIME-PARSER", null, 0)));
    }
  }

  public static void startupDateTimeParser() {
    { Object old$Module$000 = Stella.$MODULE$.get();
      Object old$Context$000 = Stella.$CONTEXT$.get();

      try {
        Native.setSpecial(Stella.$MODULE$, Stella.$STELLA_MODULE$);
        Native.setSpecial(Stella.$CONTEXT$, ((Module)(Stella.$MODULE$.get())));
        if (Stella.currentStartupTimePhaseP(2)) {
          _StartupDateTimeParser.helpStartupDateTimeParser1();
        }
        if (Stella.currentStartupTimePhaseP(4)) {
          Stella.WHITESPACE_CHARS = Stella.list$(Stella_Object.cons(Stella.wrapCharacter(' '), Stella_Object.cons(Stella.wrapCharacter('\t'), Stella_Object.cons(Stella.wrapCharacter('\n'), Stella_Object.cons(Stella.wrapCharacter('\r'), Stella_Object.cons(Stella.wrapCharacter('\f'), Stella_Object.cons(Stella.wrapCharacter(','), Stella_Object.cons(Stella.wrapCharacter('\''), Stella_Object.cons(Stella.wrapCharacter('`'), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))));
          Stella.TIME_DIVIDERS = Stella.list$(Stella_Object.cons(Stella.wrapCharacter(':'), Stella_Object.cons(Stella.wrapCharacter('.'), Stella_Object.cons(Stella.NIL, Stella.NIL))));
          Stella.DATE_DIVIDERS = Stella.list$(Stella_Object.cons(Stella.wrapCharacter('\\'), Stella_Object.cons(Stella.wrapCharacter('/'), Stella_Object.cons(Stella.wrapCharacter('-'), Stella_Object.cons(Stella.NIL, Stella.NIL)))));
          Stella.DATE_TIME_DIVIDERS = Stella_Object.cons(Stella.wrapCharacter('T'), Stella.NIL);
          Stella.$ERROR_ON_MISMATCH$.setDefaultValue(new Boolean(false));
          Stella.$WEEKDAY_STRINGS$.setDefaultValue(StringHashTable.newStringHashTable());
          Stella.$MONTH_STRINGS$.setDefaultValue(StringToIntegerHashTable.newStringToIntegerHashTable());
          Stella.$ZONE_STRINGS$.setDefaultValue(StringHashTable.newStringHashTable());
          Stella.$SPECIAL_STRINGS$.setDefaultValue(StringHashTable.newStringHashTable());
          Stella.$SPECIAL_SYMBOLS$.setDefaultValue(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YESTERDAY, Stella_Object.cons(Stella.SYM_STELLA_TODAY, Stella_Object.cons(Stella.SYM_STELLA_TOMORROW, Stella_Object.cons(Stella.SYM_STELLA_NOW, Stella_Object.cons(Stella.NIL, Stella.NIL)))))));
          { Cons item = null;
            Cons iter039 = ((Cons)(Stella.list$(Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("monday"), Stella_Object.cons(Stella.KWD_MONDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("mon"), Stella_Object.cons(Stella.KWD_MONDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("tuesday"), Stella_Object.cons(Stella.KWD_TUESDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("tues"), Stella_Object.cons(Stella.KWD_TUESDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("tue"), Stella_Object.cons(Stella.KWD_TUESDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("wednesday"), Stella_Object.cons(Stella.KWD_WEDNESDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("wednes"), Stella_Object.cons(Stella.KWD_WEDNESDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("wed"), Stella_Object.cons(Stella.KWD_WEDNESDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("thursday"), Stella_Object.cons(Stella.KWD_THURSDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("thurs"), Stella_Object.cons(Stella.KWD_THURSDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("thu"), Stella_Object.cons(Stella.KWD_THURSDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("friday"), Stella_Object.cons(Stella.KWD_FRIDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("fri"), Stella_Object.cons(Stella.KWD_FRIDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("saturday"), Stella_Object.cons(Stella.KWD_SATURDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("sat"), Stella_Object.cons(Stella.KWD_SATURDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("sunday"), Stella_Object.cons(Stella.KWD_SUNDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("sun"), Stella_Object.cons(Stella.KWD_SUNDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))))))));

            while (!(iter039 == Stella.NIL)) {
              {
                item = ((Cons)(iter039.value));
                iter039 = iter039.rest;
              }
              ((StringHashTable)(Stella.$WEEKDAY_STRINGS$.get())).insertAt(((StringWrapper)(item.value)).wrapperValue, item.rest.value);
            }
          }
          { Cons item = null;
            Cons iter040 = ((Cons)(Stella.list$(Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("january"), Stella_Object.cons(Stella.wrapInteger(1), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("jan"), Stella_Object.cons(Stella.wrapInteger(1), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("february"), Stella_Object.cons(Stella.wrapInteger(2), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("feb"), Stella_Object.cons(Stella.wrapInteger(2), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("march"), Stella_Object.cons(Stella.wrapInteger(3), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("mar"), Stella_Object.cons(Stella.wrapInteger(3), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("april"), Stella_Object.cons(Stella.wrapInteger(4), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("apr"), Stella_Object.cons(Stella.wrapInteger(4), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("may"), Stella_Object.cons(Stella.wrapInteger(5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("june"), Stella_Object.cons(Stella.wrapInteger(6), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("jun"), Stella_Object.cons(Stella.wrapInteger(6), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("july"), Stella_Object.cons(Stella.wrapInteger(7), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("jul"), Stella_Object.cons(Stella.wrapInteger(7), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("august"), Stella_Object.cons(Stella.wrapInteger(8), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("aug"), Stella_Object.cons(Stella.wrapInteger(8), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("september"), Stella_Object.cons(Stella.wrapInteger(9), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("sept"), Stella_Object.cons(Stella.wrapInteger(9), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("sep"), Stella_Object.cons(Stella.wrapInteger(9), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("october"), Stella_Object.cons(Stella.wrapInteger(10), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("oct"), Stella_Object.cons(Stella.wrapInteger(10), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("november"), Stella_Object.cons(Stella.wrapInteger(11), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("nov"), Stella_Object.cons(Stella.wrapInteger(11), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("december"), Stella_Object.cons(Stella.wrapInteger(12), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("dec"), Stella_Object.cons(Stella.wrapInteger(12), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))))))))))))))))));

            while (!(iter040 == Stella.NIL)) {
              {
                item = ((Cons)(iter040.value));
                iter040 = iter040.rest;
              }
              ((StringToIntegerHashTable)(Stella.$MONTH_STRINGS$.get())).insertAt(((StringWrapper)(item.value)).wrapperValue, ((IntegerWrapper)(item.rest.value)).wrapperValue);
            }
          }
          { Cons item = null;
            Cons iter041 = ((Cons)(Stella.list$(Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("gmt"), Stella_Object.cons(Stella.wrapFloat(0.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("utc"), Stella_Object.cons(Stella.wrapFloat(0.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("zulu"), Stella_Object.cons(Stella.wrapFloat(0.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("est"), Stella_Object.cons(Stella.wrapFloat(-5.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("edt"), Stella_Object.cons(Stella.wrapFloat(-4.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("cst"), Stella_Object.cons(Stella.wrapFloat(-6.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("cdt"), Stella_Object.cons(Stella.wrapFloat(-5.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("mst"), Stella_Object.cons(Stella.wrapFloat(-7.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("mdt"), Stella_Object.cons(Stella.wrapFloat(-6.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("pst"), Stella_Object.cons(Stella.wrapFloat(-8.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("pdt"), Stella_Object.cons(Stella.wrapFloat(-7.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("a"), Stella_Object.cons(Stella.wrapFloat(1.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("b"), Stella_Object.cons(Stella.wrapFloat(2.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("c"), Stella_Object.cons(Stella.wrapFloat(3.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("c*"), Stella_Object.cons(Stella.wrapFloat(3.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("d"), Stella_Object.cons(Stella.wrapFloat(4.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("d*"), Stella_Object.cons(Stella.wrapFloat(4.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("e"), Stella_Object.cons(Stella.wrapFloat(5.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("e*"), Stella_Object.cons(Stella.wrapFloat(4.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("f"), Stella_Object.cons(Stella.wrapFloat(6.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("f*"), Stella_Object.cons(Stella.wrapFloat(6.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("g"), Stella_Object.cons(Stella.wrapFloat(7.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("h"), Stella_Object.cons(Stella.wrapFloat(7.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("i"), Stella_Object.cons(Stella.wrapFloat(9.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("i*"), Stella_Object.cons(Stella.wrapFloat(9.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("k"), Stella_Object.cons(Stella.wrapFloat(10.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("k*"), Stella_Object.cons(Stella.wrapFloat(10.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("l"), Stella_Object.cons(Stella.wrapFloat(11.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("l*"), Stella_Object.cons(Stella.wrapFloat(11.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("m"), Stella_Object.cons(Stella.wrapFloat(12.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("m*"), Stella_Object.cons(Stella.wrapFloat(13.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("m%"), Stella_Object.cons(Stella.wrapFloat(14.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("n"), Stella_Object.cons(Stella.wrapFloat(-1.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("o"), Stella_Object.cons(Stella.wrapFloat(-2.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("p"), Stella_Object.cons(Stella.wrapFloat(-3.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("p*"), Stella_Object.cons(Stella.wrapFloat(-3.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("q"), Stella_Object.cons(Stella.wrapFloat(-4.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("r"), Stella_Object.cons(Stella.wrapFloat(-5.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("s"), Stella_Object.cons(Stella.wrapFloat(-6.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("t"), Stella_Object.cons(Stella.wrapFloat(-7.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("u"), Stella_Object.cons(Stella.wrapFloat(-8.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("u*"), Stella_Object.cons(Stella.wrapFloat(-8.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("v"), Stella_Object.cons(Stella.wrapFloat(-9.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("v*"), Stella_Object.cons(Stella.wrapFloat(-9.5), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("w"), Stella_Object.cons(Stella.wrapFloat(-10.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("x"), Stella_Object.cons(Stella.wrapFloat(-11.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("y"), Stella_Object.cons(Stella.wrapFloat(-12.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.wrapString("z"), Stella_Object.cons(Stella.wrapFloat(0.0), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))))))))))))))))))))))))))))))))))))))))));

            while (!(iter041 == Stella.NIL)) {
              {
                item = ((Cons)(iter041.value));
                iter041 = iter041.rest;
              }
              ((StringHashTable)(Stella.$ZONE_STRINGS$.get())).insertAt(((StringWrapper)(item.value)).wrapperValue, item.rest.value);
            }
          }
          { Symbol symbol = null;
            Cons iter042 = ((Cons)(Stella.$SPECIAL_SYMBOLS$.get()));

            while (!(iter042 == Stella.NIL)) {
              {
                symbol = ((Symbol)(iter042.value));
                iter042 = iter042.rest;
              }
              ((StringHashTable)(Stella.$SPECIAL_STRINGS$.get())).insertAt(Native.stringDowncase(symbol.symbolName), symbol);
            }
          }
          Stella.$DATE_TIME_PATTERNS$.setDefaultValue(Stella.list$(Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.NIL, Stella.NIL))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.NIL, Stella.NIL))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella.NIL, Stella.NIL))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.NIL, Stella.NIL)))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella.NIL, Stella.NIL)))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella.SYM_STELLA_NOW, Stella_Object.cons(Stella.NIL, Stella.NIL)))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_WEEKDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_MONTH, Stella_Object.cons(Stella.SYM_STELLA_DAY, Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YEAR, Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_NOW, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_YESTERDAY, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_YESTERDAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_NOW, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_NOW, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TODAY, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TODAY, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_NOW, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_NOW, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TOMORROW, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TOMORROW, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_NOW, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YESTERDAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_YESTERDAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_TODAY, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_TODAY, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_TOMORROW, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_NOON_MIDN, Stella.NIL), Stella_Object.cons(Stella.SYM_STELLA_TOMORROW, Stella_Object.cons(Stella.NIL, Stella.NIL)))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_YESTERDAY, Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_TOMORROW, Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))), Stella_Object.cons(Stella.list$(Stella_Object.cons(Stella.SYM_STELLA_TODAY, Stella_Object.cons(Stella.SYM_STELLA_HOUR, Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_MINUTE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_SECONDP, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_AM_PM, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_DATE_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_TIME_DIVIDER, Stella.NIL), Stella_Object.cons(Stella_Object.cons(Stella.SYM_STELLA_ZONE_MINUTE, Stella.NIL), Stella_Object.cons(Stella.NIL, Stella.NIL))))))))))))), Stella_Object.cons(Stella.NIL, Stella.NIL)))))))))))))))))))))))))))))))))))))))))))))))))))));
        }
        if (Stella.currentStartupTimePhaseP(6)) {
          Stella.finalizeClasses();
        }
        if (Stella.currentStartupTimePhaseP(7)) {
          Stella.defineFunctionObject("HASHLIST", "(DEFUN HASHLIST ((LIST OBJECT) (TABLE OBJECT)) :TYPE OBJECT :MACRO? TRUE)", Native.find_java_method("edu.isi.stella.Stella_Object", "hashlist", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object"), Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("YESTERDAY", "(DEFUN YESTERDAY ((PARSED-VALUES DECODED-DATE-TIME)))", Native.find_java_method("edu.isi.stella.DecodedDateTime", "yesterday", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.DecodedDateTime")}), null);
          Stella.defineFunctionObject("TODAY", "(DEFUN TODAY ((PARSED-VALUES DECODED-DATE-TIME)))", Native.find_java_method("edu.isi.stella.DecodedDateTime", "today", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.DecodedDateTime")}), null);
          Stella.defineFunctionObject("TOMORROW", "(DEFUN TOMORROW ((PARSED-VALUES DECODED-DATE-TIME)))", Native.find_java_method("edu.isi.stella.DecodedDateTime", "tomorrow", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.DecodedDateTime")}), null);
          Stella.defineFunctionObject("NOW", "(DEFUN NOW ((PARSED-VALUES DECODED-DATE-TIME)))", Native.find_java_method("edu.isi.stella.DecodedDateTime", "now", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.DecodedDateTime")}), null);
          Stella.defineFunctionObject("AM-PM", "(DEFUN (AM-PM SYMBOL) ((STRING OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "amPm", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("NOON-MIDN", "(DEFUN (NOON-MIDN SYMBOL) ((STRING OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "noonMidn", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("WEEKDAY", "(DEFUN (WEEKDAY KEYWORD) ((THING OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "weekday", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("MONTH", "(DEFUN (MONTH INTEGER-WRAPPER) ((THING OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "month", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("ZONE", "(DEFUN (ZONE FLOAT-WRAPPER) ((THING OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "zone", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("SPECIALP", "(DEFUN (SPECIALP SYMBOL) ((STRING OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "specialp", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("SECONDP", "(DEFUN (SECONDP BOOLEAN-WRAPPER) ((NUMBER OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "secondp", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("MINUTE", "(DEFUN (MINUTE BOOLEAN-WRAPPER) ((NUMBER OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "minute", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("ZONE-MINUTE", "(DEFUN (ZONE-MINUTE BOOLEAN-WRAPPER) ((NUMBER OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "zoneMinute", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("HOUR", "(DEFUN (HOUR BOOLEAN-WRAPPER) ((NUMBER OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "hour", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("DAY", "(DEFUN (DAY BOOLEAN-WRAPPER) ((NUMBER OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "day", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("YEAR", "(DEFUN (YEAR BOOLEAN-WRAPPER) ((NUMBER OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "year", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("TIME-DIVIDER", "(DEFUN (TIME-DIVIDER BOOLEAN-WRAPPER) ((THECHARACTER OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "timeDivider", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("DATE-DIVIDER", "(DEFUN (DATE-DIVIDER BOOLEAN-WRAPPER) ((THECHARACTER OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "dateDivider", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("DATE-TIME-DIVIDER", "(DEFUN (DATE-TIME-DIVIDER BOOLEAN-WRAPPER) ((THECHARACTER OBJECT)))", Native.find_java_method("edu.isi.stella.Stella_Object", "dateTimeDivider", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("MATCH-SUBSTRING", "(DEFUN (MATCH-SUBSTRING CONS) ((SUBSTRING STRING) (PARSING-TIME? BOOLEAN)))", Native.find_java_method("edu.isi.stella.Stella", "matchSubstring", new java.lang.Class [] {Native.find_java_class("java.lang.String"), java.lang.Boolean.TYPE}), null);
          Stella.defineFunctionObject("DIGIT-VALUE", "(DEFUN (DIGIT-VALUE INTEGER) ((CHAR CHARACTER)))", Native.find_java_method("edu.isi.stella.Stella", "digitValue", new java.lang.Class [] {java.lang.Character.TYPE}), null);
          Stella.defineFunctionObject("DECOMPOSE-DATE-TIME-STRING", "(DEFUN (DECOMPOSE-DATE-TIME-STRING CONS) ((STRING STRING) (START INTEGER) (END INTEGER)))", Native.find_java_method("edu.isi.stella.Stella", "decomposeDateTimeString", new java.lang.Class [] {Native.find_java_class("java.lang.String"), java.lang.Integer.TYPE, java.lang.Integer.TYPE}), null);
          Stella.defineFunctionObject("MATCH-PATTERN-ELEMENT", "(DEFUN (MATCH-PATTERN-ELEMENT CONS) ((PATTERN-ELEMENT SYMBOL) (DATUM-ELEMENT OBJECT)))", Native.find_java_method("edu.isi.stella.Symbol", "matchPatternElement", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Symbol"), Native.find_java_class("edu.isi.stella.Stella_Object")}), null);
          Stella.defineFunctionObject("MATCH-PATTERN", "(DEFUN (MATCH-PATTERN CONS) ((PATTERN CONS) (DATUM CONS) (DATUM-LENGTH INTEGER)))", Native.find_java_method("edu.isi.stella.Cons", "matchPattern", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Cons"), Native.find_java_class("edu.isi.stella.Cons"), java.lang.Integer.TYPE}), null);
          Stella.defineFunctionObject("DEAL-WITH-NOON-MIDN", "(DEFUN DEAL-WITH-NOON-MIDN ((FORM-VALUE OBJECT) (PARSED-VALUES DECODED-DATE-TIME)))", Native.find_java_method("edu.isi.stella.Stella_Object", "dealWithNoonMidn", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object"), Native.find_java_class("edu.isi.stella.DecodedDateTime")}), null);
          Stella.defineFunctionObject("DEAL-WITH-AM-PM", "(DEFUN DEAL-WITH-AM-PM ((FORM-VALUE OBJECT) (PARSED-VALUES DECODED-DATE-TIME)))", Native.find_java_method("edu.isi.stella.Stella_Object", "dealWithAmPm", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Stella_Object"), Native.find_java_class("edu.isi.stella.DecodedDateTime")}), null);
          Stella.defineFunctionObject("SET-TIME-VALUES", "(DEFUN SET-TIME-VALUES ((STRING-FORM (CONS OF CONS)) (PARSED-VALUES DECODED-DATE-TIME)))", Native.find_java_method("edu.isi.stella.Cons", "setTimeValues", new java.lang.Class [] {Native.find_java_class("edu.isi.stella.Cons"), Native.find_java_class("edu.isi.stella.DecodedDateTime")}), null);
          Stella.defineFunctionObject("PARSE-DATE-TIME-IN-TIME-ZONE", "(DEFUN (PARSE-DATE-TIME-IN-TIME-ZONE DECODED-DATE-TIME) ((DATE-TIME-STRING STRING) (TIME-ZONE FLOAT) (START INTEGER) (END INTEGER) (ERROR-ON-MISMATCH? BOOLEAN)) :PUBLIC? TRUE :DOCUMENTATION \"Tries very hard to make sense out of the argument `date-time-string' and\nreturns a time structure if successful.  If not, it returns `null'.\nIf `error-on-mismatch?' is true, parse-date-time will signal an error instead of\nreturning `null'.  \nDefault values are 00:00:00 in the given timezone on the current date.  If the\ngiven `time-zone' value is `null', then the local time zone for the given date\nand time will be used as determined by the operating system.\")", Native.find_java_method("edu.isi.stella.Stella", "parseDateTimeInTimeZone", new java.lang.Class [] {Native.find_java_class("java.lang.String"), java.lang.Double.TYPE, java.lang.Integer.TYPE, java.lang.Integer.TYPE, java.lang.Boolean.TYPE}), null);
          Stella.defineFunctionObject("PARSE-DATE-TIME", "(DEFUN (PARSE-DATE-TIME DECODED-DATE-TIME) ((DATE-TIME-STRING STRING) (START INTEGER) (END INTEGER) (ERROR-ON-MISMATCH? BOOLEAN)) :PUBLIC? TRUE :GLOBALLY-INLINE? TRUE :DOCUMENTATION \"Tries very hard to make sense out of the argument `date-time-string' and\nreturns a time structure if successful.  If not, it returns `null'.\nIf `error-on-mismatch?' is true, parse-date-time will signal an error instead of\nreturning `null'.  \nDefault values are 00:00:00 local time on the current date\" (RETURN (PARSE-DATE-TIME-IN-TIME-ZONE DATE-TIME-STRING NULL START END ERROR-ON-MISMATCH?)))", Native.find_java_method("edu.isi.stella.Stella", "parseDateTime", new java.lang.Class [] {Native.find_java_class("java.lang.String"), java.lang.Integer.TYPE, java.lang.Integer.TYPE, java.lang.Boolean.TYPE}), null);
          Stella.defineFunctionObject("STRING-TO-CALENDAR-DATE", "(DEFUN (STRING-TO-CALENDAR-DATE CALENDAR-DATE) ((INPUT STRING)) :PUBLIC? TRUE :DOCUMENTATION \"Returns a calendar date object representing the date and time\nparsed from the `input' string.  If no valid parse is found,\n`null' is returned.\")", Native.find_java_method("edu.isi.stella.Stella", "stringToCalendarDate", new java.lang.Class [] {Native.find_java_class("java.lang.String")}), null);
          Stella.defineFunctionObject("STARTUP-DATE-TIME-PARSER", "(DEFUN STARTUP-DATE-TIME-PARSER () :PUBLIC? TRUE)", Native.find_java_method("edu.isi.stella._StartupDateTimeParser", "startupDateTimeParser", new java.lang.Class [] {}), null);
          { MethodSlot function = Symbol.lookupFunction(Stella.SYM_STELLA_STARTUP_DATE_TIME_PARSER);

            KeyValueList.setDynamicSlotValue(function.dynamicSlots, Stella.SYM_STELLA_METHOD_STARTUP_CLASSNAME, Stella.wrapString("_Startup-Date-Time-Parser"), Stella.NULL_STRING_WRAPPER);
          }
        }
        if (Stella.currentStartupTimePhaseP(8)) {
          Stella.finalizeSlots();
          Stella.cleanupUnfinalizedClasses();
        }
        if (Stella.currentStartupTimePhaseP(9)) {
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFCONSTANT WHITESPACE-CHARS CONS (BQUOTE (#\\  #\\Tab #\\Linefeed #\\Return #\\Page #\\, #\\' #\\`)))");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFCONSTANT TIME-DIVIDERS CONS (BQUOTE (#\\: #\\.)))");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFCONSTANT DATE-DIVIDERS CONS (BQUOTE (#\\\\ #\\/ #\\-)))");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFCONSTANT DATE-TIME-DIVIDERS CONS (BQUOTE (#\\T)))");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFSPECIAL *ERROR-ON-MISMATCH* BOOLEAN FALSE :PUBLIC? TRUE :DOCUMENTATION \"If TRUE, an error will be signalled if parse-date-time is unable\n   to determine the time/date format of the string.\")");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFSPECIAL *WEEKDAY-STRINGS* (STRING-HASH-TABLE OF STRING KEYWORD) (NEW (STRING-HASH-TABLE OF STRING KEYWORD)))");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFSPECIAL *MONTH-STRINGS* STRING-TO-INTEGER-HASH-TABLE (NEW STRING-TO-INTEGER-HASH-TABLE))");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFSPECIAL *ZONE-STRINGS* (STRING-HASH-TABLE OF STRING FLOAT-WRAPPER) (NEW (STRING-HASH-TABLE OF STRING FLOAT-WRAPPER)))");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFSPECIAL *SPECIAL-STRINGS* STRING-HASH-TABLE (NEW STRING-HASH-TABLE))");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFSPECIAL *SPECIAL-SYMBOLS* (CONS OF SYMBOL) (BQUOTE (YESTERDAY TODAY TOMORROW NOW)))");
          Stella.defineStellaGlobalVariableFromStringifiedSource("(DEFSPECIAL *DATE-TIME-PATTERNS* CONS (BQUOTE ((YEAR (DATE-DIVIDER) MONTH (DATE-DIVIDER) DAY (NOON-MIDN)) ((WEEKDAY) MONTH (DATE-DIVIDER) DAY (DATE-DIVIDER) YEAR (NOON-MIDN) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) ((WEEKDAY) DAY (DATE-DIVIDER) MONTH (DATE-DIVIDER) YEAR (NOON-MIDN) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) ((WEEKDAY) MONTH (DATE-DIVIDER) DAY (NOON-MIDN) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (MONTH (DATE-DIVIDER) YEAR (NOON-MIDN) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (YEAR (DATE-DIVIDER) MONTH (NOON-MIDN) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) ((NOON-MIDN) (WEEKDAY) MONTH (DATE-DIVIDER) DAY (DATE-DIVIDER) YEAR) ((NOON-MIDN) (WEEKDAY) DAY (DATE-DIVIDER) MONTH (DATE-DIVIDER) YEAR) ((NOON-MIDN) (WEEKDAY) MONTH (DATE-DIVIDER) DAY) ((NOON-MIDN) YEAR (DATE-DIVIDER) MONTH (DATE-DIVIDER) DAY) ((NOON-MIDN) MONTH (DATE-DIVIDER) YEAR) ((NOON-MIDN) YEAR (DATE-DIVIDER) MONTH) (HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (NOON-MIDN (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (HOUR (NOON-MIDN)) (YEAR (DATE-DIVIDER) MONTH (DATE-DIVIDER) DAY (DATE-TIME-DIVIDER) HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (YEAR (DATE-DIVIDER) MONTH (DATE-DIVIDER) DAY NOON-MIDN (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (YEAR (DATE-DIVIDER) MONTH (DATE-DIVIDER) DAY NOW) ((WEEKDAY) MONTH (DATE-DIVIDER) DAY (DATE-DIVIDER) YEAR (DATE-TIME-DIVIDER) HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) ((WEEKDAY) DAY (DATE-DIVIDER) MONTH (DATE-DIVIDER) YEAR (DATE-TIME-DIVIDER) HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) ((WEEKDAY) MONTH (DATE-DIVIDER) DAY (DATE-TIME-DIVIDER) HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (MONTH (DATE-DIVIDER) YEAR (DATE-TIME-DIVIDER) HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (YEAR (DATE-DIVIDER) MONTH (DATE-TIME-DIVIDER) HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE) (WEEKDAY) MONTH (DATE-DIVIDER) DAY (DATE-DIVIDER) YEAR) (HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE) (WEEKDAY) DAY (DATE-DIVIDER) MONTH (DATE-DIVIDER) YEAR) (HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE) (WEEKDAY) MONTH (DATE-DIVIDER) DAY) (HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE) YEAR (DATE-DIVIDER) MONTH (DATE-DIVIDER) DAY) (HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE) MONTH (DATE-DIVIDER) YEAR) (HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE) YEAR (DATE-DIVIDER) MONTH) (WEEKDAY MONTH DAY HOUR (TIME-DIVIDER) MINUTE (TIME-DIVIDER) SECONDP (AM-PM) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE) YEAR) ((WEEKDAY) DAY (DATE-DIVIDER) MONTH (DATE-DIVIDER) YEAR HOUR (TIME-DIVIDER) MINUTE (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) ((WEEKDAY) MONTH (DATE-DIVIDER) DAY (DATE-DIVIDER) YEAR HOUR (TIME-DIVIDER) MINUTE (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (YEAR (DATE-DIVIDER) (MONTH)) (MONTH (DATE-DIVIDER) (YEAR)) ((WEEKDAY) MONTH DAY HOUR TIME-DIVIDER MINUTE (TIME-DIVIDER) (SECONDP) YEAR) (NOW (YESTERDAY)) ((YESTERDAY) NOW) (NOW (TODAY)) ((TODAY) NOW) (NOW (TOMORROW)) ((TOMORROW) NOW) (YESTERDAY (NOON-MIDN)) ((NOON-MIDN) YESTERDAY) (TODAY (NOON-MIDN)) ((NOON-MIDN) TODAY) (TOMORROW (NOON-MIDN)) ((NOON-MIDN) TOMORROW) (YESTERDAY HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (TOMORROW HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)) (TODAY HOUR (TIME-DIVIDER) (MINUTE) (TIME-DIVIDER) (SECONDP) (AM-PM) (DATE-DIVIDER) (ZONE) (TIME-DIVIDER) (ZONE-MINUTE)))))");
        }

      } finally {
        Stella.$CONTEXT$.set(old$Context$000);
        Stella.$MODULE$.set(old$Module$000);
      }
    }
  }

}
