;;; -*- Mode: Lisp; Package: STELLA; Syntax: COMMON-LISP; Base: 10 -*-

#|--------------------------------------------------------------------------+
 |                                                                          |
 |  COPYRIGHT (C) UNIVERSITY OF SOUTHERN CALIFORNIA, 1997                   | 
 |  University of Southern California, Information Sciences Institute       |
 |  4676 Admiralty Way                                                      |
 |  Marina Del Rey, California 90292                                        |
 |                                                                          |
 |  This software was developed under the terms and conditions of Contract  |
 |  No. N00014-94-C-0245 between the Defense Advanced Research Projects     |
 |  Agency and the University of Southern California, Information Sciences  | 
 |  Institute.  Use and distribution of this software is further subject    |
 |  to the provisions of that contract and any other agreements developed   |
 |  between the user of the software and the University of Southern         |
 |  California, Information Sciences Institute.  It is supplied "AS IS",    |
 |  without any warranties of any kind.  It is furnished only on the basis  |
 |  that any party who receives it indemnifies and holds harmless the       |
 |  parties who furnish and originate it against any claims, demands, or    |
 |  liabilities connected with using it, furnishing it to others or         |
 |  providing it to a third party.  THIS NOTICE MUST NOT BE REMOVED FROM    |
 |  THE SOFTWARE, AND IN THE EVENT THAT THE SOFTWARE IS DIVIDED, IT SHOULD  |
 |  BE ATTACHED TO EVERY PART.                                              |
 |                                                                          |
 +--------------------------------------------------------------------------|#

(CL:IN-PACKAGE "STELLA")

;;; Auxiliary variables:

(CL:DEFVAR SGT-PRINT-DESCRIPTION NULL)
(CL:DEFVAR SGT-PRINT-PATTERN-VARIABLE NULL)
(CL:DEFVAR SGT-PRINT-SKOLEM NULL)
(CL:DEFVAR SGT-PRINT-LOGIC-OBJECT NULL)
(CL:DEFVAR SGT-PRINT-PROPOSITION NULL)
(CL:DEFVAR KWD-PRINT-FLAT NULL)
(CL:DEFVAR SYM-PRINT-*PRINTMODE* NULL)
(CL:DEFVAR SYM-PRINT-SURROGATE-VALUE-INVERSE NULL)
(CL:DEFVAR SGT-PRINT-UNKNOWN NULL)
(CL:DEFVAR SYM-PRINT-*SKOLEMNAMEMAPPINGTABLE* NULL)
(CL:DEFVAR SYM-PRINT-SKOLEM-NAME NULL)
(CL:DEFVAR KWD-PRINT-REALISTIC NULL)
(CL:DEFVAR KWD-PRINT-ORIGINAL NULL)
(CL:DEFVAR KWD-PRINT-DEBUG-LOW NULL)
(CL:DEFVAR KWD-PRINT-DEBUG-HIGH NULL)
(CL:DEFVAR SGT-PRINT-RELATION NULL)
(CL:DEFVAR SYM-PRINT-DESCRIPTION NULL)
(CL:DEFVAR SGT-PRINT-SUBQUERY-FRAME NULL)
(CL:DEFVAR SYM-PRINT-*PRINTINFRAME* NULL)
(CL:DEFVAR SYM-PRINT-DEFINITION NULL)

;;; Forward declarations:

(CL:DECLAIM
 (CL:SPECIAL
  *MODULE*
  *QUERYENVIRONMENT*
  TRUE-TRUTH-VALUE
  FALSE-TRUTH-VALUE
  STANDARD-OUTPUT))

;;; (DEFGLOBAL *NON-STANDARD-OUTPUT-STREAM-WRAPPER* ...)

(CL:DEFVAR *NON-STANDARD-OUTPUT-STREAM-WRAPPER* NULL
  "Used by 'print-top-level-object' to pass 
a native stream to routines that require a STELLA stream.")

;;; (DEFUN PRINT-TOP-LEVEL-OBJECT ...)

(CL:DEFUN PRINT-TOP-LEVEL-OBJECT (SELF NATIVESTREAM)
  (CL:LET*
   ((STREAM STANDARD-OUTPUT))
   (CL:WHEN
    (CL:NOT
     (CL:EQ
      NATIVESTREAM
      (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STANDARD-OUTPUT)))
    (CL:SETF
     (CLSYS-SVAL
      OUTPUT-STREAM
      NATIVE-STREAM
      *NON-STANDARD-OUTPUT-STREAM-WRAPPER*)
     NATIVESTREAM)
    (CL:SETQ STREAM *NON-STANDARD-OUTPUT-STREAM-WRAPPER*))
   (CL:WHEN
    (CL:EQ (DELETED? SELF) 1)
    (CL:WRITE-STRING
     "#DELETED#"
     (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))
   (CL:LET*
    ((SELF-001 SELF))
    (CL:COND
     ((CL:EQ (TAXONOMY-ISA? SELF SGT-PRINT-DESCRIPTION) 1)
      (CL:LET*
       ((SELF NULL))
       (CL:SETQ SELF SELF-001)
       (PRINT-DESCRIPTION SELF STREAM TRUE)))
     ((CL:EQ (TAXONOMY-ISA? SELF SGT-PRINT-PATTERN-VARIABLE) 1)
      (CL:LET*
       ((SELF NULL))
       (CL:SETQ SELF SELF-001)
       (CL:WRITE-STRING "|V|" (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))
       (PRINT-VARIABLE SELF STREAM)))
     ((CL:EQ (TAXONOMY-ISA? SELF SGT-PRINT-SKOLEM) 1)
      (CL:LET*
       ((SELF NULL))
       (CL:SETQ SELF SELF-001)
       (PRINT-SKOLEM SELF STREAM TRUE)))
     ((CL:EQ (TAXONOMY-ISA? SELF SGT-PRINT-LOGIC-OBJECT) 1)
      (CL:LET*
       ((SELF NULL))
       (CL:SETQ SELF SELF-001)
       (PRINT-LOGIC-OBJECT SELF STREAM TRUE)))
     ((CL:EQ (TAXONOMY-ISA? SELF SGT-PRINT-PROPOSITION) 1)
      (CL:LET*
       ((SELF NULL))
       (CL:SETQ SELF SELF-001)
       (PRINT-PROPOSITION SELF STREAM TRUE)))
     (CL:T
      (PRINT-OBJECT SELF (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))))
   (CL:SETF
    (CLSYS-SVAL
     OUTPUT-STREAM
     NATIVE-STREAM
     *NON-STANDARD-OUTPUT-STREAM-WRAPPER*)
    NULL))
  :VOID)

;;; (DEFSPECIAL *PRINTMODE* ...)

(CL:DEFVAR *PRINTMODE* NULL
  "Controls the kind of detail that gets printed about
individual objects.  Values are :ORIGINAL, :REALISTIC, :FLAT, :DEBUG-LOW, and
 :DEBUG-HIGH.")

(CL:DEFUN READ-*PRINTMODE* ()
  (CL:RETURN-FROM READ-*PRINTMODE* *PRINTMODE*)
  :VOID)

(CL:DEFUN WRITE-*PRINTMODE* (VALUE)
  (CL:SETQ *PRINTMODE* VALUE)
  (CL:RETURN-FROM WRITE-*PRINTMODE* VALUE)
  :VOID)

;;; (DEFUN PRINT-OBJECT-NAME ...)

(CL:DEFUN PRINT-OBJECT-NAME (SELF STREAM)
  (CL:LET*
   ((SELF-001 SELF))
   (CL:COND
    ((CL:EQ (TAXONOMY-ISA? SELF SGT-PRINT-SKOLEM) 1)
     (CL:LET*
      ((SELF NULL))
      (CL:SETQ SELF SELF-001)
      (CL:WRITE-STRING
       (STRING-DOWNCASE (GET-SKOLEM-PRINT-NAME SELF))
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
    ((CL:EQ (TAXONOMY-ISA? SELF SGT-PRINT-LOGIC-OBJECT) 1)
     (CL:LET*
      ((SELF NULL))
      (CL:SETQ SELF SELF-001)
      (PRINT-LOGIC-OBJECT SELF STREAM FALSE)))
    ((CL:EQ (INTEGER? SELF) 1)
     (CL:LET*
      ((SELF NULL))
      (CL:SETQ SELF SELF-001)
      (CL:PRINC
       (CLSYS-SVAL INTEGER-WRAPPER WRAPPER-VALUE SELF)
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
    ((CL:EQ (FLOAT? SELF) 1)
     (CL:LET*
      ((SELF NULL))
      (CL:SETQ SELF SELF-001)
      (CL:PRINC
       (CLSYS-SVAL FLOAT-WRAPPER WRAPPER-VALUE SELF)
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
    ((CL:EQ (STRING? SELF) 1)
     (CL:LET*
      ((SELF NULL))
      (CL:SETQ SELF SELF-001)
      (CL:WRITE-STRING
       (CLSYS-SVAL STRING-WRAPPER WRAPPER-VALUE SELF)
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
    (CL:T (PRINT-OBJECT SELF (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))))
  :VOID)

;;; (DEFUN PRINT-LOGIC-OBJECT ...)

(CL:DEFUN PRINT-LOGIC-OBJECT (SELF STREAM TOPLEVEL?)
  (CL:LET*
   ((PREFIX (CL:IF (CL:EQ TOPLEVEL? 1) "|i|" "")))
   (CL:COND
    ((CL:NOT
      (CL:EQ
       (DYNAMIC-SLOT-VALUE SELF SYM-PRINT-SURROGATE-VALUE-INVERSE NULL)
       NULL))
     (CL:WHEN
      (CL:NOT
       (CL:EQ
        (CLSYS-SVAL
         SURROGATE
         SURROGATE-VALUE
         (DYNAMIC-SLOT-VALUE SELF SYM-PRINT-SURROGATE-VALUE-INVERSE NULL))
        SELF))
      (CL:SETQ PREFIX "|BAD|"))
     (CL:LET
      ((%%STREAM (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))
      (CL:WRITE-STRING PREFIX %%STREAM)
      (CL:WRITE-STRING
       (CLSYS-SVAL
        SURROGATE
        SYMBOL-NAME
        (DYNAMIC-SLOT-VALUE SELF SYM-PRINT-SURROGATE-VALUE-INVERSE NULL))
       %%STREAM)))
    ((CL:EQ SELF TRUE-TRUTH-VALUE)
     (CL:WRITE-STRING
      "TRUE-TV"
      (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))
    ((CL:EQ SELF FALSE-TRUTH-VALUE)
     (CL:WRITE-STRING
      "FALSE-TV"
      (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))
    (CL:T
     (CL:IF
      (CL:NOT (CL:EQ (CLSYS-SVAL LOGIC-OBJECT ROOT-TYPE SELF) NULL))
      (CL:LET
       ((%%STREAM (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))
       (CL:WRITE-STRING PREFIX %%STREAM)
       (CL:WRITE-STRING "_" %%STREAM)
       (CL:WRITE-STRING
        (CLSYS-SVAL
         SURROGATE
         SYMBOL-NAME
         (CLSYS-SVAL LOGIC-OBJECT ROOT-TYPE SELF))
        %%STREAM))
      (CL:LET
       ((%%STREAM (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))
       (CL:WRITE-STRING PREFIX %%STREAM)
       (CL:WRITE-STRING "_" %%STREAM)
       (CL:WRITE-STRING
        (CLSYS-SVAL SURROGATE SYMBOL-NAME SGT-PRINT-UNKNOWN)
        %%STREAM))))))
  :VOID)

;;; (DEFCONSTANT VARIABLE-BINDING-SEPARATOR ...)

(CL:DEFVAR VARIABLE-BINDING-SEPARATOR "/")

;;; (DEFCONSTANT VALUE-OF-SEPARATOR ...)

(CL:DEFVAR VALUE-OF-SEPARATOR "//")

;;; (DEFSPECIAL *SKOLEMNAMEMAPPINGTABLE* ...)

(CL:DEFVAR *SKOLEMNAMEMAPPINGTABLE* NULL
  "If set, maps some skolems to names other than
their own.")

(CL:DEFUN READ-*SKOLEMNAMEMAPPINGTABLE* ()
  (CL:RETURN-FROM READ-*SKOLEMNAMEMAPPINGTABLE* *SKOLEMNAMEMAPPINGTABLE*)
  :VOID)

(CL:DEFUN WRITE-*SKOLEMNAMEMAPPINGTABLE* (VALUE)
  (CL:SETQ *SKOLEMNAMEMAPPINGTABLE* VALUE)
  (CL:RETURN-FROM WRITE-*SKOLEMNAMEMAPPINGTABLE* VALUE)
  :VOID)

;;; (DEFUN (GET-SKOLEM-PRINT-NAME STRING) ...)

(CL:DEFUN GET-SKOLEM-PRINT-NAME (SELF)
  (CL:IF
   (CL:NOT (CL:EQ *SKOLEMNAMEMAPPINGTABLE* NULL))
   (CL:LET*
    ((SUBSTITUTESKOLEM (LOOKUP *SKOLEMNAMEMAPPINGTABLE* SELF)))
    (CL:RETURN-FROM
     GET-SKOLEM-PRINT-NAME
     (CLSYS-SVAL
      SYMBOL
      SYMBOL-NAME
      (CL:IF
       (CL:NOT (CL:EQ SUBSTITUTESKOLEM NULL))
       (DYNAMIC-SLOT-VALUE SUBSTITUTESKOLEM SYM-PRINT-SKOLEM-NAME NULL)
       (DYNAMIC-SLOT-VALUE SELF SYM-PRINT-SKOLEM-NAME NULL)))))
   (CL:RETURN-FROM
    GET-SKOLEM-PRINT-NAME
    (CLSYS-SVAL
     SYMBOL
     SYMBOL-NAME
     (DYNAMIC-SLOT-VALUE SELF SYM-PRINT-SKOLEM-NAME NULL))))
  :VOID)

;;; (DEFUN PRINT-VALUE-OF-CHAIN ...)

(CL:DEFUN PRINT-VALUE-OF-CHAIN (SELF STREAM CHAINEND)
  (CL:WHEN (CL:EQ CHAINEND NULL) (CL:SETQ CHAINEND SELF))
  (CL:COND
   ((CL:OR
     (CL:EQ *PRINTMODE* KWD-PRINT-REALISTIC)
     (CL:EQ *PRINTMODE* KWD-PRINT-ORIGINAL))
    (PRINT-OBJECT-NAME CHAINEND STREAM))
   ((CL:OR
     (CL:EQ *PRINTMODE* KWD-PRINT-FLAT)
     (CL:EQ *PRINTMODE* KWD-PRINT-DEBUG-LOW))
    (CL:WRITE-STRING
     (STRING-DOWNCASE (GET-SKOLEM-PRINT-NAME SELF))
     (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))
    (CL:WHEN (CL:EQ SELF CHAINEND) (CL:RETURN-FROM PRINT-VALUE-OF-CHAIN))
    (CL:WRITE-STRING
     VALUE-OF-SEPARATOR
     (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))
    (PRINT-OBJECT-NAME CHAINEND STREAM))
   ((CL:EQ *PRINTMODE* KWD-PRINT-DEBUG-HIGH)
    (CL:WRITE-STRING
     (GET-SKOLEM-PRINT-NAME SELF)
     (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))
    (CL:WHEN (CL:EQ SELF CHAINEND) (CL:RETURN-FROM PRINT-VALUE-OF-CHAIN))
    (CL:LET*
     ((CURSOR SELF) (NEXTVALUE NULL))
     (CL:LOOP
      (CL:LET*
       ((CURSOR-001 CURSOR))
       (CL:COND
        ((CL:EQ (TAXONOMY-ISA? CURSOR SGT-PRINT-LOGIC-OBJECT) 1)
         (CL:LET*
          ((CURSOR NULL))
          (CL:SETQ CURSOR CURSOR-001)
          (CL:SETQ
           NEXTVALUE
           (ACCESS-IN-CONTEXT
            (CLSYS-SVAL LOGIC-OBJECT VARIABLE-VALUE CURSOR)
            CURSOR
            FALSE))))
        ((CL:EQ (SURROGATE? CURSOR) 1)
         (CL:LET*
          ((CURSOR NULL))
          (CL:SETQ CURSOR CURSOR-001)
          (CL:SETQ NEXTVALUE (CLSYS-SVAL SURROGATE SURROGATE-VALUE CURSOR))))
        ((CL:EQ (TAXONOMY-ISA? CURSOR SGT-PRINT-RELATION) 1)
         (CL:LET*
          ((CURSOR NULL))
          (CL:SETQ CURSOR CURSOR-001)
          (CL:SETQ
           NEXTVALUE
           (DYNAMIC-SLOT-VALUE CURSOR SYM-PRINT-DESCRIPTION NULL))))
        (CL:T (CL:ERROR "`~A' is not a valid case option" CURSOR))))
      (CL:WRITE-STRING
       VALUE-OF-SEPARATOR
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))
      (PRINT-OBJECT-NAME NEXTVALUE STREAM)
      (CL:WHEN (CL:EQ (EQL? NEXTVALUE CHAINEND) 1) (CL:RETURN))
      (CL:SETQ CURSOR NEXTVALUE))))
   (CL:T (CL:ERROR "`~A' is not a valid case option" *PRINTMODE*)))
  :VOID)

;;; (DEFUN PRINT-VALUE ...)

(CL:DEFUN PRINT-VALUE (SELF STREAM)
  (CL:LET*
   ((SELF-001 SELF))
   (CL:COND
    ((CL:EQ (INTEGER? SELF) 1)
     (CL:LET*
      ((SELF NULL))
      (CL:SETQ SELF SELF-001)
      (CL:PRINC
       (CLSYS-SVAL INTEGER-WRAPPER WRAPPER-VALUE SELF)
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
    ((CL:EQ (FLOAT? SELF) 1)
     (CL:LET*
      ((SELF NULL))
      (CL:SETQ SELF SELF-001)
      (CL:PRINC
       (CLSYS-SVAL FLOAT-WRAPPER WRAPPER-VALUE SELF)
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
    ((CL:EQ (STRING? SELF) 1)
     (CL:LET*
      ((SELF NULL))
      (CL:SETQ SELF SELF-001)
      (CL:WRITE-STRING
       (CLSYS-SVAL STRING-WRAPPER WRAPPER-VALUE SELF)
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
    ((CL:EQ (CHARACTER? SELF) 1)
     (CL:LET*
      ((SELF NULL))
      (CL:SETQ SELF SELF-001)
      (CL:PRINC
       (CLSYS-SVAL CHARACTER-WRAPPER WRAPPER-VALUE SELF)
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
    (CL:T (PRINT-OBJECT SELF (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))))
  :VOID)

;;; (DEFUN PRINT-SKOLEM ...)

(CL:DEFUN PRINT-SKOLEM (SELF STREAM TOPLEVEL?)
  (CL:LET*
   ((PREFIX "|SK|"))
   (CL:COND
    ((CL:OR
      (CL:EQ *PRINTMODE* KWD-PRINT-ORIGINAL)
      (CL:EQ *PRINTMODE* KWD-PRINT-REALISTIC))
     (CL:SETQ PREFIX "")
     (CL:WHEN
      (CL:NOT (CL:EQ (NATIVE-VALUE-OF SELF) NULL))
      (PRINT-VALUE (NATIVE-VALUE-OF SELF) STREAM)
      (CL:RETURN-FROM PRINT-SKOLEM)))
    (CL:T NULL))
   (CL:WHEN
    (CL:AND
     (CL:NOT (CL:EQ (CLSYS-SVAL SKOLEM DEFINING-PROPOSITION SELF) NULL))
     (CL:EQ
      (ACCESS-IN-CONTEXT
       (CLSYS-SVAL LOGIC-OBJECT VARIABLE-VALUE SELF)
       SELF
       FALSE)
      NULL))
    (CL:WRITE-STRING PREFIX (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))
    (CL:LET*
     ((*PRINTLOGICALFORMSTREAM* STREAM) (*INDENTCOUNTER* 20))
     (CL:DECLARE (CL:SPECIAL *PRINTLOGICALFORMSTREAM* *INDENTCOUNTER*))
     (PRINT-KIF-FUNCTION-EXPRESSION
      (CLSYS-SVAL SKOLEM DEFINING-PROPOSITION SELF)))
    (CL:RETURN-FROM PRINT-SKOLEM))
   (PRINT-VALUE-OF-CHAIN SELF STREAM (INNERMOST-OF SELF)))
  :VOID)

;;; (DEFUN (BOUND-TO-IN-FRAME OBJECT) ...)

(CL:DEFUN BOUND-TO-IN-FRAME (SELF FRAME)
  (CL:IF
   (CL:EQ (CLSYS-SVAL CONTROL-FRAME PARENT-PATTERN-FRAME FRAME) NULL)
   (CL:RETURN-FROM BOUND-TO-IN-FRAME NULL)
   (CL:RETURN-FROM
    BOUND-TO-IN-FRAME
    (CL:AREF
     (CLSYS-SVAL
      VECTOR
      THE-ARRAY
      (CLSYS-SVAL QUERY-ENVIRONMENT VARIABLE-FRAME-STACK *QUERYENVIRONMENT*))
     (CL:+
      (CLSYS-SVAL
       SUBQUERY-FRAME
       LOCAL-VARIABLE-FRAME-OFFSET
       (CAST
        (CLSYS-SVAL
         CONTROL-FRAME
         ITERATOR
         (CLSYS-SVAL CONTROL-FRAME PARENT-PATTERN-FRAME FRAME))
        SGT-PRINT-SUBQUERY-FRAME))
      (CLSYS-SVAL PATTERN-VARIABLE BOUND-TO-OFFSET SELF)))))
  :VOID)

;;; (DEFSPECIAL *PRINTINFRAME* ...)

(CL:DEFVAR *PRINTINFRAME* NULL
  "If set, controls diagnostic printing by making
variable bindings appear relative to the frame '*printInFrame*'.")

(CL:DEFUN READ-*PRINTINFRAME* ()
  (CL:RETURN-FROM READ-*PRINTINFRAME* *PRINTINFRAME*)
  :VOID)

(CL:DEFUN WRITE-*PRINTINFRAME* (VALUE)
  (CL:SETQ *PRINTINFRAME* VALUE)
  (CL:RETURN-FROM WRITE-*PRINTINFRAME* VALUE)
  :VOID)

;;; (DEFUN PRINT-VARIABLE ...)

(CL:DEFUN PRINT-VARIABLE (SELF STREAM)
  (CL:WHEN
   (CL:AND
    (CL:EQ (DEFINED? (CLSYS-SVAL PATTERN-VARIABLE BOUND-TO-OFFSET SELF)) 1)
    (CL:NOT (CL:EQ *QUERYENVIRONMENT* NULL)))
   (CL:LET*
    ((VALUE
      (CL:IF
       (CL:NOT (CL:EQ *PRINTINFRAME* NULL))
       (BOUND-TO-IN-FRAME SELF *PRINTINFRAME*)
       (BOUND-TO SELF))))
    (CL:WHEN
     (CL:NOT (CL:EQ VALUE NULL))
     (CL:LET
      ((%%STREAM (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))
      (CL:WRITE-STRING
       (STRING-DOWNCASE (GET-SKOLEM-PRINT-NAME SELF))
       %%STREAM)
      (CL:WRITE-STRING VARIABLE-BINDING-SEPARATOR %%STREAM))
     (CL:IF
      (CL:EQ (ISA? VALUE SGT-PRINT-PATTERN-VARIABLE) 1)
      (CL:WRITE-STRING
       (GET-SKOLEM-PRINT-NAME (CAST VALUE SGT-PRINT-SKOLEM))
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))
      (PRINT-TOP-LEVEL-OBJECT
       VALUE
       (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM)))
     (CL:RETURN-FROM PRINT-VARIABLE))))
  (PRINT-VALUE-OF-CHAIN SELF STREAM (INNERMOST-OF SELF))
  :VOID)

;;; (DEFUN PRINT-QUANTIFIED-VARIABLE ...)

(CL:DEFUN PRINT-QUANTIFIED-VARIABLE (SELF STREAM)
  (PRINT-VARIABLE SELF STREAM)
  :VOID)

;;; (DEFUN PRINT-PROPOSITION ...)

(CL:DEFUN PRINT-PROPOSITION (SELF STREAM TOPLEVEL?)
  (CL:LET*
   ((PREFIX NULL))
   (CL:WHEN
    (CL:EQ TOPLEVEL? 1)
    (CL:COND
     ((CL:EQ (TRUE? SELF) 1) (CL:SETQ PREFIX "|P|"))
     ((CL:EQ (FALSE? SELF) 1) (CL:SETQ PREFIX "|P~|"))
     (CL:T (CL:SETQ PREFIX "|P?|"))))
   (CL:WHEN
    (CL:AND
     (CL:NOT
      (CL:EQ
       (DYNAMIC-SLOT-VALUE SELF SYM-PRINT-SURROGATE-VALUE-INVERSE NULL)
       NULL))
     (CL:NOT
      (CL:EQ
       (CLSYS-SVAL
        SURROGATE
        SURROGATE-VALUE
        (DYNAMIC-SLOT-VALUE SELF SYM-PRINT-SURROGATE-VALUE-INVERSE NULL))
       SELF)))
    (CL:SETQ PREFIX "|BAD|"))
   (CL:WHEN
    (CL:NOT (CL:EQ PREFIX NULL))
    (CL:WRITE-STRING PREFIX (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
  (PRINT-LOGICAL-FORM SELF STREAM)
  :VOID)

;;; (DEFUN PRINT-DESCRIPTION ...)

(CL:DEFUN PRINT-DESCRIPTION (SELF STREAM TOPLEVEL?)
  (CL:WHEN
   (CL:EQ TOPLEVEL? 1)
   (CL:IF
    (CL:AND
     (CL:NOT (CL:EQ (CLSYS-SVAL DESCRIPTION NATIVE-RELATION SELF) NULL))
     (CL:EQ
      (DYNAMIC-SLOT-VALUE
       (CLSYS-SVAL DESCRIPTION NATIVE-RELATION SELF)
       SYM-PRINT-DEFINITION
       NULL)
      SELF))
    (CL:WRITE-STRING "|D=|" (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))
    (CL:WRITE-STRING "|D|" (CLSYS-SVAL OUTPUT-STREAM NATIVE-STREAM STREAM))))
  (PRINT-LOGICAL-FORM SELF STREAM)
  :VOID)

(CL:DEFUN STARTUP-PRINT ()
  (CL:LET*
   ((*MODULE* (GET-MODULE "/LOGIC" TRUE)) (*CONTEXT* *MODULE*))
   (CL:DECLARE (CL:SPECIAL *MODULE* *CONTEXT*))
   (CL:WHEN
    (CL:EQ (CURRENT-STARTUP-TIME-PHASE? 2) 1)
    (CL:SETQ
     SGT-PRINT-DESCRIPTION
     (INTERN-RIGID-SYMBOL-WRT-MODULE "DESCRIPTION" NULL 1))
    (CL:SETQ
     SGT-PRINT-PATTERN-VARIABLE
     (INTERN-RIGID-SYMBOL-WRT-MODULE "PATTERN-VARIABLE" NULL 1))
    (CL:SETQ
     SGT-PRINT-SKOLEM
     (INTERN-RIGID-SYMBOL-WRT-MODULE "SKOLEM" NULL 1))
    (CL:SETQ
     SGT-PRINT-LOGIC-OBJECT
     (INTERN-RIGID-SYMBOL-WRT-MODULE "LOGIC-OBJECT" NULL 1))
    (CL:SETQ
     SGT-PRINT-PROPOSITION
     (INTERN-RIGID-SYMBOL-WRT-MODULE "PROPOSITION" NULL 1))
    (CL:SETQ KWD-PRINT-FLAT (INTERN-RIGID-SYMBOL-WRT-MODULE "FLAT" NULL 2))
    (CL:SETQ
     SYM-PRINT-*PRINTMODE*
     (INTERN-RIGID-SYMBOL-WRT-MODULE "*PRINTMODE*" NULL 0))
    (CL:SETQ
     SYM-PRINT-SURROGATE-VALUE-INVERSE
     (INTERN-RIGID-SYMBOL-WRT-MODULE "SURROGATE-VALUE-INVERSE" NULL 0))
    (CL:SETQ
     SGT-PRINT-UNKNOWN
     (INTERN-RIGID-SYMBOL-WRT-MODULE "UNKNOWN" (GET-MODULE "/STELLA" TRUE) 1))
    (CL:SETQ
     SYM-PRINT-*SKOLEMNAMEMAPPINGTABLE*
     (INTERN-RIGID-SYMBOL-WRT-MODULE "*SKOLEMNAMEMAPPINGTABLE*" NULL 0))
    (CL:SETQ
     SYM-PRINT-SKOLEM-NAME
     (INTERN-RIGID-SYMBOL-WRT-MODULE "SKOLEM-NAME" NULL 0))
    (CL:SETQ
     KWD-PRINT-REALISTIC
     (INTERN-RIGID-SYMBOL-WRT-MODULE "REALISTIC" NULL 2))
    (CL:SETQ
     KWD-PRINT-ORIGINAL
     (INTERN-RIGID-SYMBOL-WRT-MODULE "ORIGINAL" NULL 2))
    (CL:SETQ
     KWD-PRINT-DEBUG-LOW
     (INTERN-RIGID-SYMBOL-WRT-MODULE "DEBUG-LOW" NULL 2))
    (CL:SETQ
     KWD-PRINT-DEBUG-HIGH
     (INTERN-RIGID-SYMBOL-WRT-MODULE "DEBUG-HIGH" NULL 2))
    (CL:SETQ
     SGT-PRINT-RELATION
     (INTERN-RIGID-SYMBOL-WRT-MODULE
      "RELATION"
      (GET-MODULE "/STELLA" TRUE)
      1))
    (CL:SETQ
     SYM-PRINT-DESCRIPTION
     (INTERN-RIGID-SYMBOL-WRT-MODULE "DESCRIPTION" NULL 0))
    (CL:SETQ
     SGT-PRINT-SUBQUERY-FRAME
     (INTERN-RIGID-SYMBOL-WRT-MODULE "SUBQUERY-FRAME" NULL 1))
    (CL:SETQ
     SYM-PRINT-*PRINTINFRAME*
     (INTERN-RIGID-SYMBOL-WRT-MODULE "*PRINTINFRAME*" NULL 0))
    (CL:SETQ
     SYM-PRINT-DEFINITION
     (INTERN-RIGID-SYMBOL-WRT-MODULE "DEFINITION" NULL 0)))
   (CL:WHEN
    (CL:EQ (CURRENT-STARTUP-TIME-PHASE? 4) 1)
    (CL:SETQ *NON-STANDARD-OUTPUT-STREAM-WRAPPER* (NEW-OUTPUT-STREAM))
    (CL:SETQ *PRINTMODE* KWD-PRINT-FLAT))
   (CL:WHEN (CL:EQ (CURRENT-STARTUP-TIME-PHASE? 6) 1) (FINALIZE-CLASSES))
   (CL:WHEN
    (CL:EQ (CURRENT-STARTUP-TIME-PHASE? 7) 1)
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-TOP-LEVEL-OBJECT"
        "OBJECT"
        "(DEFUN PRINT-TOP-LEVEL-OBJECT ((SELF OBJECT) (NATIVESTREAM NATIVE-OUTPUT-STREAM)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-TOP-LEVEL-OBJECT)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-OBJECT-NAME"
        "OBJECT"
        "(DEFUN PRINT-OBJECT-NAME ((SELF OBJECT) (STREAM OUTPUT-STREAM)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-OBJECT-NAME)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-LOGIC-OBJECT"
        "LOGIC-OBJECT"
        "(DEFUN PRINT-LOGIC-OBJECT ((SELF LOGIC-OBJECT) (STREAM OUTPUT-STREAM) (TOPLEVEL? BOOLEAN)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-LOGIC-OBJECT)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "GET-SKOLEM-PRINT-NAME"
        "SKOLEM"
        "(DEFUN (GET-SKOLEM-PRINT-NAME STRING) ((SELF SKOLEM)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION GET-SKOLEM-PRINT-NAME)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-VALUE-OF-CHAIN"
        "SKOLEM"
        "(DEFUN PRINT-VALUE-OF-CHAIN ((SELF SKOLEM) (STREAM OUTPUT-STREAM) (CHAINEND OBJECT)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-VALUE-OF-CHAIN)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-VALUE"
        "OBJECT"
        "(DEFUN PRINT-VALUE ((SELF OBJECT) (STREAM OUTPUT-STREAM)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-VALUE)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-SKOLEM"
        "SKOLEM"
        "(DEFUN PRINT-SKOLEM ((SELF SKOLEM) (STREAM OUTPUT-STREAM) (TOPLEVEL? BOOLEAN)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-SKOLEM)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "BOUND-TO-IN-FRAME"
        "PATTERN-VARIABLE"
        "(DEFUN (BOUND-TO-IN-FRAME OBJECT) ((SELF PATTERN-VARIABLE) (FRAME CONTROL-FRAME)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION BOUND-TO-IN-FRAME)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-VARIABLE"
        "PATTERN-VARIABLE"
        "(DEFUN PRINT-VARIABLE ((SELF PATTERN-VARIABLE) (STREAM OUTPUT-STREAM)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-VARIABLE)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-QUANTIFIED-VARIABLE"
        "PATTERN-VARIABLE"
        "(DEFUN PRINT-QUANTIFIED-VARIABLE ((SELF PATTERN-VARIABLE) (STREAM OUTPUT-STREAM)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-QUANTIFIED-VARIABLE)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-PROPOSITION"
        "PROPOSITION"
        "(DEFUN PRINT-PROPOSITION ((SELF PROPOSITION) (STREAM OUTPUT-STREAM) (TOPLEVEL? BOOLEAN)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-PROPOSITION)))
    (CL:LET*
     ((METHOD
       (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
        "PRINT-DESCRIPTION"
        "DESCRIPTION"
        "(DEFUN PRINT-DESCRIPTION ((SELF DESCRIPTION) (STREAM OUTPUT-STREAM) (TOPLEVEL? BOOLEAN)))")))
     (CL:SETF
      (CLSYS-SVAL METHOD-SLOT FUNCTION-CODE METHOD)
      (CL:FUNCTION PRINT-DESCRIPTION)))
    (DEFINE-METHOD-FROM-STRINGIFIED-SOURCE
     "STARTUP-PRINT"
     NULL
     "(DEFUN STARTUP-PRINT ())"))
   (CL:WHEN
    (CL:EQ (CURRENT-STARTUP-TIME-PHASE? 8) 1)
    (FINALIZE-SLOTS)
    (CLEANUP-UNFINALIZED-CLASSES))
   (CL:WHEN
    (CL:EQ (CURRENT-STARTUP-TIME-PHASE? 9) 1)
    (DEFINE-STELLA-GLOBAL-VARIABLE-FROM-STRINGIFIED-SOURCE
     "(DEFGLOBAL *NON-STANDARD-OUTPUT-STREAM-WRAPPER* OUTPUT-STREAM (NEW OUTPUT-STREAM) :DOCUMENTATION \"Used by 'print-top-level-object' to pass 
a native stream to routines that require a STELLA stream.\")")
    (DEFINE-STELLA-GLOBAL-VARIABLE-FROM-STRINGIFIED-SOURCE
     "(DEFSPECIAL *PRINTMODE* KEYWORD :FLAT :DOCUMENTATION \"Controls the kind of detail that gets printed about
individual objects.  Values are :ORIGINAL, :REALISTIC, :FLAT, :DEBUG-LOW, and
 :DEBUG-HIGH.\")")
    (CL:LET*
     ((GLOBAL (LOOKUP-GLOBAL-VARIABLE SYM-PRINT-*PRINTMODE*)))
     (CL:SETF
      (CLSYS-SVAL GLOBAL-VARIABLE VARIABLE-GET-VALUE-CODE GLOBAL)
      (CL:FUNCTION READ-*PRINTMODE*))
     (CL:SETF
      (CLSYS-SVAL GLOBAL-VARIABLE VARIABLE-SET-VALUE-CODE GLOBAL)
      (CL:FUNCTION WRITE-*PRINTMODE*)))
    (DEFINE-STELLA-GLOBAL-VARIABLE-FROM-STRINGIFIED-SOURCE
     "(DEFCONSTANT VARIABLE-BINDING-SEPARATOR STRING \"/\")")
    (DEFINE-STELLA-GLOBAL-VARIABLE-FROM-STRINGIFIED-SOURCE
     "(DEFCONSTANT VALUE-OF-SEPARATOR STRING \"//\")")
    (DEFINE-STELLA-GLOBAL-VARIABLE-FROM-STRINGIFIED-SOURCE
     "(DEFSPECIAL *SKOLEMNAMEMAPPINGTABLE* (KEY-VALUE-LIST OF SKOLEM SKOLEM) NULL :DOCUMENTATION \"If set, maps some skolems to names other than
their own.\")")
    (CL:LET*
     ((GLOBAL (LOOKUP-GLOBAL-VARIABLE SYM-PRINT-*SKOLEMNAMEMAPPINGTABLE*)))
     (CL:SETF
      (CLSYS-SVAL GLOBAL-VARIABLE VARIABLE-GET-VALUE-CODE GLOBAL)
      (CL:FUNCTION READ-*SKOLEMNAMEMAPPINGTABLE*))
     (CL:SETF
      (CLSYS-SVAL GLOBAL-VARIABLE VARIABLE-SET-VALUE-CODE GLOBAL)
      (CL:FUNCTION WRITE-*SKOLEMNAMEMAPPINGTABLE*)))
    (DEFINE-STELLA-GLOBAL-VARIABLE-FROM-STRINGIFIED-SOURCE
     "(DEFSPECIAL *PRINTINFRAME* CONTROL-FRAME NULL :DOCUMENTATION \"If set, controls diagnostic printing by making
variable bindings appear relative to the frame '*printInFrame*'.\")")
    (CL:LET*
     ((GLOBAL (LOOKUP-GLOBAL-VARIABLE SYM-PRINT-*PRINTINFRAME*)))
     (CL:SETF
      (CLSYS-SVAL GLOBAL-VARIABLE VARIABLE-GET-VALUE-CODE GLOBAL)
      (CL:FUNCTION READ-*PRINTINFRAME*))
     (CL:SETF
      (CLSYS-SVAL GLOBAL-VARIABLE VARIABLE-SET-VALUE-CODE GLOBAL)
      (CL:FUNCTION WRITE-*PRINTINFRAME*)))))
  :VOID)
